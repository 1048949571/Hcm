{"version":3,"sources":["webpack:///./app/widget/index/Brand/ClientDetail/main.js"],"names":["App","props","onShow","id","console","log","setState","visible","getDealerInfo","onClose","activity","date","moment","subtract","show","list","abnormalOrders","getMonth","state","salesData","pageNo","pageSize","axios","get","params","dealer_id","then","res","data","status","message","content","pageNumber","totalNum","totalElements","catch","error","getActivityList","length","start_time","format","end_time","getAbnormalOrdersList","dealerid","LoadingModal","bl","method","url","fieldSource","module","diyList","add","activeKey","baseInfo","getAuthorizedShops","authorizedShops","onTabsChange","onSalesDataPagination","page","onSalesDataPaginationSize","current","size","activityRangePicker","e","abnormalOrdersRangePicker","dealername","contact","dutynumber","take_people","address","creditscore","memo_dealername","zssj","authorize_num","authorize_start","authorize_end","React","Component"],"mappings":"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","file":"js/chunk/55_4799d34951b763d1c10e.js","sourcesContent":["import Tpl from './tpl'\r\nimport axios from '../../../../js/common/ajax'\r\nimport { message as Msg } from 'antd'\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: null, //经销商ID\r\n            visible: false, //抽屉显示隐藏\r\n            activeKey: '1', // 当前TAB的KEY\r\n            diyList: [],\r\n            baseInfo: {\r\n                dealername: '--',\r\n                contact: '--',\r\n                dutynumber: '--',\r\n                take_people: '--',\r\n                address: '--',\r\n                creditscore: '--',\r\n                memo_dealername: '--',\r\n                zssj: '--',\r\n                authorize_num: '--',\r\n                authorize_start: null,\r\n                authorize_end: null,\r\n            },//经销商档案数据（抽屉头部+经销商档案）\r\n            authorizedShops: {\r\n                list: [],\r\n                show: 1 //1 正常点击 2 数据完了 3 没有数据\r\n            },//授权店铺数据\r\n            salesData: {\r\n                list: [],\r\n                pageNo: 1,\r\n                pageSize: 10,\r\n                totalNum: 0,\r\n            },//销售数据\r\n            activity: {\r\n                date: [\r\n                    moment().subtract(1, 'months'),\r\n                    moment()\r\n                ],\r\n                show: 1, //1 正常点击 2 数据完了 3 没有数据\r\n                list: [],\r\n            },//活动情况数据\r\n            abnormalOrders: {\r\n                date: [\r\n                    moment().subtract(1, 'months'),\r\n                    moment()\r\n                ],\r\n                show: 1, //1 正常点击 2 数据完了 3 没有数据\r\n                list: [],\r\n            },//订单异常情况数据\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    //打开抽屉\r\n    onShow = (id) => {\r\n        console.log(id)\r\n        this.setState({\r\n            visible: true,\r\n            id\r\n        }, () => {\r\n            this.getDealerInfo()\r\n        })\r\n    }\r\n    //关闭抽屉\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n            activity: {\r\n                date: [\r\n                    moment().subtract(1, 'months'),\r\n                    moment()\r\n                ],\r\n                show: 1, //1 正常点击 2 数据完了 3 没有数据\r\n                list: [],\r\n            },//活动情况数据\r\n            abnormalOrders: {\r\n                date: [\r\n                    moment().subtract(1, 'months'),\r\n                    moment()\r\n                ],\r\n                show: 1, //1 正常点击 2 数据完了 3 没有数据\r\n                list: [],\r\n            },//订单异常情况数据\r\n        })\r\n    }\r\n    // 获取销售数据\r\n    getMonth = () => {\r\n        const { id } = this.state;\r\n        let { list, pageNo, pageSize, } = this.state.salesData;\r\n        axios.get('/hcm/dayReport/findMonitorDinDanDayReportPageListMonth',{\r\n            params: {\r\n                dealer_id: id,\r\n                pageNo,\r\n                pageSize\r\n            }\r\n        })\r\n        .then(res => {\r\n\r\n            const { data, status, message } = res.data;\r\n            let salesData = this.state.salesData;\r\n            salesData.list = data.content;\r\n            salesData.pageNo = data.pageNumber;\r\n            salesData.pageSize = data.pageSize;\r\n            salesData.totalNum = data.totalElements;\r\n            if (status === '10000') {\r\n                this.setState({\r\n                    salesData\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            Msg.error('系统繁忙，请稍后再试！')\r\n        })\r\n    }\r\n    // 获取活动列表\r\n    getActivityList = () => {\r\n        const { id,activity } = this.state\r\n        axios.get('/hcm/dealer/DealerDetail_Campaign',{\r\n            params:{\r\n                dealer_id:id,\r\n                pageNo: 1,\r\n                pageSize: activity.list.length + 10,\r\n                start_time:activity.date[0].format('YYYY-MM-DD'),\r\n                end_time:activity.date[1].format('YYYY-MM-DD')\r\n            }\r\n        })\r\n        .then(res => {\r\n            const { data, status, message } = res.data;\r\n            if (activity.list.length == data.length || data.length < 10) {\r\n                activity.show = 2\r\n            } else {\r\n                activity.show = 1\r\n            }\r\n            if (data.length == 0) {\r\n                activity.show = 3\r\n            }\r\n            activity.list = data;\r\n            if (status === '10000') {\r\n                this.setState({\r\n                    activity\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            Msg.error('系统繁忙，请稍后再试！')\r\n        })\r\n    }\r\n    getAbnormalOrdersList = () =>{\r\n        const { id,abnormalOrders } = this.state\r\n        axios.get('/hcm/hcmShopMonitor/getMonitorByShopid',{\r\n            params:{\r\n                dealerid:id,\r\n                pageNo: 1,\r\n                pageSize: abnormalOrders.list.length + 10,\r\n                start_time:abnormalOrders.date[0].format('YYYY-MM-DD'),\r\n                end_time:abnormalOrders.date[1].format('YYYY-MM-DD')\r\n            }\r\n        })\r\n        .then(res => {\r\n            const { data, status, message } = res.data;\r\n            if (abnormalOrders.list.length == data.length || data.length < 10) {\r\n                abnormalOrders.show = 2\r\n            } else {\r\n                abnormalOrders.show = 1\r\n            }\r\n            if (data.length == 0) {\r\n                abnormalOrders.show = 3\r\n            }\r\n            abnormalOrders.list = data;\r\n            if (status === '10000') {\r\n                this.setState({\r\n                    abnormalOrders\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            Msg.error('系统繁忙，请稍后再试！')\r\n        })\r\n    }\r\n    // 获取客户详情信息\r\n    getDealerInfo = () => {\r\n        const { id } = this.state;\r\n        LoadingModal({ bl: true });\r\n        axios({\r\n            method: 'post',\r\n            url: '/hcm/hcmCustomModel/getBybmcidAndModule',\r\n            data: {\r\n                fieldSource: id,\r\n                module: 'DEALER'\r\n            }\r\n        }).then(res => {\r\n            const { data, status, message } = res.data\r\n            if (status === '10000') {\r\n                this.setState({\r\n                    diyList: data.add.data,\r\n                    activeKey: '1',\r\n                }, () => {\r\n                    axios({\r\n                        method: 'post',\r\n                        url: '/hcm/dealer/update_page',\r\n                        data: {\r\n                            id\r\n                        }\r\n                    }).then(res => {\r\n                        LoadingModal({ bl: false })\r\n                        const { data, status, message } = res.data\r\n                        if (status === '10000') {\r\n                            this.setState({\r\n                                baseInfo: data\r\n                            }, () => {\r\n                                \r\n                                this.getAuthorizedShops();\r\n                                this.getActivityList();\r\n                                this.getAbnormalOrdersList();\r\n                                this.getMonth();\r\n                               \r\n                                \r\n                            })\r\n                        }\r\n                    }).catch(err => {\r\n                        LoadingModal({ bl: false })\r\n                        Msg.error('系统繁忙，请稍后再试！')\r\n                    })\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            LoadingModal({ bl: false })\r\n            Msg.error('系统繁忙，请稍后再试！')\r\n        })\r\n\r\n    }\r\n    // 获取店铺列表\r\n    getAuthorizedShops = () => {\r\n        const authorizedShops = this.state.authorizedShops;\r\n        const { id } = this.state;\r\n        axios.get('/hcm/dealer/DealerDetail_Authshop', {\r\n            params: {\r\n                dealerid: id,\r\n                pageNo: 1,\r\n                pageSize: authorizedShops.list.length + 10\r\n            }\r\n        })\r\n            .then(res => {\r\n                const { data, status, message } = res.data;\r\n                if (authorizedShops.list.length == data.length || data.length < 10) {\r\n                    authorizedShops.show = 2\r\n                } else {\r\n                    authorizedShops.show = 1\r\n                }\r\n                if (data.length == 0) {\r\n                    authorizedShops.show = 3\r\n                }\r\n                authorizedShops.list = data;\r\n                if (status === '10000') {\r\n                    this.setState({\r\n                        authorizedShops\r\n                    })\r\n                }\r\n            }).catch(err => {\r\n                Msg.error('系统繁忙，请稍后再试！')\r\n            })\r\n\r\n    }\r\n    //切换TAB\r\n    onTabsChange = (activeKey) => {\r\n        this.setState({\r\n            activeKey\r\n        })\r\n    }\r\n\r\n    //销售数据分页事件\r\n    onSalesDataPagination = (page, pageSize) => {\r\n        let salesData = this.state.salesData;\r\n        salesData.pageNo = page;\r\n        salesData.pageSize = pageSize;\r\n        this.setState({\r\n            salesData\r\n        },()=>{\r\n            this.getMonth()\r\n        })\r\n    }\r\n    //销售数据分页事件\r\n    onSalesDataPaginationSize = (current, size) => {\r\n        let salesData = this.state.salesData;\r\n        salesData.pageNo = 1;\r\n        salesData.pageSize = size;\r\n        this.setState({\r\n            salesData\r\n        },()=>{\r\n            this.getMonth()\r\n        })\r\n    }\r\n    //活动情况时间框事件\r\n    activityRangePicker = (e) => {\r\n        let activity = this.state.activity;\r\n        activity.date = e;\r\n        this.setState({\r\n            activity\r\n        },()=>{\r\n            this.getActivityList()\r\n        })\r\n    }\r\n    abnormalOrdersRangePicker = (e) => {\r\n        let abnormalOrders = this.state.abnormalOrders;\r\n        abnormalOrders.date = e;\r\n        this.setState({\r\n            abnormalOrders\r\n        },()=>{\r\n            this.getAbnormalOrdersList()\r\n        })\r\n    }\r\n    render() {\r\n        return <Tpl that={this} />\r\n    }\r\n}\r\n\r\nexport default App"],"sourceRoot":""}