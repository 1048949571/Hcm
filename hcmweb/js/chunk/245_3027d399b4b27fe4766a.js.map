{"version":3,"sources":["webpack:///./app/widget/components/ImgModal/ImgModal.js","webpack:///./app/widget/components/ImgModal/ImgModal.less","webpack:///./app/widget/index/Brand/ClientInspectDetail/main.js"],"names":["App","props","state","index","rotate","size","bl","urls","length","setState","ReactDom","unmountComponentAtNode","document","getElementById","getElementsByTagName","removeChild","close","oImg","createElement","src","naturalWidth","naturalHeight","console","log","colse","width","transform","onSwitch","onSize","onRotate","textAlign","fontSize","React","Component","ImgModal","page","div","setAttribute","body","appendChild","render","getInspectList","activity_id","activity_pro_id","method","url","data","cam_pro_id","campaign_id","then","res","status","message","inspectDetail","catch","handleImgClick","params","match"],"mappings":"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","file":"js/chunk/245_3027d399b4b27fe4766a.js","sourcesContent":["// 图片弹层\r\n// ImgModal({bl:true,urls:urls,index:index,close:true})\r\n// bl:true||false  展示隐藏  默认false \r\n// urls:arr 图片集合\r\n// index： 默认展示数组中的第几张图片 默认值0\r\n// close: 是否展示关闭按钮\r\nimport './ImgModal.less';\r\nimport {Icon,message} from 'antd'\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            index:this.props.index,\r\n            rotate:0,\r\n            size:1\r\n        }\r\n    }\r\n    componentDidMount(){\r\n    }\r\n    onSwitch(bl){\r\n        let {index,rotate,size} = this.state;\r\n        let {urls} = this.props;\r\n        if(bl){\r\n            if(index == urls.length-1){\r\n                index = 0\r\n            }else{\r\n                index++\r\n            }\r\n        }else{\r\n            if(index<=0){\r\n                index = urls.length-1\r\n            }else{\r\n                index--\r\n            }\r\n        }\r\n        this.setState({\r\n            index,\r\n            rotate:0,\r\n            size:1\r\n        })\r\n    }\r\n    onSize(bl){\r\n        let {size} = this.state;\r\n        if(bl){\r\n            size+=0.5\r\n        }else{\r\n            size = size <= 0.5 ? 0.5 : size-0.5\r\n        }\r\n        this.setState({\r\n            size\r\n        })\r\n    }\r\n    onRotate(bl){\r\n        let {rotate} = this.state;\r\n        if(bl){\r\n            rotate+=90\r\n        }else{\r\n            rotate-=90\r\n            \r\n        }\r\n        this.setState({\r\n            rotate\r\n        })\r\n    }\r\n    colse(){\r\n        ReactDom.unmountComponentAtNode(document.getElementById('ImgModal'))\r\n        document.getElementsByTagName(\"body\")[0].removeChild(document.getElementById('ImgModal'));\r\n    }\r\n    render() {\r\n        let {urls=[],close=false} = this.props;\r\n        let {index=0,rotate,size} = this.state;\r\n        let oImg = document.createElement('img');\r\n        oImg.src = urls[index];\r\n        let naturalWidth = oImg.naturalWidth ? oImg.naturalWidth :400;\r\n        let naturalHeight = oImg.naturalHeight ? oImg.naturalHeight :400;\r\n        console.log(naturalWidth)\r\n        return (\r\n            <div  className='flexbox'>\r\n                <div className='imgbox'>\r\n                    {\r\n                        close ? \r\n                        <Icon className='close' onClick={()=>this.colse()} type=\"close-circle\" />\r\n                        :null\r\n                    }\r\n                    <div className='box'>\r\n                        <img style={{width:`${size*(naturalWidth>500?naturalWidth*0.7:naturalWidth)}px`,transform:`rotate(${rotate}deg)`}}  \r\n                        src={urls[index]} \r\n                        />\r\n                    </div>\r\n                    <div className='buts'>\r\n                        <Icon onClick={()=>this.onSwitch(false)} type=\"left\" />\r\n                        <Icon onClick={()=>this.onSwitch(true)} type=\"right\" />\r\n                        <Icon onClick={()=>this.onSize(true)} type=\"plus\" />\r\n                        <Icon onClick={()=>this.onSize(false)} type=\"minus\" />\r\n                        <Icon onClick={()=>this.onRotate(false)} className='left' type=\"reload\" />\r\n                        <Icon onClick={()=>this.onRotate(true)} className='right' type=\"reload\" />\r\n                    </div>\r\n                    <div style={{textAlign:'center',fontSize:'12px'}}>\r\n                        <a target='_blank' href={urls[index]}>查看原图</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport let ImgModal = function (page) {\r\n    let {bl=false,urls} =  page;\r\n    var div = document.createElement('div');\r\n    div.setAttribute(\"id\", \"ImgModal\");\r\n    if(bl){\r\n        document.body.appendChild(div);\r\n        ReactDom.render(React.createElement(App,page), document.getElementById('ImgModal'));\r\n    }else{\r\n        ReactDom.unmountComponentAtNode(document.getElementById('ImgModal'));\r\n        document.getElementsByTagName(\"body\")[0].removeChild(document.getElementById('ImgModal'));\r\n    }\r\n}\r\n\r\n","// removed by extract-text-webpack-plugin","import Tpl from './tpl'\r\nimport { ImgModal } from '../../../components/ImgModal/ImgModal'\r\nimport axios from '../../../../js/common/ajax'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      activity_id: props.match.params.activity_id,\r\n      activity_pro_id: props.match.params.activity_pro_id,\r\n      inspectDetail: {}\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    this.getInspectList()\r\n  }\r\n  // 获取稽查列表\r\n  getInspectList = () => {\r\n    const { activity_id, activity_pro_id } = this.state\r\n    axios({\r\n      method: 'post',\r\n      url: '/hcm/dealer/searchCampaignProductInspectList',\r\n      data: {\r\n        cam_pro_id: activity_pro_id,\r\n        campaign_id: activity_id\r\n      }\r\n    }).then(res => {\r\n      const { data, status, message } = res.data\r\n      if (status === '10000') {\r\n        this.setState({\r\n          inspectDetail: data\r\n        })\r\n      }\r\n    }).catch()\r\n  }\r\n  handleImgClick = params => {\r\n    ImgModal(params)\r\n  }\r\n  render() {\r\n    return <Tpl that={this} />\r\n  }\r\n}\r\n\r\nexport default App"],"sourceRoot":""}