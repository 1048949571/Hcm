{"version":3,"sources":["webpack:///./app/widget/components/Component.js","webpack:///./app/widget/components/Copyright.js","webpack:///./app/widget/components/FullSpin.js","webpack:///./app/widget/components/Layout/index.js","webpack:///./app/widget/components/Layout/index.less","webpack:///./app/widget/components/SetTable/main.js","webpack:///./app/widget/components/SetTable/tpl.js","webpack:///./app/widget/index/Brand/ClientCheck/tpl.js"],"names":["AddIcon","props","style","className","React","Component","Copyright","clazzName","FullSpin","textAlign","spinning","RightBox","breadcrumbList","map","v","i","linkList","history","go","children","defaultProps","title","App","formAtDom","type","arr","data","key","unshift","item","index","e","oCheckitem","fieldRequired","isChecked","fieldname","forEach","target","push","onDrop","info","setState","endId","node","eventKey","dropPos","pos","split","dropPosition","Number","length","state","stateID","end","endnum","sort","statenum","onSortList","canCelItem","checked","onDragStart","menuList","sortList","TreeNode","Tpl","that","visible","setTableStatus","onSubmit","checkData","a","b","join","ClientCheck","dataList","setTableData","selectedRowKeys","dealername","bossid","takePeople","contact","memoDealername","totalNum","pageSize","pageNo","checkAll","rowSelection","onChange","onTableCheckChange","clearIconStyle","width","height","opacity","cursor","clearIcon","fieldName","handleClearIconClick","chSearchIpt","justifyContent","onSearch","addModalStatus","paddingRight","allStopConfirm","inviteLinkStatus","waitApprovedCount","statusStopCount","padding","x","formatColumn","dealer_list","Math","ceil","changePagination","onPaginationSize","onSortSubmit","bl","appLinkStatusStatus","ClientDetail","AddModal","clientNames","tokenSeparators","onSubClients","value","addClientChange","InviteLink","linkSwitch","inviteLinkSwitch","marginLeft","color","window","location","origin","bmainCustomer","invitecode","success","AppLink","appLinkStatus","marginTop"],"mappings":"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","file":"js/chunk/78_ea3c877c61f74d9545dc.js","sourcesContent":["\r\n/**\r\n *\r\n *\r\n * @export\r\n * @description style:object,className:str\r\n * @class AddIcon \r\n * @extends {React.Component}\r\n */\r\nexport class AddIcon extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        let {style,className} = this.props;\r\n        return(\r\n            <img className={className} style={style} src=\"../../../../img/icon/add2.png\"/>\r\n        )\r\n        \r\n    }\r\n}\r\n    ","\r\nclass Copyright extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return(\r\n            <div className={this.props.clazzName ? this.props.clazzName:'Copyright'}>\r\n                Copyright &#169; 杭州久点网络技术有限公司\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\nexport default Copyright","import { Spin, Modal } from 'antd';\r\nclass FullSpin extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            <Modal maskClosable={false} className='full-spin' bodyStyle={{textAlign: 'center'}} footer={null} closable={false} visible={this.props.spinning} >\r\n                <Spin  size=\"large\" delay={100} spinning={true} className='example' tip=\"Loading...\">\r\n                </Spin>\r\n            </Modal>\r\n        )\r\n\r\n    }\r\n}\r\nexport default FullSpin","import Copyright from '../Copyright'\r\nimport { Breadcrumb } from 'antd'\r\n\r\nimport './index.less'\r\n\r\nconst RightBox = props => {\r\n  return (\r\n    <div className={`layout-wrapper ${props.className || ''}`}>\r\n      <div className=\"header-wrapper\">\r\n        <Breadcrumb className=\"breadcrumb\">\r\n          {\r\n            props.breadcrumbList.map((v, i) => {\r\n              if (props.linkList[i] === '') {\r\n                return <Breadcrumb.Item key={v}>{v}</Breadcrumb.Item>\r\n              }\r\n              return (\r\n                <Breadcrumb.Item \r\n                  href=\"javascript:;\" \r\n                  key={v}>\r\n                  <span onClick={() => {props.history.go(-props.linkList[i])}}>{v}</span>\r\n                </Breadcrumb.Item>\r\n              )\r\n            })\r\n          }\r\n        </Breadcrumb>\r\n        {/* <h1 className=\"title\">{props.title}</h1> */}\r\n      </div>\r\n      <div className=\"layout-content\">{ props.children }</div>\r\n      <div className=\"copyright\">\r\n        <Copyright />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nRightBox.defaultProps = {\r\n  title: '标题',\r\n  breadcrumbList: [],\r\n  linkList: []\r\n}\r\n\r\nexport default RightBox","// removed by extract-text-webpack-plugin","import Tpl from './tpl';\r\nimport { Checkbox } from 'antd';\r\nclass App extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            menuList:[],\r\n            sortList:[],\r\n            stateID:null,\r\n            endId:null,\r\n        }\r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n    componentWillMount(){\r\n    }\r\n    formAtDom = (type) =>{\r\n        let arr = [];\r\n        let data = this.props.data\r\n        \r\n        if(type){\r\n            for (const key in data) {\r\n                arr.unshift(\r\n                    <div className='item' key={key}>\r\n                        <p>{data[key].title}</p>\r\n                        {\r\n                            data[key].data.map((item,index)=>{\r\n                                return (\r\n                                    <Checkbox onChange={(e)=>this.props.oCheckitem(e,key,item,index)} className='Checkbox' disabled={item.fieldRequired=='1'} key={index} checked={item.isChecked}>{item.fieldname}</Checkbox>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        }else{\r\n            for (const key in data) {\r\n                    \r\n                data[key].data.forEach((item,index)=>{\r\n                    if(item.isChecked){\r\n                        item.target = [key,index,item.fieldRequired]\r\n                        return (\r\n                            arr.push(item)\r\n                        )\r\n                    }\r\n                    \r\n                })\r\n            }\r\n        }\r\n        \r\n        return arr\r\n    }\r\n\r\n    onDrop = (info) => {\r\n        this.setState({\r\n            endId:info.node.props.eventKey\r\n        },()=>{\r\n            \r\n            const dropPos = info.node.props.pos.split('-');\r\n            const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\r\n\r\n            let {stateID,endId} = this.state;\r\n            let state = stateID.split(',')\r\n            let end = endId.split(',')\r\n            let data = this.props.data;\r\n            let endnum = data[end[0]].data[end[1]].sort;\r\n            let statenum = data[state[0]].data[state[1]].sort;\r\n            if(dropPosition===0){\r\n                data[end[0]].data[end[1]].sort = statenum;\r\n                data[state[0]].data[state[1]].sort = endnum;\r\n            }else if(dropPosition>0){\r\n                data[state[0]].data[state[1]].sort = endnum+0.01;\r\n            }else if(dropPosition<0){\r\n                data[state[0]].data[state[1]].sort = endnum-0.01;\r\n            }\r\n            this.props.onSortList(data)\r\n        })\r\n    }\r\n    canCelItem=(item)=>{\r\n        this.props.oCheckitem({target:{checked:0}},item.target[0],item,item.target[1])\r\n    }\r\n    onDragStart = (info)=>{\r\n        this.setState({\r\n            stateID:info.node.props.eventKey\r\n        })\r\n        \r\n    }\r\n    render(){\r\n        return <Tpl that={this}/>\r\n    }\r\n}\r\nexport default App","import { Modal, Icon } from 'antd';\r\nimport ThatMain from '../../HOC/That';\r\nimport {Tree} from 'antd';\r\nconst TreeNode = Tree.TreeNode;\r\nconst Tpl = ThatMain((that) => {\r\n    let {data,visible,clazzName,setTableStatus,onSubmit} = that.props;\r\n    let checkData = that.formAtDom(false).sort((a,b)=>a.sort-b.sort);\r\n    \r\n    return (\r\n        <Modal\r\n            maskClosable={false} \r\n            title={'设置表格'}\r\n            className={clazzName}\r\n            visible={visible}\r\n            onCancel={()=>setTableStatus(false)}\r\n            onOk={()=>onSubmit(checkData)}\r\n            okButtonProps={{className:'btn2-main'}}\r\n            cancelButtonProps={{className:'btn2-sub'}}\r\n        >\r\n            <div className='set-table-box'>\r\n                <div className='info'>\r\n                    <h3>可用字段</h3>\r\n                    <div className='box'>\r\n                        {that.formAtDom(true)}\r\n                    </div>\r\n                </div>\r\n                <div className='sort'>\r\n                    <p>已选字段</p> \r\n                            <Tree\r\n                                className=\"draggable-tree\"\r\n                                draggable\r\n                                \r\n                                onDragStart={(e)=>that.onDragStart(e)}\r\n                                onDrop={(e)=>that.onDrop(e)}\r\n                            >\r\n                                {\r\n                                    checkData.map((item,index)=>{\r\n                                        return (\r\n                                           <TreeNode  title={<div className='TreeNode-title'><span>{item.fieldname}</span>{item.fieldRequired=='1' ? null : <Icon onClick={()=>that.canCelItem(item)} type=\"close-circle\" />}</div>} key={item.target.join(',')} />\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Tree>\r\n                    <h6>按住上下拖动可排序</h6>\r\n                </div>\r\n                \r\n            </div>\r\n        </Modal>\r\n    )\r\n})\r\nexport default Tpl","\r\nimport ThatMain from '../../../HOC/That';\r\nimport ContentBox from '../../../components/Layout';\r\nimport {AddIcon} from '../../../components/Component';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport TagInput from '../../../components/TagInput/main'\r\nimport { Table,  Switch,Pagination, Button, Modal, message, Alert,Input, Dropdown, Icon, Menu } from 'antd';\r\nimport ClientDetail from '../ClientDetail/main';\r\nimport FullSpin from '../../../components/FullSpin';\r\nimport SetTable from '../../../components/SetTable/main';\r\nconst Tpl = ThatMain((that) => {\r\n    return (\r\n        <ContentBox\r\n        breadcrumbList={['渠道盘点', '经销商档案']}\r\n            linkList={['', '']}\r\n        >\r\n            <div className='clientcheck'>\r\n                <ClientCheck that={that} />\r\n            </div>\r\n        </ContentBox>\r\n        \r\n    )\r\n})\r\n\r\nconst ClientCheck = ThatMain((that) => {\r\n    let { dataList, spinning, setTableData, selectedRowKeys, dealername, bossid, takePeople, contact, memoDealername, setTableStatus, totalNum, pageSize, pageNo, checkAll } = that.state;\r\n    const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: (selectedRowKeys) => that.onTableCheckChange(selectedRowKeys),\r\n    };\r\n    const clearIconStyle = {\r\n        width: '14px',\r\n        height: '14px',\r\n        opacity: 0.25,\r\n        cursor: 'pointer'\r\n    }\r\n    const clearIcon = fieldName => (\r\n        that.state[fieldName]&&that.state[fieldName].length?\r\n        <Icon\r\n            type=\"close-circle\"\r\n            onClick={()=>that.handleClearIconClick(fieldName)}\r\n            style={clearIconStyle}\r\n        />\r\n        :null\r\n    )\r\n    return (\r\n        <div className='content ClientCheck'>\r\n            <div className='search-box'>\r\n                <div className='input-box'>\r\n                    <div className='item'>\r\n                        <span className='lab'>客户名称:</span>\r\n                        <Input \r\n                            placeholder='请输入'\r\n                            onChange={(e) => that.chSearchIpt(e, 'dealername')} \r\n                            value={dealername} \r\n                            suffix={clearIcon('dealername')} \r\n                            className='ipt' />\r\n                    </div>\r\n                    <div className='item'>\r\n                        <span className='lab'>备注名称:</span>\r\n                        <Input \r\n                            placeholder='请输入'\r\n                            onChange={(e) => that.chSearchIpt(e, 'memoDealername')} \r\n                            value={memoDealername} \r\n                            suffix={clearIcon('memoDealername')} \r\n                            className='ipt' />\r\n                    </div>\r\n                    <div className='item'>\r\n                        <span className='lab'>直属上级:</span>\r\n                        <Input \r\n                            placeholder='请输入'\r\n                            onChange={(e) => that.chSearchIpt(e, 'bossid')} \r\n                            value={bossid} \r\n                            suffix={clearIcon('bossid')} \r\n                            className='ipt' />\r\n                    </div>\r\n                </div>\r\n                <div className='input-box'>\r\n                    <div className='item'>\r\n                        <span className='lab'>对接人:</span>\r\n                        <Input \r\n                            placeholder='请输入'\r\n                            onChange={(e) => that.chSearchIpt(e, 'takePeople')} \r\n                            value={takePeople} \r\n                            suffix={clearIcon('takePeople')} \r\n                            className='ipt' />\r\n                    </div>\r\n                    <div className='item'>\r\n                        <span className='lab'>联系方式:</span>\r\n                        <Input \r\n                            placeholder='请输入'\r\n                            onChange={(e) => that.chSearchIpt(e, 'contact')} \r\n                            value={contact} \r\n                            suffix={clearIcon('contact')} \r\n                            className='ipt' />\r\n                    </div>\r\n                    <div style={{ justifyContent: 'flex-end' }} className='item'>\r\n                        <Button className='btn6 seh' onClick={e => that.onSearch()}>查询</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='button-box'>\r\n                <div className='action'>\r\n                    <Button className=\"btn1-main\" onClick={() => that.addModalStatus(true)} type=\"primary\">\r\n                        <AddIcon style={{paddingRight:8}} />\r\n                        新增\r\n                    </Button>\r\n                    <Button className=\"btn1-sub\" onClick={() => that.allStopConfirm('all', null)} >批量合同到期</Button>\r\n                    {/* <Dropdown overlay={\r\n                        <Menu>\r\n                            <Menu.Item onClick={() => that.allStopConfirm('all', null)} key=\"1\">批量移入停约</Menu.Item>\r\n                            <Menu.Item onClick={() => that.allRmConfirm('all', null)} key=\"2\">批量删除</Menu.Item>\r\n                        </Menu>}>\r\n                        <Button style={{ marginLeft: 8 }}>\r\n                            批量操作 <Icon type=\"down\" />\r\n                        </Button>\r\n                    </Dropdown> */}\r\n                    <a href = {`/hcm/dealer/download?${dealername ? 'dealername='+dealername: ''}${bossid ? '&bossid='+bossid: ''}${takePeople ? '&takePeople='+takePeople: ''}${contact ? '&contact='+contact: ''}${memoDealername ? '&memoDealername='+memoDealername: ''}`}>\r\n                        <Button className=\"btn1-sub\" >下载数据</Button>\r\n                    </a>\r\n                    <Button className=\"btn1-sub\" onClick={() => that.inviteLinkStatus(true)}>获取邀请链接</Button>\r\n                </div>\r\n                <div className='info'>\r\n                    \r\n                    {\r\n                        +dataList.waitApprovedCount > 0 ?\r\n                        <Button  href='/index.html#/PendingClient' className='TYPE1-BUTTON'>待审批客户({dataList.waitApprovedCount})</Button>\r\n                        : null\r\n                    }\r\n                    <Button  href='/index.html#/ExpiringClientList' className='TYPE1-BUTTON'>合同到期({dataList.statusStopCount})</Button>\r\n                    \r\n                    <Button className=\"btn1-sub\" href='/index.html#/ChangeHistorys/DEALER_DELETE'>变更历史</Button>\r\n                    \r\n                    <Dropdown overlay={<Menu>\r\n                        <Menu.Item>\r\n                            <a href=\"/index.html#/CustomFields\">自定义字段</a>\r\n                        </Menu.Item>\r\n                        <Menu.Item>\r\n                            <a onClick={() => that.setTableStatus(true)}>设置表格</a>\r\n                        </Menu.Item>\r\n\r\n                    </Menu>}>\r\n                        <Icon type=\"setting\" />\r\n                    </Dropdown>\r\n                </div>\r\n            </div>\r\n            <div style={{ padding: '11px 10px 0px 10px' }}>\r\n                <Alert message={<div>共 <a>{totalNum}</a> 项，已选择 <a>{checkAll ? totalNum : selectedRowKeys.length}</a> 项 <a onClick={() => that.checkAll(true)}>勾选全部</a>/<a onClick={() => that.checkAll(false)}>取消勾选</a></div>} type=\"info\" showIcon />\r\n            </div>\r\n            <div className='content-tab'>\r\n                <Table rowKey='id' pagination={false} scroll={{ x: (that.formatColumn().length-1 * 300)+100 }} rowSelection={rowSelection} columns={that.formatColumn()} dataSource={dataList.dealer_list} />\r\n                <div className='footer'>\r\n                    <div className='info'>\r\n                        {`共 ${totalNum} 条记录 `}\r\n                        &nbsp;&nbsp;\r\n                    {`第  ${pageNo}  / ${Math.ceil(totalNum / pageSize)} 页`}\r\n                    </div>\r\n                    <Pagination pageSize={pageSize} current={pageNo} total={totalNum} onChange={that.changePagination} onShowSizeChange={that.onPaginationSize} showSizeChanger showQuickJumper />\r\n                </div>\r\n            </div>\r\n            <SetTable onSubmit={(data) => that.onSortSubmit(data)} onSortList={(data) => that.onSortList(data)} oCheckitem={(e, key, item, index) => that.oCheckitem(e, key, item, index)} data={setTableData} visible={setTableStatus} setTableStatus={(bl) => that.setTableStatus(bl)} clazzName='set-table' />\r\n            <InviteLink that={that} />\r\n            <AppLink that={that} />\r\n            <AddModal that={that} />\r\n            <FullSpin spinning={spinning} />\r\n            <ClientDetail  appLinkStatusStatus={() => that.appLinkStatusStatus(true)} ref={that.ClientDetail} />\r\n        </div>\r\n    )\r\n})\r\n\r\nconst AddModal = ThatMain((that) => {\r\n    let { addModalStatus, clientNames,tokenSeparators } = that.state;\r\n    \r\n    return (\r\n        <Modal\r\n            maskClosable={false} \r\n            title={'新增'}\r\n            wrapClassName='boxModal'\r\n            visible={addModalStatus}\r\n            onOk={() => that.onSubClients()}\r\n            onCancel={() => that.addModalStatus(false)}\r\n            okButtonProps={{className:'btn2-main'}}\r\n            cancelButtonProps={{className:'btn2-sub'}}\r\n        >\r\n            <div className='Selectbox'>\r\n                <p>\r\n                   \r\n                    客户名称:\r\n                   \r\n                </p>\r\n                <TagInput\r\n                    className=''\r\n                    style={{width: 376,height:300}}\r\n                    value={clientNames}\r\n                    placeholder=' 请输入客户公司名称,一行一个，可多个，最多300个.'\r\n                    onChange={(value) => that.addClientChange(value)}\r\n                    maxText={64}\r\n                />\r\n                \r\n            </div>\r\n            <div className='alertbox'>\r\n                <p>说明:</p>\r\n                <p>为了保证信息匹配精准度，请输入客户公司的全称。暂不支持非公司类型客户。</p>\r\n            </div>\r\n\r\n        </Modal>)\r\n})\r\nconst InviteLink = ThatMain((that) => {\r\n    let { inviteLinkStatus, linkSwitch, dataList } = that.state;\r\n\r\n    return (\r\n        <Modal\r\n            maskClosable={false} \r\n            title={'邀请链接'}\r\n            visible={inviteLinkStatus}\r\n            footer={[\r\n                <Button className=\"btn2-sub noneFloat\" key=\"back\" onClick={() => that.inviteLinkStatus(false)}>取消</Button>,\r\n            ]}\r\n            onCancel={() => that.inviteLinkStatus(false)}\r\n        >\r\n\r\n            <div className='inviteLinkbox'>\r\n                <div className='item'>\r\n                    <span className='title'>邀请状态：</span>\r\n                    <p>\r\n                        <Switch checked={linkSwitch} onChange={(checked) => that.inviteLinkSwitch(checked)} />\r\n                        <span style={{ marginLeft: '20px', color: '#999' }}>关闭后，邀请链接将失效。</span>\r\n                    </p>\r\n                </div>\r\n                <div className='item'>\r\n                    <span className='title'>邀请链接：</span>\r\n                    <p>\r\n                        <Input disabled={!linkSwitch} onChange={() => null} value={`${window.location.origin}/user.html#/Registered/${dataList.bmainCustomer ? dataList.bmainCustomer.invitecode : null}`} />\r\n                    </p>\r\n                </div>\r\n                <div className='item' style={{ padding: '0 0 50px 100px' }}>\r\n                    <CopyToClipboard text={`${window.location.origin}/user.html#/Registered/${dataList.bmainCustomer ? dataList.bmainCustomer.invitecode : null}`}\r\n                        onCopy={() => message.success('链接成功复制至粘贴板')}>\r\n                        <Button disabled={!linkSwitch}>复制邀请链接</Button>\r\n                    </CopyToClipboard>\r\n                </div>\r\n            </div>\r\n        </Modal>)\r\n})\r\nconst AppLink = ThatMain((that) => {\r\n    let { appLinkStatus} = that.state;\r\n\r\n    return (\r\n        <Modal\r\n            title={'获取应用订购链接'}\r\n            visible={appLinkStatus}\r\n            maskClosable={false} \r\n            footer={[\r\n                <Button key=\"back\" onClick={() => that.appLinkStatusStatus(false)}>取消</Button>,\r\n            ]}\r\n            onCancel={() => that.appLinkStatusStatus(false)}\r\n        >\r\n\r\n            <div className='inviteLinkbox'>\r\n                \r\n                <div className='item'>\r\n                    <span className='title'>订购链接：</span>\r\n                    <p>\r\n                        <Input onChange={() => null} value={`https://tb.cn/5VFmCNw`} />\r\n                    </p>\r\n                </div>\r\n                <div className='item' style={{ padding: '0 0 10px 100px',marginTop:'13px' }}>\r\n                    <CopyToClipboard text={`https://tb.cn/5VFmCNw`}\r\n                        onCopy={() => message.success('链接成功复制至粘贴板')}>\r\n                        <Button>复制订购链接</Button>\r\n                    </CopyToClipboard>\r\n                </div>\r\n\r\n                <p style={{ padding: '0 0 10px 100px' }}>复制订购链接，发送给经销商店铺订购应用</p>\r\n            </div>\r\n        </Modal>)\r\n})\r\n\r\nexport default Tpl"],"sourceRoot":""}