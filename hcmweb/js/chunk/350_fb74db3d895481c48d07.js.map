{"version":3,"sources":["webpack:///./app/js/common/ajax.js","webpack:///./app/js/common/crypto.js","webpack:///./app/widget/user/Forgetpwd/main.js"],"names":["axios","defaults","timeout","toType","obj","toString","call","match","toLowerCase","filterNull","o","key","trim","transformRequest","data","FormData","Qs","stringify","interceptors","request","use","config","headers","method","params","Promise","reject","error","response","status","localStorage","logintype","window","location","clear","CryptoJS","require","Encrypt","word","enc","Utf8","parse","srcs","encrypted","AES","encrypt","mode","ECB","padding","pad","Pkcs7","Decrypt","decrypt","Forgetpwd","props","state","autn","lock","ForgetSubmit","form","validateFields","err","values","current","userName","undefined","ajax","post","Trim","usertypeID","then","res","console","log","mobile","setState","yzm","shows","forgetxs","Pone","NOphone","NOphones","AqPercent","pws","spws","length","crypto","NODl","BACK","str","replace","onBlur","number","RegExp","regEn","test","AqPercentSum","forgetmmClock","AqPercentx","onChangeAutn","getAuthCode","value","yzmpwd","seconds","siv","setInterval","clearInterval","prev","DL","GOdl","type","React","Component","create"],"mappings":"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","file":"js/chunk/350_fb74db3d895481c48d07.js","sourcesContent":["\r\n//https://blog.csdn.net/frank_come/article/details/80010611\r\nimport axios from 'axios'\r\nimport Qs from 'qs';\r\naxios.defaults.timeout = 600000;\r\n// 自定义判断元素类型JS\r\nfunction toType(obj) {\r\n    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase()\r\n}\r\n// 参数过滤函数\r\nfunction filterNull(o) {\r\n    for (var key in o) {\r\n    \r\n      if (toType(o[key]) === 'string') {\r\n        o[key] = o[key].trim()\r\n      } else if (toType(o[key]) === 'object') {\r\n        o[key] = filterNull(o[key])\r\n      } else if (toType(o[key]) === 'array') {\r\n        o[key] = filterNull(o[key])\r\n      }\r\n    }\r\n    return o\r\n}\r\n\r\n//整理数据\r\naxios.defaults.transformRequest = (data) => {\r\n    if(data){\r\n        data = filterNull(data)\r\n    }\r\n    if(data instanceof FormData){\r\n        return data\r\n    }else{\r\n        data = Qs.stringify(data);\r\n        return data\r\n    }\r\n    \r\n}\r\n\r\n// 路由请求拦截\r\n// http request 拦截器\r\naxios.interceptors.request.use(\r\n    config => {\r\n        config.headers['X-Requested-With'] = 'XMLHttpRequest';\r\n        if(config.method=='get'){\r\n            config.params = filterNull(config.params)\r\n        }\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error.response);\r\n    }\r\n);\r\n\r\n// 路由响应拦截\r\n// http response 拦截器\r\naxios.interceptors.response.use(\r\n    response => {\r\n        return response;\r\n    },\r\n    error => {\r\n        if (error.response.status == \"503\") {\r\n            \r\n            if(localStorage.logintype == 'ADMIN'||localStorage.logintype == 'KEFU'){\r\n                window.location = \"/user.html#/loginu\";\r\n                window.localStorage.clear()\r\n                return\r\n            }else{\r\n                window.location = \"/user.html#/loginc\";\r\n                window.localStorage.clear()\r\n                return\r\n            }\r\n            \r\n            \r\n        } else {\r\n            return Promise.reject(error.response)   // 返回接口返回的错误信息\r\n        }\r\n    }\r\n);\r\nexport default axios;","var CryptoJS = require(\"crypto-js\");\r\nexport default {\r\n    Encrypt(word){\r\n        var key = CryptoJS.enc.Utf8.parse(\"hcmabcdefghijklm\");\r\n        var srcs = CryptoJS.enc.Utf8.parse(word);\r\n        var encrypted = CryptoJS.AES.encrypt(srcs, key, { mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7 });\r\n        return encrypted.toString();\r\n    },\r\n    Decrypt(word){\r\n        var key = CryptoJS.enc.Utf8.parse(\"hcmabcdefghijklm\");\r\n        var decrypt = CryptoJS.AES.decrypt(word, key, { mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7 });\r\n        return CryptoJS.enc.Utf8.stringify(decrypt).toString();\r\n    }\r\n}\r\n","import Tpl from './tpl';\r\nimport ajax from '../../../js/common/ajax'\r\nimport { Form, message } from 'antd';\r\nimport crypto from '../../../js/common/crypto';\r\nclass Forgetpwd extends React.Component {\r\n    constructor(props) {\r\n        // document.title = '忘记密码';\r\n        super(props)\r\n        this.state = {\r\n            current: 0,\r\n            yzm: \"获取验证码\",\r\n            yzmpwd: \"\",\r\n            seconds: 59,//倒计时\r\n            shows: true,//验证码提示\r\n            forgetxs: false,//输入错误提示\r\n            NOphone: false,//未绑定手机号\r\n            NOphones: false,//上一步\r\n            NODl: false,//\r\n            AqPercent: false,//密码强度,\r\n            AqPercentx: \"弱\",\r\n            AqPercentSum: 0,\r\n            forgetmmClock: \"red\",\r\n            Pone: \"\",//手机号\r\n            usertypeID: \"\"\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        //console.log(this.props.match.params.type)\r\n\r\n        if (this.props.match.params.type == \"u\") {\r\n            this.setState({\r\n                usertypeID: this.props.match.params.type\r\n            })\r\n\r\n        } else if (this.props.match.params.type == \"c\") {\r\n            this.setState({\r\n                usertypeID: this.props.match.params.type\r\n            })\r\n        } else {\r\n            return\r\n        }\r\n\r\n    }\r\n    state = {\r\n        autn: '',\r\n        lock: false\r\n    }\r\n    ForgetSubmit = () => {//提交用户名\r\n        this.props.form.validateFields((err, values) => {\r\n            //console.log(this.state.usertypeID)\r\n\r\n            if (!err) {\r\n\r\n                if (this.state.current == 0 && values.userName != undefined) {\r\n\r\n                    ajax.post('/hcm/login/getUserByNameOrMobile', {\r\n                        \"name\": this.Trim(values.userName),\r\n                        \"usertype\": this.state.usertypeID\r\n                    })\r\n                        .then((res) => {\r\n                            console.log(res)\r\n                            if (res.data.status == 10000) {\r\n                                console.log(res.data.data)\r\n                                if (res.data.data != null && res.data.data.mobile != undefined && res.data.data.mobile != \"\") {\r\n                                    const current = this.state.current + 1;\r\n                                    this.setState({\r\n                                        yzm: \"获取验证码\",\r\n                                        shows: true,\r\n                                        forgetxs: false,\r\n                                        Pone: res.data.data.mobile,\r\n                                        current\r\n                                    })\r\n                                } else {\r\n                                    if(res.data.data == null){\r\n                                      \r\n                                        message.error(\"当前账号未注册！\")\r\n                                    }else{\r\n                                        const current = this.state.current + 1;\r\n                                        this.setState({\r\n                                            yzm: \"获取验证码\",\r\n                                            shows: true,\r\n                                            forgetxs: false,\r\n                                            Pone: \"\",\r\n                                            NOphone: true,\r\n                                            NOphones: true,\r\n                                            current\r\n                                        })\r\n                                    }\r\n                                    \r\n                                }\r\n\r\n\r\n\r\n                            } else {\r\n\r\n                                this.setState({\r\n                                    forgetxs: true\r\n                                })\r\n                                console.log(1)\r\n                            }\r\n                        })\r\n                } else if (this.state.current == 1) {\r\n                    console.log(values.yzm, \"验证码\")\r\n\r\n                    if (values.yzm != undefined) {\r\n                        ajax.post('/hcm/login/validateSMS', {\r\n                            \"mobile\": this.state.Pone,\r\n                            \"usertype\": this.state.usertypeID,\r\n                            \"code\": values.yzm\r\n                        })\r\n                            .then((res) => {\r\n                                console.log(res)\r\n                                if (res.data == true) {\r\n                                    const current = this.state.current + 1;\r\n                                    this.setState({\r\n                                        AqPercent: true,\r\n                                        forgetxs: false,\r\n                                        current\r\n                                    })\r\n                                } else {\r\n                                    this.setState({\r\n                                        forgetxs:true\r\n                                    })\r\n                                }\r\n                            })\r\n                    } else {\r\n                        this.setState({\r\n                            forgetxs:true\r\n                        })\r\n                    }\r\n                } else if (this.state.current == 2) {\r\n                    if(values.pws!=\"\" && values.pws!=undefined && values.spws!=\"\" && values.spws!=undefined){\r\n                        if (this.Trim(values.pws) == this.Trim(values.spws)) {\r\n                            if (this.Trim(values.pws).length >= 6) {\r\n                                console.log(values.pws.length)\r\n                                if (this.Trim(values.pws).length <= 16) {\r\n                                    ajax.post('/hcm/login/updatePasswordBySMS', {\r\n                                        \"username\": this.state.Pone,//this.state.pws\r\n                                        \"password\": crypto.Encrypt(this.Trim(values.pws)),\r\n                                        \"usertype\": this.state.usertypeID\r\n                                    }).then((res) => {\r\n                                        console.log(res)\r\n                                        if (res.data.status == 10000) {\r\n                                            const current = this.state.current + 1;\r\n                                            this.setState({ current });\r\n                                            this.setState({\r\n                                                NODl: true,\r\n                                                NOphones: true\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                } else {\r\n                                    message.error('密码最多16位')\r\n                                }\r\n                            } else {\r\n    \r\n                                message.error('密码不能少于6位')\r\n                            }\r\n    \r\n                        } else if (this.Trim(values.pws) == \"\" || this.Trim(values.spws) == \"\") {\r\n                            this.setState({\r\n                                forgetxs: true\r\n                            })\r\n                        } else {\r\n                            this.setState({\r\n                                forgetxs: true\r\n                            })\r\n                        }\r\n                    }else{\r\n                        message.error(\"密码不能为空！\")\r\n                    }\r\n                    \r\n                } else {\r\n                    this.setState({\r\n                        forgetxs: true\r\n                    })\r\n                }\r\n            } else {\r\n                this.setState({\r\n                    forgetxs: true\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n    BACK = () => {\r\n\r\n        const current = this.state.current - 1;\r\n        this.setState({\r\n            current,\r\n            NOphone: false,\r\n            NOphones: false\r\n        });\r\n\r\n    }\r\n    Trim = (str) => {\r\n\r\n        return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\r\n    }\r\n    onBlur = () => {\r\n        this.props.form.validateFields((err, values) => {\r\n            console.log(values)\r\n            let number = new RegExp(\"^[0-9]*$\");\r\n            let regEn = new RegExp(\"^[~!@#$%^&*()_+<>?:{},.\\/;'[\\]]*$\")\r\n            if (values.pws != undefined && values.pws.length >= 6) {\r\n                if (number.test(values.pws) || new RegExp(\"^\\w*$\").test(values.pws) || regEn.test(values.pws)) {\r\n                    this.setState({\r\n                        AqPercentSum: 30,\r\n                        forgetmmClock: \"red\",\r\n                        AqPercentx: \"弱\"\r\n                    });\r\n                } else if (number.test(values.pws) && regEn.test(values.pws)) {\r\n                    this.setState({\r\n                        AqPercentSum: 60,\r\n                        forgetmmClock: \"yellow\",\r\n                        AqPercentx: \"中\"\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        AqPercentSum: 100,\r\n                        forgetmmClock: \"green\",\r\n                        AqPercentx: \"强\"\r\n                    });\r\n                }\r\n            } else {\r\n\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n    onChangeAutn = (autn) => {\r\n        //console.log(autn)\r\n        this.setState({\r\n            autn\r\n        });\r\n    }\r\n    getAuthCode = () => {\r\n        const { value, lock, yzm, yzmpwd } = this.state\r\n        console.log(value)\r\n        if (!lock == true && yzmpwd == \"\" && this.state.Pone != \"\") {\r\n            // this.setState({\r\n            //     forgetxs:false\r\n            // })\r\n            if (yzm == \"获取验证码\") {\r\n                console.log(this.state.current)\r\n                console.log(this.state.Pone)\r\n                if (this.state.seconds == 59) {\r\n                    if (this.state.Pone != \"未绑定手机号\") {\r\n                        let siv = setInterval(() => {\r\n                            this.setState({\r\n                                yzm: `${this.state.seconds--}s后重新发送`,\r\n                                shows: false,\r\n                                forgetxs: false\r\n                            }, () => {\r\n                                if (this.state.seconds == 1) {\r\n                                    clearInterval(siv);\r\n                                    this.setState({\r\n                                        yzm: \"获取验证码\",\r\n                                        shows: true,\r\n                                        seconds: 59\r\n                                    });\r\n                                }\r\n                            });\r\n                        }, 1000)\r\n                        ajax.post('/hcm/login/sendSMS', {\r\n                            \"mobile\": this.state.Pone,\r\n                            \"codeType\": \"HCM_PWD\",\r\n                            \"usertype\": this.state.usertypeID\r\n                        })\r\n                            .then((res) => {\r\n                                console.log(res)\r\n\r\n                            })\r\n                        \r\n                    }\r\n                } else {\r\n                    if (this.state.Pone != \"未绑定手机号\") {\r\n                        let siv = setInterval(() => {\r\n                            this.setState({\r\n                                yzm: `${this.state.seconds--}s后重新发送`,\r\n                                shows: false,\r\n                                forgetxs: false\r\n                            }, () => {\r\n                                if (this.state.seconds == 1) {\r\n                                    clearInterval(siv);\r\n                                    this.setState({\r\n                                        yzm: \"获取验证码\",\r\n                                        shows: true,\r\n                                        seconds: 59\r\n                                    });\r\n                                }\r\n                            });\r\n                        }, 1000)\r\n                        ajax.post('/hcm/login/sendSMS', {\r\n                            \"mobile\": this.state.Pone,\r\n                            \"codeType\": \"HCM_PWD\",\r\n                            \"usertype\": this.state.usertypeID\r\n                        })\r\n                            .then((res) => {\r\n                                console.log(res)\r\n\r\n                            })\r\n                       \r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    prev = () => {\r\n\r\n        if (this.state.current == 0) {\r\n            const current = this.state.current;\r\n            this.setState({ current });\r\n        } else {\r\n            this.setState({\r\n                yzm: \"获取验证码\",\r\n                shows: true,\r\n                forgetxs: false,\r\n                AqPercent: false\r\n            });\r\n            const current = this.state.current - 1;\r\n            this.setState({ current });\r\n\r\n        }\r\n\r\n    }\r\n    DL = () => {\r\n        window.location = \"/user.html#/login\" + this.state.usertypeID\r\n        \r\n    }\r\n    GOdl = () => {\r\n        window.location = \"/user.html#/login\" + this.state.usertypeID\r\n       \r\n    }\r\n    render() {\r\n        return <Tpl that={this} />\r\n    }\r\n}\r\n\r\nexport default Form.create()(Forgetpwd)"],"sourceRoot":""}