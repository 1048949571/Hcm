{"version":3,"sources":["webpack:///./app/widget/index/Brand/PendingClient/main.js","webpack:///./node_modules/_lodash@4.17.11@lodash/_assignValue.js","webpack:///./node_modules/_lodash@4.17.11@lodash/_baseAssignValue.js","webpack:///./node_modules/_lodash@4.17.11@lodash/_defineProperty.js"],"names":["App","props","getList","ajax","get","then","response","dataList","data","setState","catch","error","statusText","getlistDealerVerify","params","id","state","dealerVerify","editClient","item","index","bl","webStatus","match_id","dealer_id","aChangeClient","value","onSubkit","apply_status","applyStatus","success","message","React","Component","create"],"mappings":"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","file":"js/chunk/265_a08e3ca78ae3e439af5b.js","sourcesContent":["import Tpl from './tpl';\r\nimport { Form, Modal, message, Checkbox, Menu, Dropdown, Icon } from 'antd';\r\nimport ajax from '../../../../js/common/ajax';\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dataList:[],\r\n            dealerVerify:[],\r\n            id:null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getList()\r\n        \r\n    }\r\n\r\n    getList = () => {\r\n        ajax.get('/hcm/dealer/getlistVerify').\r\n        then((response) => {\r\n            let dataList = response.data.data;\r\n            this.setState({\r\n                dataList: dataList\r\n            })\r\n        }).catch((error) => {\r\n            message.error(error.statusText);\r\n        });\r\n    }\r\n    getlistDealerVerify=()=>{\r\n        ajax.get('/hcm/dealer/getlistDealerVerify', {\r\n            params: {\r\n                id:this.state.id\r\n            }\r\n        }).then((response) => {\r\n            let dataList = response.data.data;\r\n            this.setState({\r\n                dealerVerify: dataList\r\n            })\r\n        }).catch((error) => {\r\n            message.error(error.statusText);\r\n        });\r\n    }\r\n    editClient=(item,index,bl)=>{\r\n        let dataList = this.state.dataList;\r\n        dataList[index].webStatus=bl;\r\n        dataList[index].match_id = '';\r\n        this.setState({\r\n            dataList:dataList,\r\n            id:item.dealer_id\r\n        },()=>{\r\n            this.getlistDealerVerify()\r\n        })\r\n    }\r\n    aChangeClient = (value,index)=>{\r\n        let dataList = this.state.dataList;\r\n        dataList[index].match_id = value;\r\n        this.setState({\r\n            dataList:dataList\r\n        })\r\n    }\r\n    onSubkit=(item,apply_status)=>{\r\n        \r\n        ajax.get('/hcm/dealer/verify', {\r\n            params: {\r\n                applyStatus:apply_status,\r\n                id:item.id,\r\n                match_id:item.webStatus ==true ?item.match_id : ''\r\n            }\r\n        }).then((response) => {\r\n            this.getList()\r\n            message.success(response.data.message);\r\n        }).catch((error) => {\r\n            message.error(error.statusText);\r\n        });\r\n    }\r\n    render() {\r\n        return <Tpl that={this} />\r\n    }\r\n}\r\nexport default Form.create()(App);\r\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n"],"sourceRoot":""}