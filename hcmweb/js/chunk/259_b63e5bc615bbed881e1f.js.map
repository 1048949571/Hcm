{"version":3,"sources":["webpack:///./app/widget/index/Brand/MonitorInfo/main.js"],"names":["App","props","getList","state","date","pageNo","pageSize","targetItem","LoadingModal","bl","ajax","get","params","price_type","plat_code","id","match","my_date","moment","format","then","response","data","status","setState","pageNumber","totalNum","totalElements","dataList","content","priceList","obj","JSON","stringify","error","message","catch","statusText","editDate","e","getClassInfo","classInfo","changePagination","page","onPaginationSize","current","size","onScrollLeft","num","$","length","left","scrollLeft","stop","animate","onSelectItem","item","onExpand","expanded","record","forEach","index","num_iid","shopmainid","platform","product_id","wangwang","nickname","info","rowRender","indent","floor_price","floor_transaction_price","brand_name","product_name","custom_my","list","Object","entries","console","log","map","React","Component"],"mappings":"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","file":"js/chunk/259_b63e5bc615bbed881e1f.js","sourcesContent":["import Tpl from './tpl';\r\nimport { message,Icon,Tooltip } from 'antd';\r\nimport ajax from '../../../../js/common/ajax';\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            pageNo: 1,\r\n            pageSize: 10,\r\n            totalNum: 0,\r\n\r\n            date: moment(),\r\n            priceList: [],\r\n            dataList: [],\r\n            classInfo: {},\r\n            targetItem: {}\r\n\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getClassInfo()\r\n        this.getList()\r\n    }\r\n    \r\n    getList = () => {\r\n        let { date, pageNo, pageSize, targetItem } = this.state;\r\n        LoadingModal({bl:true})\r\n        ajax.get('/hcm/priceMonitor/Detail', {\r\n            params: {\r\n                pageNo,\r\n                pageSize,\r\n                price_type: targetItem.plat_code,\r\n                id: this.props.match.params.id,\r\n                my_date: moment(date).format('YYYY-MM-DD')\r\n            }\r\n        }).then((response) => {\r\n            LoadingModal({bl:false})\r\n            if (response.data.status == '10000') {\r\n\r\n                this.setState({\r\n                    pageNo: response.data.data.pageNumber,\r\n                    pageSize: response.data.data.pageSize,\r\n                    totalNum: response.data.data.totalElements,\r\n                    dataList: response.data.data.content,\r\n                    priceList: response.data.data.obj,\r\n                    targetItem: JSON.stringify(targetItem)=='{}' ? response.data.data.obj[0] : targetItem\r\n                })\r\n            } else {\r\n                message.error(response.data.message);\r\n            }\r\n        }).catch((error) => {\r\n            LoadingModal({bl:false})\r\n            message.error(error.statusText);\r\n        });\r\n    }\r\n    \r\n    editDate = (e) => {\r\n        this.setState({\r\n            date: e,\r\n            pageNo:1\r\n        }, () => {\r\n            this.getList()\r\n        })\r\n    }\r\n    getClassInfo = () => {\r\n        ajax.get('/hcm/priceMonitor/DetailCount', {\r\n            params: {\r\n                id: this.props.match.params.id\r\n            }\r\n        }).then((response) => {\r\n            this.setState({\r\n                classInfo: response.data.data\r\n            })\r\n        }).catch((error) => {\r\n            message.error(error.statusText);\r\n        });\r\n    }\r\n    changePagination = (page, pageSize) => {\r\n        this.setState({\r\n            pageNo: page,\r\n            pageSize: pageSize,\r\n        }, () => {\r\n            this.getList()\r\n        })\r\n    }\r\n    onPaginationSize = (current, size) => {\r\n        this.setState({\r\n            pageNo: 1,\r\n            pageSize: size,\r\n        }, () => {\r\n            this.getList()\r\n        })\r\n    }\r\n\r\n    onScrollLeft = (bl) => {\r\n        let num = $('.price-item').length * 240;\r\n        let left = $('.price-list').scrollLeft();\r\n        $('.price-list').stop(true, true);\r\n        if (bl) {\r\n            $('.price-list').animate({ scrollLeft: left + 900 }, 300)\r\n        } else {\r\n            $('.price-list').animate({ scrollLeft: left - 900 }, 300)\r\n        }\r\n    }\r\n    onSelectItem = (item) => {\r\n        this.setState({\r\n            pageNo:1,\r\n            pageSize:10,\r\n            targetItem: item,\r\n            dataList: [],\r\n        }, () => {\r\n            this.getList()\r\n        })\r\n    }\r\n\r\n    onExpand = (expanded, record) => {\r\n        if (expanded) {\r\n            let dataList = this.state.dataList;\r\n            let num = null;\r\n            dataList.forEach((item, index) => {\r\n                if (item.num_iid == record.num_iid) {\r\n                    num = index;\r\n                }\r\n\r\n            })\r\n            let {targetItem } = this.state;\r\n            ajax.get('/hcm/priceMonitor/DetailExp', {\r\n                params: {\r\n                    shopmainid:record.shopmainid,\r\n                    price_type: record.platform,\r\n                    id: this.props.match.params.id,\r\n                    product_id: record.product_id,\r\n                    wangwang:record.nickname\r\n                }\r\n            }).then((response) => {\r\n                if (response.data.status == '10000') {\r\n                    dataList[num].info = response.data.data;\r\n                    this.setState({ dataList })\r\n                } else {\r\n                    message.error(response.data.message);\r\n                }\r\n            }).catch((error) => {\r\n                message.error(error.statusText);\r\n            });\r\n            // dataList[num].info = 'ggggg'\r\n            // this.setState({ dataList })\r\n            //record => <p style={{ margin: 0 }}>{record.info}</p>\r\n        }\r\n\r\n    }\r\n    rowRender = (record, index, indent, expanded)=>{\r\n        \r\n        if(record.info){\r\n            let {floor_price,floor_transaction_price,brand_name,product_name,custom_my,...list} = record.info;\r\n            let dataList = Object.entries(list)\r\n            console.log(dataList)\r\n            return (\r\n            <div className='rowRender'>\r\n                {\r\n                    record.platform =='TB'|| record.platform =='TM'||record.platform =='1688'? \r\n                    <div className='a-info'>\r\n                        <h6>旺旺名称：{record.nickname}</h6>\r\n                        <h6>所属客户：{custom_my}</h6>\r\n                    </div>\r\n                    :\r\n                    <div className='a-info'>\r\n                        <h6>所属经销商{custom_my}</h6>\r\n                    </div>\r\n                }\r\n                <ul className='list-info'>\r\n                    <li>品牌:{brand_name}</li>\r\n                    <li>品名:{product_name}</li>\r\n                    <li>最低标价:{floor_price}</li>\r\n                    <li>最低成交价:{floor_transaction_price}</li>\r\n                    {\r\n                        dataList.map((item,index)=>{\r\n                            return(\r\n                                <li key={index}>{item[0]}:{item[1]}</li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        return <Tpl that={this} />\r\n    }\r\n}\r\nexport default App;\r\n"],"sourceRoot":""}