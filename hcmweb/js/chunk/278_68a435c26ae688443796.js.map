{"version":3,"sources":["webpack:///./app/widget/index/Brand/ShopFile/main.js"],"names":["confirm","App","props","inviteLinkStatus","bl","setState","errorListStatus","getPlatform","platForm","can","platform","onSearch","pageNo","dealername","state","isauthed","platform_code","shopname","oldSearch","getList","onTableCheckChange","selectedRowKeys","checkAll","changePagination","page","pageSize","onPaginationSize","current","size","onChange","e","type","target","value","onsChange","handleClearIconClick","totalNum","id","ajax","get","params","then","response","data","content","pageNumber","totalElements","obj","dataList","catch","error","statusText","rmAll","that","length","title","okText","cancelText","okButtonProps","className","cancelButtonProps","onOk","post","ids","join","success","message","rmItem","item","shopdealerid","getByProduct","module","productList","formatColumn","formAtDom","name","setTableVisible","arr","dataIndex","fixed","sort","width","key","render","text","index","forEach","isChecked","fieldvalue","push","fieldname","record","JSON","stringify","status","paddingRight","info","info_type","shopDetail","onShow","dealerid","verticalAlign","height","shopUrl","productClassifyName","align","ChangeHis","window","location","shopName","ProduHistory","handleUpload","fileList","formData","FormData","file","append","uploading","method","url","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","percent","rep","uploadVisible","warning","errorList","propsUpload","action","accept","onRemove","indexOf","newFileList","slice","splice","beforeUpload","onuploadVisible","onShowSetTable","ShopFile_SetTable","React","createRef","addStatus","visible","Component"],"mappings":"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","file":"js/chunk/278_68a435c26ae688443796.js","sourcesContent":["import Tpl from './tpl';\r\nimport { message, Menu, Dropdown, Divider, Modal, Tooltip } from 'antd';\r\nimport ajax from '../../../../js/common/ajax';\r\nimport platform  from '../../../components/platform'\r\nconst confirm = Modal.confirm;\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.ShopFile_SetTable = React.createRef()\r\n        this.shopDetail = React.createRef()\r\n        this.state = {\r\n            inviteLinkStatus:false,\r\n            errorListStatus:false,\r\n            errorList:{},\r\n            fileList: [],\r\n            percent: null,\r\n            uploading: false,\r\n            uploadVisible: false,\r\n            formatColumn: [],\r\n            selectedRowKeys: [],\r\n\r\n\r\n            addStatus: false,\r\n            visible: false,\r\n            dataList: [],\r\n\r\n            setTableVisible: false,\r\n\r\n            dealername: null,\r\n            isauthed: null,\r\n            platform_code: null,\r\n            shopname: null,\r\n            oldSearch:{\r\n                dealername: null,\r\n                isauthed: null,\r\n                platform_code: null,\r\n                shopname: null,\r\n            },\r\n            platForm:[],\r\n            pageNo: 1,\r\n            pageSize: 10,\r\n            checkAll: false,\r\n            totalElements: null,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getList()\r\n        this.getByProduct()\r\n        this.getPlatform()\r\n    }\r\n    inviteLinkStatus = (bl) => {\r\n        this.setState({\r\n            inviteLinkStatus: bl\r\n        })\r\n    }\r\n    errorListStatus = (bl) => {\r\n        this.setState({\r\n            errorListStatus: bl\r\n        })\r\n    }\r\n    getPlatform = () => {\r\n        // ajax.get('/hcm/sys/GetList', {\r\n        //     params: {\r\n        //         dictcode: 'platform'\r\n        //     }\r\n        // }).then((response) => {\r\n        //     if (response.data.status == '10000') {\r\n                this.setState({\r\n                    platForm: can.platform||[]\r\n                })\r\n        //     }\r\n\r\n        // }).catch((error) => {\r\n        //     message.error(error.statusText);\r\n        // });\r\n    }\r\n    onSearch = (bl=false) => {\r\n        this.setState({\r\n            pageNo: 1,\r\n            dealername:bl ? null : this.state.dealername,\r\n            isauthed: bl ? null : this.state.isauthed,\r\n            platform_code: bl ? null : this.state.platform_code,\r\n            shopname: bl ? null : this.state.shopname,\r\n            \r\n            oldSearch:{\r\n                dealername:bl ? null : this.state.dealername,\r\n                isauthed: bl ? null : this.state.isauthed,\r\n                platform_code: bl ? null : this.state.platform_code,\r\n                shopname: bl ? null : this.state.shopname,\r\n            },\r\n        }, () => {\r\n            this.getList()\r\n        })\r\n    }\r\n    onTableCheckChange = (selectedRowKeys) => {\r\n        // console.log(selectedRowKeys)\r\n        this.setState({\r\n            selectedRowKeys: selectedRowKeys,\r\n            checkAll: false\r\n        });\r\n    }\r\n    changePagination = (page, pageSize) => {\r\n        this.setState({\r\n            pageNo: page,\r\n            pageSize: pageSize,\r\n        }, () => {\r\n            this.getList()\r\n        })\r\n    }\r\n    onPaginationSize = (current, size) => {\r\n        this.setState({\r\n            pageNo: 1,\r\n            pageSize: size,\r\n        }, () => {\r\n            this.getList()\r\n        })\r\n    }\r\n    onChange = (e, type) => {\r\n        let state = this.state;\r\n        state[type] = e.target.value\r\n        this.setState(state)\r\n    }\r\n    onsChange = (e, type) => {\r\n        let state = this.state;\r\n        state[type] = e\r\n        this.setState(state)\r\n    }\r\n    handleClearIconClick = (type) => {\r\n        let state = this.state;\r\n        state[type] = null;\r\n        this.setState(state);\r\n    }\r\n    getList = () => {\r\n        let { pageNo, pageSize,dealername, isauthed, platform_code, shopname, totalNum, id } = this.state;\r\n        ajax.get('/hcm/hcmShop/getPageByBmc', {\r\n            params: {\r\n                dealername, isauthed, platform_code, shopname,\r\n                pageNo: pageNo,\r\n                pageSize: pageSize,\r\n            }\r\n        }).then((response) => {\r\n            let { content, pageNumber, pageSize, totalElements, obj } = response.data.data;\r\n            this.setState({\r\n                selectedRowKeys: [],\r\n                checkAll:false,\r\n                dataList: content,\r\n                pageNumber,\r\n                pageSize,\r\n                totalElements\r\n            })\r\n        }).catch((error) => {\r\n            message.error(error.statusText);\r\n        });\r\n    }\r\n    rmAll = () => {\r\n        let that = this;\r\n        let { checkAll, selectedRowKeys, totalElements } = this.state;\r\n        let {dealername, isauthed, platform_code, shopname,} = this.state.oldSearch;\r\n        if (selectedRowKeys.length == 0) {\r\n            message.error('至少选择一条')\r\n            return\r\n        }\r\n        confirm({\r\n            title: null,\r\n            content: <div>\r\n                        <div className='tips'>提示</div>\r\n                        <div className='pline'></div>\r\n                        <p className='Dtitle'>你确认要删除勾选的{checkAll ? totalElements : selectedRowKeys.length}个店铺吗？</p>\r\n                        <p>删除后<span className='red'>相关店铺将无法找回</span></p>\r\n                    </div>,\r\n            okText: '确定',\r\n            cancelText: '取消',\r\n            okButtonProps: {className:'btn2-main'},\r\n            cancelButtonProps: {className:'btn2-sub'},\r\n            className:'alert-item-confirm',\r\n            onOk() {\r\n                ajax.post('/hcm/hcmShop/Delete', {\r\n                    ids: checkAll ? 'checkAll' : selectedRowKeys.join(','),\r\n                    dealername: checkAll ? dealername : '', \r\n                    isauthed: checkAll ? isauthed : '', \r\n                    platform_code: checkAll ? platform_code : '', \r\n                    shopname: checkAll ? shopname : '',\r\n                    \r\n                }).then((response) => {\r\n                    message.success(response.data.message);\r\n                    that.onSearch(true)\r\n\r\n                }).catch((error) => {\r\n                    message.error(error.statusText);\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n    rmItem = (item) => {\r\n        let { id } = this.state;\r\n        let that = this;\r\n        confirm({\r\n            title: null,\r\n            content: <div>\r\n                        <div className='tips'>提示</div>\r\n                        <div className='pline'></div>\r\n                        <p className='Dtitle'>你确认要删除该店铺吗？</p>\r\n                        <p>删除后<span className='red'>该店铺将无法找回</span></p>\r\n                </div>,\r\n            okText: '确定',\r\n            cancelText: '取消',\r\n            okButtonProps: {className:'btn2-main'},\r\n            cancelButtonProps: {className:'btn2-sub'},\r\n            className:'alert-item-confirm',\r\n            onOk() {\r\n                ajax.post('/hcm/hcmShop/Delete', {\r\n                    ids:item.shopdealerid\r\n                }).then((response) => {\r\n                    message.success(response.data.message);\r\n                    that.getList()\r\n\r\n                }).catch((error) => {\r\n                    message.error(error.statusText);\r\n                });\r\n            }\r\n        })\r\n\r\n    }\r\n    getByProduct = () => {\r\n        ajax.get('/hcm/hcmCustomModel/getBybmcidAndModule', {\r\n            params: {\r\n                module:'SHOP'\r\n            }\r\n        }).then((response) => {\r\n            let productList = response.data.data;\r\n            this.setState({\r\n                formatColumn: this.formAtDom(productList)\r\n            })\r\n        }).catch((error) => {\r\n            message.error(error.statusText);\r\n        });\r\n    }\r\n\r\n    formAtDom = (data) => {\r\n        let { name, id, setTableVisible } = this.state;\r\n        let arr = [{\r\n            title: '序号',\r\n            dataIndex: 'index',\r\n            fixed: 'left',\r\n            sort: 0,\r\n            width: 80,\r\n            key: 'index',\r\n            render: (text, item, index) => index + 1,\r\n        }];\r\n        for (const key in data) {\r\n            data[key].data.forEach((item, index) => {\r\n                if (item.isChecked&&item.fieldvalue != 'platformname') {\r\n                    item.target = [key, index, item]\r\n                    return (\r\n                        arr.push({\r\n                            title: item.fieldname,\r\n                            dataIndex: item.fieldvalue,\r\n                            key: item.id,\r\n                            sort: item.sort,\r\n                            className: 'item-column',\r\n                            render: (text, record, index) => {\r\n                                \r\n                                return(\r\n                                    (item.fieldvalue === 'dealername' ?\r\n                                            JSON.stringify(record.status) == '{}' ?\r\n                                                <span>{text}</span>\r\n                                                :\r\n                                                <div>\r\n                                                    <span style={{paddingRight:10}}>{text}</span>\r\n                                                    <Tooltip placement=\"bottom\" title={record.status.info}>\r\n                                                    <span className={record.status.info_type}>{record.status.title}</span>\r\n                                                    </Tooltip>\r\n                                                </div>\r\n                                        :\r\n                                        item.fieldvalue === 'shopName' ?\r\n                                            <div>\r\n                                                <a  onClick={()=>this.shopDetail.current.onShow(record.id,record.dealerid)} style={{paddingRight:10}}>{text}</a>\r\n                                                {\r\n                                                    record.isauthed == 'AUTHED' ? \r\n                                                    <img style={{verticalAlign: 'bottom',paddingRight:10}} src='../../../../img/dinggou.jpg' />\r\n                                                    :null\r\n                                                }\r\n                                                {platform(record.platform_code,{verticalAlign: 'bottom',width:'20px',height:'20px'})}\r\n                                            </div>\r\n                                        :item.fieldvalue === 'shopUrl' ?\r\n                                         <a className='urlHide' target='_blank' href={record.shopUrl} >{record.shopUrl}</a>\r\n                                        : \r\n                                        item.fieldvalue === 'productclassifyid' ?\r\n                                        <div className='table-tb-box'>\r\n                                            <Tooltip placement=\"bottom\" title={record.productClassifyName ? record.productClassifyName.join(','):null}>\r\n                                            {record.productClassifyName ? record.productClassifyName.join(',') :null}\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        : \r\n                                        <div className='table-tb-box'>\r\n                                            <Tooltip placement=\"bottom\" title={text}>\r\n                                                {text}\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                    )\r\n                                )\r\n                                \r\n                                \r\n                            }\r\n                        })\r\n                    )\r\n                }\r\n\r\n            })\r\n        }\r\n        arr.push({\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            sort: 999999,\r\n            width: 180,\r\n            align: 'center',\r\n            fixed: 'right',\r\n            render: (text, item, index) => <div>\r\n                <a href={`index.html#/ActionShopFile/edit/${item.dealerid}/${item.id}`}>\r\n                    <img style={{ verticalAlign: 'text-bottom', paddingRight: '6px' }} src='../../../img/icon/icon_operating_edit.png' />\r\n                    编辑\r\n                </a>\r\n                <Divider type=\"vertical\" />\r\n                <Dropdown overlay={<Menu>\r\n                    <Menu.Item>\r\n                        <a className='A-COLOR' onClick={() => this.rmItem(item)}>\r\n                            <img style={{ verticalAlign: 'text-bottom', paddingRight: '6px' }} src='../../../img/icon/icon_operating_del.png' />\r\n                            删除\r\n                        </a>\r\n                    </Menu.Item>\r\n                    <Menu.Item>\r\n                        <a className='A-COLOR' onClick={() => this.ChangeHis(item)}>\r\n                            <img style={{ verticalAlign: 'text-bottom', paddingRight: '4px' }} src='../../../img/icon/icon_operating_history.png' />\r\n                            变更历史\r\n                        </a>\r\n                    </Menu.Item>\r\n                </Menu>}>\r\n                    <a >··· &nbsp;更多</a>\r\n                </Dropdown>\r\n            </div>,\r\n        })\r\n        return arr\r\n    }\r\n    ChangeHis = (item) => {\r\n        window.location = \"/index.html#/ChangeHistorys/HcmShopBmcDealer/\" + item.shopName + \"/\" + item.shopdealerid\r\n    }\r\n    ProduHistory = () => {\r\n        window.location = \"/index.html#/ChangeHistoryx/HcmShopBmcDealer/\"\r\n    }\r\n    checkAll = (bl) => {\r\n        let selectedRowKeys = this.state.selectedRowKeys;\r\n        if (bl) {\r\n            this.state.dataList.forEach((item, index) => {\r\n                selectedRowKeys.push(item.shopdealerid)\r\n            })\r\n\r\n        } else {\r\n            selectedRowKeys = []\r\n        }\r\n        this.setState({\r\n            checkAll: bl,\r\n            selectedRowKeys: selectedRowKeys\r\n        })\r\n    }\r\n    handleUpload = () => {\r\n        const { fileList } = this.state;\r\n        const formData = new FormData();\r\n        fileList.forEach((file) => {\r\n            formData.append('file', file);\r\n        });\r\n\r\n        this.setState({\r\n            uploading: true,\r\n        });\r\n        ajax({\r\n            method: 'post',\r\n            url: '/hcm/hcmShop/readExcelFile',\r\n            headers: { 'Content-Type': 'multipart/form-data' },\r\n            data: formData,\r\n            onUploadProgress: (progressEvent) => {\r\n                let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n\r\n                this.setState({\r\n                    percent: percentCompleted\r\n                })\r\n            }\r\n        })\r\n            .then((rep) => {\r\n                this.setState({\r\n                    fileList: [],\r\n                    uploading: false,\r\n                    uploadVisible: false,\r\n                });\r\n                this.getList()\r\n                if(rep.data.status=='10000'){\r\n                    \r\n                    if(rep.data.data&&rep.data.data.length){\r\n                        message.warning(rep.data.message);\r\n                        this.errorListStatus(true)\r\n                        this.setState({\r\n                            errorList:rep.data\r\n                        })\r\n                    }else{\r\n                        message.success(rep.data.message);\r\n                    }\r\n                    \r\n                }else{\r\n                    message.warning(rep.data.message);\r\n                }\r\n                \r\n            })\r\n            .catch(() => {\r\n                this.setState({\r\n                    uploading: false,\r\n                });\r\n                message.error('upload failed.');\r\n            });\r\n    }\r\n    propsUpload = () => {\r\n        return {\r\n            action: '/hcm/hcmShop/readExcelFile',\r\n            accept: 'application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n            onRemove: (file) => {\r\n                this.setState(({ fileList }) => {\r\n                    const index = fileList.indexOf(file);\r\n                    const newFileList = fileList.slice();\r\n                    newFileList.splice(index, 1);\r\n                    return {\r\n                        fileList: newFileList,\r\n                    };\r\n                });\r\n            },\r\n            beforeUpload: (file) => {\r\n                this.setState(() => ({\r\n                    fileList: [file],\r\n                }));\r\n                return false;\r\n            },\r\n            fileList: this.state.fileList,\r\n        }\r\n    }\r\n    onuploadVisible = (bl) => {\r\n        this.setState({\r\n            uploadVisible: bl,\r\n            fileList: [],\r\n            uploading: false,\r\n            percent: null\r\n        })\r\n    }\r\n    onShowSetTable = (bl, type) => {\r\n        if (type == 'getlist') {\r\n            this.getByProduct()\r\n            this.onSearch()\r\n        }\r\n        this.setState({\r\n            setTableVisible: bl\r\n        },()=>{\r\n            bl ? this.ShopFile_SetTable.current.getByProduct():null\r\n        })\r\n    }\r\n    render() {\r\n        return <Tpl that={this} />\r\n    }\r\n}\r\nexport default App;\r\n"],"sourceRoot":""}