{"version":3,"sources":["webpack:///./node_modules/_antd@3.10.1@antd/es/tree-select/index.js","webpack:///./node_modules/_antd@3.10.1@antd/es/tree-select/style/css.js","webpack:///./node_modules/_antd@3.10.1@antd/es/tree-select/style/index.css","webpack:///./node_modules/_rc-tree-select@2.3.1@rc-tree-select/es/Base/BasePopup.js","webpack:///./node_modules/_rc-tree-select@2.3.1@rc-tree-select/es/Base/BaseSelector.js","webpack:///./node_modules/_rc-tree-select@2.3.1@rc-tree-select/es/Popup/MultiplePopup.js","webpack:///./node_modules/_rc-tree-select@2.3.1@rc-tree-select/es/Popup/SinglePopup.js","webpack:///./node_modules/_rc-tree-select@2.3.1@rc-tree-select/es/SearchInput.js","webpack:///./node_modules/_rc-tree-select@2.3.1@rc-tree-select/es/Select.js","webpack:///./node_modules/_rc-tree-select@2.3.1@rc-tree-select/es/SelectNode.js","webpack:///./node_modules/_rc-tree-select@2.3.1@rc-tree-select/es/SelectTrigger.js","webpack:///./node_modules/_rc-tree-select@2.3.1@rc-tree-select/es/Selector/MultipleSelector/Selection.js","webpack:///./node_modules/_rc-tree-select@2.3.1@rc-tree-select/es/Selector/MultipleSelector/index.js","webpack:///./node_modules/_rc-tree-select@2.3.1@rc-tree-select/es/Selector/SingleSelector.js","webpack:///./node_modules/_rc-tree-select@2.3.1@rc-tree-select/es/index.js","webpack:///./node_modules/_rc-tree-select@2.3.1@rc-tree-select/es/propTypes.js","webpack:///./node_modules/_rc-tree-select@2.3.1@rc-tree-select/es/strategies.js","webpack:///./node_modules/_rc-tree-select@2.3.1@rc-tree-select/es/util.js","webpack:///./node_modules/_rc-trigger@3.0.0-rc.3@rc-trigger/es/LazyRenderBox.js","webpack:///./node_modules/_rc-trigger@3.0.0-rc.3@rc-trigger/es/Popup.js","webpack:///./node_modules/_rc-trigger@3.0.0-rc.3@rc-trigger/es/PopupInner.js","webpack:///./node_modules/_rc-trigger@3.0.0-rc.3@rc-trigger/es/index.js","webpack:///./node_modules/_rc-trigger@3.0.0-rc.3@rc-trigger/es/utils.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACc;AACA;AACN;AAC4B;AAClC;AACvD,aAAa,SAAI,IAAI,SAAI;AACzB;AACA;AACA;AACA,KAAK,yHAAyH,cAAc;AAC5I;AACA,KAAK;AACL;AAC+B;AAC4D;AACvD;AAC2B;AACxB;AACZ;AACA;;AAE3B;AACA,IAAI,qEAAS;;AAEb;AACA,QAAQ,2EAAe;;AAEvB,oBAAoB,sFAA0B;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,mDAAmB,CAAC,8CAAI,GAAG,mEAAmE;AACrH;AACA;AACA;AACA;AACA,mBAAmB,mDAAmB,CAAC,8CAAI,GAAG,8DAA8D;AAC5G;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wDAAI;AAC3B,sBAAsB,iDAAU,kBAAkB,EAAE,2EAAe,oDAAoD,2EAAe;AACtI;AACA;AACA,4BAA4B,mDAAmB,UAAU,gDAAgD;AACzG;AACA,2CAA2C,oDAAoB,eAAe,kDAAkB,8BAA8B,mDAAmB,CAAC,8CAAI,GAAG,qDAAqD;AAC9M,6BAA6B,mDAAmB,CAAC,8CAAI,GAAG,uDAAuD;AAC/G,4BAA4B,mDAAmB,CAAC,8CAAI,GAAG,8EAA8E;AACrI,mBAAmB,mDAAmB,CAAC,sDAAY,EAAE,oEAAQ,EAAE,6GAA6G,SAAS,oBAAoB,iDAAU,wGAAwG,oEAAQ,EAAE,uCAAuC,mIAAmI;AAC/e;AACA,QAAQ,8DAAO;AACf;AACA;;AAEA,IAAI,wEAAY;AAChB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,mDAAmB;AACtC,gBAAgB,uEAAc;AAC9B,iBAAiB,2CAA2C,EAAE;AAC9D;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,CAAC,+CAAe;;AAEF,yEAAU,EAAC;;AAE1B,sBAAsB,uDAAQ;AAC9B,sBAAsB,uDAAQ;AAC9B,yBAAyB,0DAAW;AACpC,wBAAwB,yDAAU;AAClC;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;AC5GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACV;AACrB;AACgC;;;;;;;;;;;;ACHhC,yC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACc;AACN;AAC4B;AAClC;AAC7B;AACS;AACgB;AACxB;;AAEpB;AACP,kBAAkB,iDAAS;AAC3B,oBAAoB,iDAAS;AAC7B,mBAAmB,iDAAS;AAC5B;;AAEA;AACA,EAAE,qEAAS;;AAEX;AACA,IAAI,2EAAe;;AAEnB,gBAAgB,sFAA0B;;AAE1C;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,wEAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,gBAAgB,4CAAK;AACrB,UAAU,+CAAI;AACd,UAAU,oEAAQ;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA,aAAa,4CAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gCAAgC;AAChC;AACA,uDAAuD;AACvD;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;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AAG;AAC3C;;;AAGA,wEAAQ;;AAEO,0EAAW,E;;;;;;;;;;;;ACnK1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AACpB;AACc;AACN;AAC4B;AAClC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE0B;AACS;AACgB;AACV;AACD;AAClB;;AAEsB;AACe;AACN;AACE;AACsC;AAC/C;AACI;;AAEe;;AAEoL;AAC7M;AACF;;AAEtC;AACA,EAAE,qEAAS;;AAEX;AACA,IAAI,2EAAe;;AAEnB,gBAAgB,sFAA0B;;AAE1C;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,qBAAqB;AACrB;;AAEA;AACA;;AAEA,wBAAwB,wDAAS;AACjC,6BAA6B,wDAAS;;AAEtC;AACA;AACA,mBAAmB,6DAAc;AACjC;AACA;;AAEA,EAAE,wEAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;AAGA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sBAAsB,oEAAQ,GAAG;AACjC;AACA;AACA,qCAAqC,8EAAkB,iBAAiB,8EAAkB;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,+BAA+B,6DAAa,GAAG,2DAAW;AAC1D,mBAAmB,4CAAK,sBAAsB,oEAAQ,GAAG;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,kCAAkC,mEAAgB,GAAG,iEAAc;AACnE,sBAAsB,4CAAK,yBAAyB,oEAAQ,GAAG;AAC/D;AACA,OAAO;;AAEP,aAAa,4CAAK;AAClB,QAAQ,uDAAa;AACrB,QAAQ,oEAAQ,GAAG;;AAEnB;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,oBAAoB,gEAAiB;AACrC;AACA,OAAO;;AAEP;AACA;;AAEA,wDAAwD;;AAExD;AACA,aAAa,oDAAY;AACzB;AACA;AACA,OAAO;;AAEP;AACA;AACA,2BAA2B,oEAAQ;AACnC;AACA;AACA;AACA,SAAS,uDAAuD;AAChE,oBAAoB,gEAAiB,CAAC,kEAAmB;AACzD;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,0BAA0B,oEAAqB;AAC/C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,kEAAmB;AAClD;AACA,SAAS;AACT;;AAEA;AACA,6BAA6B,kEAAmB;AAChD;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,8EAAkB,uBAAuB,8EAAkB;AACjG;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,8BAA8B,2DAAY;AAC1C;;AAEA;;;AAGA;AACA;AACA;AACA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AAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,kBAAkB,2DAAY;AAC9B,OAAO;AACP,kBAAkB,2DAAY,kDAAkD,uBAAuB;AACvG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,oBAAoB,oEAAQ,GAAG;AAC/B;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA,uBAAuB,uBAAuB;AAC9C,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,2BAA2B,uBAAuB;AAClD;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL,gEAAgE,kBAAkB;AAClF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,OAAO;;AAEP;AACA;AACA,+CAA+C,8EAAkB,cAAc,8EAAkB;AACjG;AACA;AACA,SAAS;AACT,OAAO;AACP,kBAAkB,2DAAY,2DAA2D,0BAA0B;AACnH;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA,eAAe,0DAAW;AAC1B,OAAO;AACP,KAAK;AACL,kCAAkC,8DAAe;AACjD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,4DAAa;AACxC,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA,QAAQ,0DAAO;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA,kEAAkE,yCAAyC;AAC3G;AACA;;AAEA,iCAAiC,aAAa;AAC9C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,6DAAc;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,2CAAG;AACP,MAAM,2CAAG;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,gBAAgB,oEAAQ;AACxB;AACA;AACA;AACA;AACA,gBAAgB;AAChB,OAAO;AACP,KAAK;;AAEL;AACA,4BAA4B,kEAAmB;;AAE/C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,8EAAkB,iBAAiB,8EAAkB;AAC1F,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,oDAAU;AAC5B,kBAAkB,qDAAQ;AAC1B,qBAAqB,wDAAW;AA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,SAAS,iDAAS,sBAAsB,iDAAS;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACO;AACP,iEAAiE,aAAa;AAC9E;AACA;;AAEA;AACA;AACA;;;AAGA,MAAM,4DAAc;AACpB,2BAA2B,iDAAS;AACpC,aAAa,iDAAS;AACtB;AACA,KAAK;AACL;AACA,8GAA8G,wCAAwC,MAAM,wCAAwC;AACpM;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAO;AACA;AACA,8B;;;;;;;;;;;;ACFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AAC3B;AACI;AAC+H;AACvG;AAChB;AACiB;;AAEvD;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEA;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAgB,oEAAQ,GAAG;AAC3B;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,oEAAQ,GAAG;AAC3B;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,2EAAW;AAC9B;AACA,KAAK;;AAEL;AACA,aAAa,4CAAK;AAClB,QAAQ,mDAAU;AAClB,QAAQ,oEAAQ,GAAG;AACnB;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL,gCAAgC,uDAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK,kCAAkC,sDAAU;AACjD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,oEAAQ,GAAG;;AAE9B;AACA;AACA;AACA,MAAM,8CAAO;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP,SAAS,yEAAmB,YAAY,6BAA6B;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,oEAAQ,GAAG;AACpB;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP,SAAS,6EAAuB;AAChC;AACA;AACA,GAAG;AACH;;AAEO,mBAAmB,4DAAc,C;;;;;;;;;;;;ACtZxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqF;AAClB;AACsB;AAClC;AACd;AACN;;AAEnC;AACA,EAAE,qEAAS;;AAEX;AACA,IAAI,2EAAe;;AAEnB,WAAW,sFAA0B;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,oFAAwB;;AAExC,2BAA2B,4CAAK;AAChC;AACA;AACA;AACA,aAAa,4CAAK;AAClB;;AAEA,WAAW,4CAAK;AAChB;;AAEA;AACA,CAAC,CAAC,+CAAS;;AAEX;AACA,YAAY,iDAAS;AACrB,aAAa,iDAAS;AACtB,WAAW,iDAAS;AACpB,mBAAmB,iDAAS;AAC5B;;;AAGe,4EAAa,E;;;;;;;;;;;;AC/C5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACc;AACsB;AAClC;AACd;AACN;AACF;AACJ;AACI;AACX;AACgB;AACM;AACV;;AAElC;AACA,EAAE,qEAAS;;AAEX;AACA,IAAI,2EAAe;;AAEnB,gBAAgB,sFAA0B;;AAE1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,+CAAO;AAChC,yBAAyB,+CAAO;AAChC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA,WAAW,gDAAQ;AACnB;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,QAAQ,0CAAG;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,mBAAmB,oEAAQ,GAAG;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,4CAAK;AAClB,QAAQ,kDAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,kBAAkB,4CAAK;AACvB,UAAU,gDAAK;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU,4CAAK;AACf,YAAY,oDAAU;AACtB,YAAY,oEAAQ;AACpB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA,WAAW,4CAAK;AAChB,MAAM,kDAAO;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM,4CAAK;AACX,QAAQ,gDAAK;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA,SAAS;AACT,QAAQ,4CAAK;AACb,UAAU,oDAAU;AACpB,UAAU,oEAAQ;AAClB;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4CAAK,eAAe,uDAAa;AACrD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,sBAAsB,4CAAK;AAC3B,UAAU,kDAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,4CAAK;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC,CAAC,+CAAS;;AAEX;AACA,WAAW,iDAAS;AACpB,SAAS,iDAAS;AAClB,yBAAyB,iDAAS;AAClC,WAAW,iDAAS;AACpB,kBAAkB,iDAAS;AAC3B,gBAAgB,iDAAS;AACzB,SAAS,iDAAS;AAClB,sBAAsB,iDAAS;AAC/B,aAAa,iDAAS;AACtB,aAAa,iDAAS;AACtB,gBAAgB,iDAAS;AACzB,WAAW,iDAAS;AACpB,YAAY,iDAAS;AACrB,SAAS,iDAAS;AAClB,WAAW,iDAAS;AACpB,WAAW,iDAAS;AACpB,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;AClVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmE;AACsB;AAClC;AACd;AACN;AACS;;AAE5C;AACA,EAAE,qEAAS;;AAEX;AACA,IAAI,2EAAe;;AAEnB,WAAW,sFAA0B;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4CAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM,4CAAK;AACX,QAAQ,sDAAa;AACrB,SAAS,kEAAkE;AAC3E;AACA;AACA;AACA;;AAEA;AACA,CAAC,CAAC,+CAAS;;AAEX;AACA,mBAAmB,iDAAS;AAC5B,aAAa,iDAAS;AACtB,aAAa,iDAAS;AACtB,gBAAgB,iDAAS;AACzB,gBAAgB,iDAAS;AACzB,YAAY,iDAAS;AACrB;;;AAGe,yEAAU,E;;;;;;;;;;;;ACnDzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACc;AACsB;AAClC;AAC7B;AACS;AACmB;AACP;AACgB;AACnC;AAC4C;AACf;AAClB;AACH;;AAEpC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,oBAAoB,sDAAY;;AAEhC;AACA,EAAE,qEAAS;;AAEX;AACA,IAAI,2EAAe;;AAEnB,gBAAgB,sFAA0B;;AAE1C;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,8BAA8B;AAC9B;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,+EAAgB;AACnD;AACA;AACA;AACA;AACA,mCAAmC,+EAAgB;AACnD;AACA;AACA;AACA;AACA,0CAA0C,+EAAgB;AAC1D;AACA;AACA;AACA,0CAA0C,+EAAgB;AAC1D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,qEAAqB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,yCAAyC;AACpE;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,4CAAK;AACrB,yBAAyB;;AAEzB;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,4BAA4B,kDAAU;AACtC;AACA;AACA;AACA,kBAAkB,4CAAK;;AAEvB;AACA,aAAa,4CAAK;AAClB,QAAQ,mEAAe;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,4CAAK;AACpB,QAAQ,0DAAM;AACd;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC,CAAC,4CAAK;;AAEP;AACA,YAAY,iDAAS;AACrB,UAAU,iDAAS,YAAY,iDAAS,SAAS,iDAAS,SAAS,iDAAS;AAC5E,cAAc,iDAAS;AACvB,cAAc,iDAAS;AACvB,8BAA8B,iDAAS;AACvC,wBAAwB,iDAAS;AACjC,2BAA2B,iDAAS;AACpC,SAAS,iDAAS,YAAY,iDAAS,OAAO,iDAAS;AACvD,cAAc,iDAAS;AACvB,aAAa,iDAAS;AACtB,kBAAkB,iDAAS;AAC3B,aAAa,iDAAS;AACtB,kBAAkB,iDAAS;AAC3B,qBAAqB,iDAAS;AAC9B,uBAAuB,iDAAS,YAAY,iDAAS,SAAS,iDAAS;AACvE,kBAAkB,iDAAS;AAC3B,mBAAmB,iDAAS;AAC5B,mBAAmB,iDAAS;AAC5B,UAAU,iDAAS;AACnB,cAAc,iDAAS;AACvB,aAAa,iDAAS;AACtB,qBAAqB,iDAAS;AAC9B,eAAe,iDAAS;AACxB,eAAe,iDAAS;AACxB,sBAAsB,iDAAS;AAC/B,QAAQ,iDAAS;AACjB,gBAAgB,iDAAS;AACzB,gBAAgB,iDAAS;AACzB,cAAc,iDAAS;AACvB,gBAAgB,iDAAS;AACzB,uBAAuB,iDAAS;AAChC,sBAAsB,iDAAS,YAAY,iDAAS,SAAS,iDAAS;AACtE,iBAAiB,iDAAS;AAC1B,WAAW,iDAAS;AACpB,cAAc,iDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oHAAoH,uEAAQ;AAC5H;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,6DAAW;AAC1B;AACA,SAAS,uEAAQ,mBAAmB,uEAAQ;AAC5C;AACA;AACA;;AAEA;AACA,WAAW,6DAAW;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,sEAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,4CAAK;AAChB,MAAM,8CAAK;AACX,MAAM,oEAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,6DAAW;AACjF;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,sEAAO,E;;;;;;;;;;;;ACprBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,SAAS,oEAAQ,GAAG;AACpB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,C","file":"js/chunk/26_7b5d6a55ffdde723f71d.js","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nvar __rest = this && this.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n    }return t;\n};\nimport * as React from 'react';\nimport RcTreeSelect, { TreeNode, SHOW_ALL, SHOW_PARENT, SHOW_CHILD } from 'rc-tree-select';\nimport classNames from 'classnames';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport warning from '../_util/warning';\nimport Icon from '../icon';\nimport omit from 'omit.js';\n\nvar TreeSelect = function (_React$Component) {\n    _inherits(TreeSelect, _React$Component);\n\n    function TreeSelect(props) {\n        _classCallCheck(this, TreeSelect);\n\n        var _this = _possibleConstructorReturn(this, (TreeSelect.__proto__ || Object.getPrototypeOf(TreeSelect)).call(this, props));\n\n        _this.saveTreeSelect = function (node) {\n            _this.rcTreeSelect = node;\n        };\n        _this.renderSwitcherIcon = function (_ref) {\n            var isLeaf = _ref.isLeaf,\n                loading = _ref.loading;\n            var prefixCls = _this.props.prefixCls;\n\n            if (loading) {\n                return React.createElement(Icon, { type: 'loading', className: prefixCls + '-switcher-loading-icon' });\n            }\n            if (isLeaf) {\n                return null;\n            }\n            return React.createElement(Icon, { type: 'caret-down', className: prefixCls + '-switcher-icon' });\n        };\n        _this.renderTreeSelect = function (locale) {\n            var _classNames;\n\n            var _a = _this.props,\n                prefixCls = _a.prefixCls,\n                className = _a.className,\n                size = _a.size,\n                notFoundContent = _a.notFoundContent,\n                dropdownStyle = _a.dropdownStyle,\n                dropdownClassName = _a.dropdownClassName,\n                suffixIcon = _a.suffixIcon,\n                restProps = __rest(_a, [\"prefixCls\", \"className\", \"size\", \"notFoundContent\", \"dropdownStyle\", \"dropdownClassName\", \"suffixIcon\"]);\n            var rest = omit(restProps, ['inputIcon', 'removeIcon', 'clearIcon', 'switcherIcon']);\n            var cls = classNames((_classNames = {}, _defineProperty(_classNames, prefixCls + '-lg', size === 'large'), _defineProperty(_classNames, prefixCls + '-sm', size === 'small'), _classNames), className);\n            var checkable = rest.treeCheckable;\n            if (checkable) {\n                checkable = React.createElement('span', { className: prefixCls + '-tree-checkbox-inner' });\n            }\n            var inputIcon = suffixIcon && (React.isValidElement(suffixIcon) ? React.cloneElement(suffixIcon) : suffixIcon) || React.createElement(Icon, { type: 'down', className: prefixCls + '-arrow-icon' });\n            var removeIcon = React.createElement(Icon, { type: 'close', className: prefixCls + '-remove-icon' });\n            var clearIcon = React.createElement(Icon, { type: 'close-circle', className: prefixCls + '-clear-icon', theme: 'filled' });\n            return React.createElement(RcTreeSelect, _extends({ switcherIcon: _this.renderSwitcherIcon, inputIcon: inputIcon, removeIcon: removeIcon, clearIcon: clearIcon }, rest, { dropdownClassName: classNames(dropdownClassName, prefixCls + '-tree-dropdown'), prefixCls: prefixCls, className: cls, dropdownStyle: _extends({ maxHeight: '100vh', overflow: 'auto' }, dropdownStyle), treeCheckable: checkable, notFoundContent: notFoundContent || locale.notFoundContent, ref: _this.saveTreeSelect }));\n        };\n        warning(props.multiple !== false || !props.treeCheckable, '`multiple` will alway be `true` when `treeCheckable` is true');\n        return _this;\n    }\n\n    _createClass(TreeSelect, [{\n        key: 'focus',\n        value: function focus() {\n            this.rcTreeSelect.focus();\n        }\n    }, {\n        key: 'blur',\n        value: function blur() {\n            this.rcTreeSelect.blur();\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            return React.createElement(\n                LocaleReceiver,\n                { componentName: 'Select', defaultLocale: {} },\n                this.renderTreeSelect\n            );\n        }\n    }]);\n\n    return TreeSelect;\n}(React.Component);\n\nexport default TreeSelect;\n\nTreeSelect.TreeNode = TreeNode;\nTreeSelect.SHOW_ALL = SHOW_ALL;\nTreeSelect.SHOW_PARENT = SHOW_PARENT;\nTreeSelect.SHOW_CHILD = SHOW_CHILD;\nTreeSelect.defaultProps = {\n    prefixCls: 'ant-select',\n    transitionName: 'slide-up',\n    choiceTransitionName: 'zoom',\n    showSearch: false\n};","import '../../style/index.css';\nimport './index.css';\n// style dependencies\nimport '../../select/style/css';\nimport '../../checkbox/style/css';","// removed by extract-text-webpack-plugin","import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Tree from 'rc-tree';\n\nexport var popupContextTypes = {\n  onPopupKeyDown: PropTypes.func.isRequired,\n  onTreeNodeSelect: PropTypes.func.isRequired,\n  onTreeNodeCheck: PropTypes.func.isRequired\n};\n\nvar BasePopup = function (_React$Component) {\n  _inherits(BasePopup, _React$Component);\n\n  function BasePopup(props) {\n    _classCallCheck(this, BasePopup);\n\n    var _this = _possibleConstructorReturn(this, (BasePopup.__proto__ || Object.getPrototypeOf(BasePopup)).call(this));\n\n    _initialiseProps.call(_this);\n\n    var treeDefaultExpandAll = props.treeDefaultExpandAll,\n        treeDefaultExpandedKeys = props.treeDefaultExpandedKeys,\n        keyEntities = props.keyEntities;\n\n    // TODO: make `expandedKeyList` control\n\n    var expandedKeyList = treeDefaultExpandedKeys;\n    if (treeDefaultExpandAll) {\n      expandedKeyList = Object.keys(keyEntities);\n    }\n\n    _this.state = {\n      keyList: [],\n      expandedKeyList: expandedKeyList,\n      loadedKeys: []\n    };\n    return _this;\n  }\n\n  _createClass(BasePopup, [{\n    key: 'render',\n    value: function render() {\n      var _state = this.state,\n          keyList = _state.keyList,\n          expandedKeyList = _state.expandedKeyList,\n          loadedKeys = _state.loadedKeys;\n      var _props = this.props,\n          prefixCls = _props.prefixCls,\n          treeNodes = _props.treeNodes,\n          filteredTreeNodes = _props.filteredTreeNodes,\n          treeIcon = _props.treeIcon,\n          treeLine = _props.treeLine,\n          treeCheckable = _props.treeCheckable,\n          treeCheckStrictly = _props.treeCheckStrictly,\n          multiple = _props.multiple,\n          loadData = _props.loadData,\n          ariaId = _props.ariaId,\n          renderSearch = _props.renderSearch,\n          switcherIcon = _props.switcherIcon;\n      var _context$rcTreeSelect = this.context.rcTreeSelect,\n          onPopupKeyDown = _context$rcTreeSelect.onPopupKeyDown,\n          onTreeNodeSelect = _context$rcTreeSelect.onTreeNodeSelect,\n          onTreeNodeCheck = _context$rcTreeSelect.onTreeNodeCheck;\n\n\n      var treeProps = {};\n\n      if (treeCheckable) {\n        treeProps.checkedKeys = keyList;\n      } else {\n        treeProps.selectedKeys = keyList;\n      }\n\n      var $notFound = void 0;\n      var $treeNodes = void 0;\n      if (filteredTreeNodes) {\n        if (filteredTreeNodes.length) {\n          treeProps.checkStrictly = true;\n          $treeNodes = filteredTreeNodes;\n        } else {\n          $notFound = this.renderNotFound();\n        }\n      } else if (!treeNodes.length) {\n        $notFound = this.renderNotFound();\n      } else {\n        $treeNodes = treeNodes;\n      }\n\n      var $tree = void 0;\n      if ($notFound) {\n        $tree = $notFound;\n      } else {\n        $tree = React.createElement(\n          Tree,\n          _extends({\n            prefixCls: prefixCls + '-tree',\n            showIcon: treeIcon,\n            showLine: treeLine,\n            selectable: !treeCheckable,\n            checkable: treeCheckable,\n            checkStrictly: treeCheckStrictly,\n            multiple: multiple,\n            loadData: loadData,\n            loadedKeys: loadedKeys,\n            expandedKeys: expandedKeyList,\n            filterTreeNode: this.filterTreeNode,\n            onSelect: onTreeNodeSelect,\n            onCheck: onTreeNodeCheck,\n            onExpand: this.onTreeExpand,\n            onLoad: this.onLoad,\n            switcherIcon: switcherIcon\n          }, treeProps),\n          $treeNodes\n        );\n      }\n\n      return React.createElement(\n        'div',\n        {\n          role: 'listbox',\n          id: ariaId,\n          onKeyDown: onPopupKeyDown,\n          tabIndex: -1\n        },\n        renderSearch ? renderSearch() : null,\n        $tree\n      );\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var _ref = prevState || {},\n          _ref$prevProps = _ref.prevProps,\n          prevProps = _ref$prevProps === undefined ? {} : _ref$prevProps,\n          loadedKeys = _ref.loadedKeys;\n\n      var valueList = nextProps.valueList,\n          valueEntities = nextProps.valueEntities,\n          keyEntities = nextProps.keyEntities,\n          filteredTreeNodes = nextProps.filteredTreeNodes;\n\n\n      var newState = {\n        prevProps: nextProps\n      };\n\n      // Check value update\n      if (valueList !== prevProps.valueList) {\n        newState.keyList = valueList.map(function (_ref2) {\n          var value = _ref2.value;\n          return valueEntities[value];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (_ref3) {\n          var key = _ref3.key;\n          return key;\n        });\n      }\n\n      // Show all when tree is in filter mode\n      if (!nextProps.treeExpandedKeys && filteredTreeNodes && filteredTreeNodes.length && filteredTreeNodes !== prevProps.filteredTreeNodes) {\n        newState.expandedKeyList = Object.keys(keyEntities);\n      }\n\n      // Use expandedKeys if provided\n      if (prevProps.treeExpandedKeys !== nextProps.treeExpandedKeys) {\n        newState.expandedKeyList = nextProps.treeExpandedKeys;\n      }\n\n      // Clean loadedKeys if key not exist in keyEntities anymore\n      if (nextProps.loadData) {\n        newState.loadedKeys = loadedKeys.filter(function (key) {\n          return key in keyEntities;\n        });\n      }\n\n      return newState;\n    }\n\n    /**\n     * This method pass to Tree component which is used for add filtered class\n     * in TreeNode > li\n     */\n\n  }]);\n\n  return BasePopup;\n}(React.Component);\n\nBasePopup.propTypes = {\n  prefixCls: PropTypes.string,\n  upperSearchValue: PropTypes.string,\n  valueList: PropTypes.array,\n  valueEntities: PropTypes.object,\n  keyEntities: PropTypes.object,\n  treeIcon: PropTypes.bool,\n  treeLine: PropTypes.bool,\n  treeNodeFilterProp: PropTypes.string,\n  treeCheckable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  treeCheckStrictly: PropTypes.bool,\n  treeDefaultExpandAll: PropTypes.bool,\n  treeDefaultExpandedKeys: PropTypes.array,\n  treeExpandedKeys: PropTypes.array,\n  loadData: PropTypes.func,\n  multiple: PropTypes.bool,\n  onTreeExpand: PropTypes.func,\n\n  treeNodes: PropTypes.node,\n  filteredTreeNodes: PropTypes.node,\n  notFoundContent: PropTypes.string,\n\n  ariaId: PropTypes.string,\n  switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n  // HOC\n  renderSearch: PropTypes.func,\n  onTreeExpanded: PropTypes.func\n};\nBasePopup.contextTypes = {\n  rcTreeSelect: PropTypes.shape(_extends({}, popupContextTypes))\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.onTreeExpand = function (expandedKeyList) {\n    var _props2 = _this2.props,\n        treeExpandedKeys = _props2.treeExpandedKeys,\n        onTreeExpand = _props2.onTreeExpand,\n        onTreeExpanded = _props2.onTreeExpanded;\n\n    // Set uncontrolled state\n\n    if (!treeExpandedKeys) {\n      _this2.setState({ expandedKeyList: expandedKeyList }, onTreeExpanded);\n    }\n\n    if (onTreeExpand) {\n      onTreeExpand(expandedKeyList);\n    }\n  };\n\n  this.onLoad = function (loadedKeys) {\n    _this2.setState({ loadedKeys: loadedKeys });\n  };\n\n  this.filterTreeNode = function (treeNode) {\n    var _props3 = _this2.props,\n        upperSearchValue = _props3.upperSearchValue,\n        treeNodeFilterProp = _props3.treeNodeFilterProp;\n\n\n    var filterVal = treeNode.props[treeNodeFilterProp];\n    if (typeof filterVal === 'string') {\n      return upperSearchValue && filterVal.toUpperCase().indexOf(upperSearchValue) !== -1;\n    }\n\n    return false;\n  };\n\n  this.renderNotFound = function () {\n    var _props4 = _this2.props,\n        prefixCls = _props4.prefixCls,\n        notFoundContent = _props4.notFoundContent;\n\n\n    return React.createElement(\n      'span',\n      { className: prefixCls + '-not-found' },\n      notFoundContent\n    );\n  };\n};\n\npolyfill(BasePopup);\n\nexport default BasePopup;","import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n/**\n * Input Box is in different position for different mode.\n * This not the same design as `Select` cause it's followed by antd 0.x `Select`.\n * We will not follow the new design immediately since antd 3.x is already released.\n *\n * So this file named as Selector to avoid confuse.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { createRef } from '../util';\n\nexport var selectorPropTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  open: PropTypes.bool,\n  valueList: PropTypes.array, // Name as valueList to diff the single value\n  allowClear: PropTypes.bool,\n  showArrow: PropTypes.bool,\n  onClick: PropTypes.func,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  removeSelected: PropTypes.func,\n\n  // Pass by component\n  ariaId: PropTypes.string,\n  inputIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  clearIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\n\nexport var selectorContextTypes = {\n  onSelectorFocus: PropTypes.func.isRequired,\n  onSelectorBlur: PropTypes.func.isRequired,\n  onSelectorKeyDown: PropTypes.func.isRequired,\n  onSelectorClear: PropTypes.func.isRequired\n};\n\nexport default function (modeName) {\n  var BaseSelector = function (_React$Component) {\n    _inherits(BaseSelector, _React$Component);\n\n    function BaseSelector() {\n      _classCallCheck(this, BaseSelector);\n\n      var _this = _possibleConstructorReturn(this, (BaseSelector.__proto__ || Object.getPrototypeOf(BaseSelector)).call(this));\n\n      _this.onFocus = function () {\n        var _this$props = _this.props,\n            onFocus = _this$props.onFocus,\n            focused = _this$props.focused;\n        var onSelectorFocus = _this.context.rcTreeSelect.onSelectorFocus;\n\n\n        if (!focused) {\n          onSelectorFocus();\n        }\n\n        if (onFocus) {\n          onFocus.apply(undefined, arguments);\n        }\n      };\n\n      _this.onBlur = function () {\n        var onBlur = _this.props.onBlur;\n        var onSelectorBlur = _this.context.rcTreeSelect.onSelectorBlur;\n\n        // TODO: Not trigger when is inner component get focused\n\n        onSelectorBlur();\n\n        if (onBlur) {\n          onBlur.apply(undefined, arguments);\n        }\n      };\n\n      _this.focus = function () {\n        _this.domRef.current.focus();\n      };\n\n      _this.blur = function () {\n        _this.domRef.current.focus();\n      };\n\n      _this.domRef = createRef();\n      return _this;\n    }\n\n    _createClass(BaseSelector, [{\n      key: 'renderClear',\n      value: function renderClear() {\n        var _props = this.props,\n            prefixCls = _props.prefixCls,\n            allowClear = _props.allowClear,\n            valueList = _props.valueList,\n            clearIcon = _props.clearIcon;\n        var onSelectorClear = this.context.rcTreeSelect.onSelectorClear;\n\n\n        if (!allowClear || !valueList.length || !valueList[0].value) {\n          return null;\n        }\n\n        return React.createElement(\n          'span',\n          {\n            key: 'clear',\n            className: prefixCls + '-selection__clear',\n            onClick: onSelectorClear\n          },\n          typeof clearIcon === 'function' ? React.createElement(clearIcon, _extends({}, this.props)) : clearIcon\n        );\n      }\n    }, {\n      key: 'renderArrow',\n      value: function renderArrow() {\n        var _props2 = this.props,\n            prefixCls = _props2.prefixCls,\n            showArrow = _props2.showArrow,\n            inputIcon = _props2.inputIcon;\n\n        if (!showArrow) {\n          return null;\n        }\n\n        return React.createElement(\n          'span',\n          {\n            key: 'arrow',\n            className: prefixCls + '-arrow',\n            style: { outline: 'none' }\n          },\n          typeof inputIcon === 'function' ? React.createElement(inputIcon, _extends({}, this.props)) : inputIcon\n        );\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _classNames;\n\n        var _props3 = this.props,\n            prefixCls = _props3.prefixCls,\n            className = _props3.className,\n            style = _props3.style,\n            open = _props3.open,\n            focused = _props3.focused,\n            disabled = _props3.disabled,\n            allowClear = _props3.allowClear,\n            onClick = _props3.onClick,\n            ariaId = _props3.ariaId,\n            renderSelection = _props3.renderSelection,\n            renderPlaceholder = _props3.renderPlaceholder,\n            tabIndex = _props3.tabIndex;\n        var onSelectorKeyDown = this.context.rcTreeSelect.onSelectorKeyDown;\n\n\n        var myTabIndex = tabIndex;\n        if (disabled) {\n          myTabIndex = null;\n        }\n\n        return React.createElement(\n          'span',\n          {\n            style: style,\n            onClick: onClick,\n            className: classNames(className, prefixCls, (_classNames = {}, _defineProperty(_classNames, prefixCls + '-open', open), _defineProperty(_classNames, prefixCls + '-focused', open || focused), _defineProperty(_classNames, prefixCls + '-disabled', disabled), _defineProperty(_classNames, prefixCls + '-enabled', !disabled), _defineProperty(_classNames, prefixCls + '-allow-clear', allowClear), _classNames)),\n            ref: this.domRef,\n            role: 'combobox',\n            'aria-expanded': open,\n            'aria-owns': open ? ariaId : undefined,\n            'aria-controls': open ? ariaId : undefined,\n            'aria-haspopup': 'listbox',\n            'aria-disabled': disabled,\n            tabIndex: myTabIndex,\n            onFocus: this.onFocus,\n            onBlur: this.onBlur,\n            onKeyDown: onSelectorKeyDown\n          },\n          React.createElement(\n            'span',\n            {\n              key: 'selection',\n              className: classNames(prefixCls + '-selection', prefixCls + '-selection--' + modeName)\n            },\n            renderSelection(),\n            this.renderClear(),\n            this.renderArrow(),\n            renderPlaceholder && renderPlaceholder()\n          )\n        );\n      }\n    }]);\n\n    return BaseSelector;\n  }(React.Component);\n\n  BaseSelector.propTypes = _extends({}, selectorPropTypes, {\n\n    // Pass by HOC\n    renderSelection: PropTypes.func.isRequired,\n    renderPlaceholder: PropTypes.func,\n    tabIndex: PropTypes.number\n  });\n  BaseSelector.contextTypes = {\n    rcTreeSelect: PropTypes.shape(_extends({}, selectorContextTypes))\n  };\n  BaseSelector.defaultProps = {\n    tabIndex: 0\n  };\n\n\n  polyfill(BaseSelector);\n\n  return BaseSelector;\n}","import BasePopup from '../Base/BasePopup';\n\nexport default BasePopup;","import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BasePopup from '../Base/BasePopup';\nimport SearchInput from '../SearchInput';\nimport { createRef } from '../util';\n\nvar SinglePopup = function (_React$Component) {\n  _inherits(SinglePopup, _React$Component);\n\n  function SinglePopup() {\n    _classCallCheck(this, SinglePopup);\n\n    var _this = _possibleConstructorReturn(this, (SinglePopup.__proto__ || Object.getPrototypeOf(SinglePopup)).call(this));\n\n    _this.onPlaceholderClick = function () {\n      _this.inputRef.current.focus();\n    };\n\n    _this.renderPlaceholder = function () {\n      var _this$props = _this.props,\n          searchPlaceholder = _this$props.searchPlaceholder,\n          searchValue = _this$props.searchValue,\n          prefixCls = _this$props.prefixCls;\n\n\n      if (!searchPlaceholder) {\n        return null;\n      }\n\n      return React.createElement(\n        'span',\n        {\n          style: {\n            display: searchValue ? 'none' : 'block'\n          },\n          onClick: _this.onPlaceholderClick,\n          className: prefixCls + '-search__field__placeholder'\n        },\n        searchPlaceholder\n      );\n    };\n\n    _this.renderSearch = function () {\n      var _this$props2 = _this.props,\n          showSearch = _this$props2.showSearch,\n          dropdownPrefixCls = _this$props2.dropdownPrefixCls;\n\n\n      if (!showSearch) {\n        return null;\n      }\n\n      return React.createElement(\n        'span',\n        { className: dropdownPrefixCls + '-search' },\n        React.createElement(SearchInput, _extends({}, _this.props, {\n          ref: _this.inputRef,\n          renderPlaceholder: _this.renderPlaceholder\n        }))\n      );\n    };\n\n    _this.inputRef = createRef();\n    return _this;\n  }\n\n  _createClass(SinglePopup, [{\n    key: 'render',\n    value: function render() {\n      return React.createElement(BasePopup, _extends({}, this.props, {\n        renderSearch: this.renderSearch\n      }));\n    }\n  }]);\n\n  return SinglePopup;\n}(React.Component);\n\nSinglePopup.propTypes = _extends({}, BasePopup.propTypes, {\n  searchValue: PropTypes.string,\n  showSearch: PropTypes.bool,\n  dropdownPrefixCls: PropTypes.string,\n  disabled: PropTypes.bool,\n  searchPlaceholder: PropTypes.string\n});\n\n\nexport default SinglePopup;","import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n/**\n * Since search box is in different position with different mode.\n * - Single: in the popup box\n * - multiple: in the selector\n * Move the code as a SearchInput for easy management.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { createRef } from './util';\n\nexport var searchContextTypes = {\n  onSearchInputChange: PropTypes.func.isRequired\n};\n\nvar SearchInput = function (_React$Component) {\n  _inherits(SearchInput, _React$Component);\n\n  function SearchInput() {\n    _classCallCheck(this, SearchInput);\n\n    var _this = _possibleConstructorReturn(this, (SearchInput.__proto__ || Object.getPrototypeOf(SearchInput)).call(this));\n\n    _this.alignInputWidth = function () {\n      _this.inputRef.current.style.width = _this.mirrorInputRef.current.clientWidth + 'px';\n    };\n\n    _this.focus = function (isDidMount) {\n      if (_this.inputRef.current) {\n        _this.inputRef.current.focus();\n        if (isDidMount) {\n          setTimeout(function () {\n            _this.inputRef.current.focus();\n          }, 0);\n        }\n      }\n    };\n\n    _this.blur = function () {\n      if (_this.inputRef.current) {\n        _this.inputRef.current.blur();\n      }\n    };\n\n    _this.inputRef = createRef();\n    _this.mirrorInputRef = createRef();\n    return _this;\n  }\n\n  _createClass(SearchInput, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          open = _props.open,\n          needAlign = _props.needAlign;\n\n      if (needAlign) {\n        this.alignInputWidth();\n      }\n\n      if (open) {\n        this.focus(true);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var _props2 = this.props,\n          open = _props2.open,\n          searchValue = _props2.searchValue,\n          needAlign = _props2.needAlign;\n\n\n      if (open && prevProps.open !== open) {\n        this.focus();\n      }\n\n      if (needAlign && searchValue !== prevProps.searchValue) {\n        this.alignInputWidth();\n      }\n    }\n\n    /**\n     * `scrollWidth` is not correct in IE, do the workaround.\n     * ref: https://github.com/react-component/tree-select/issues/65\n     */\n\n\n    /**\n     * Need additional timeout for focus cause parent dom is not ready when didMount trigger\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          searchValue = _props3.searchValue,\n          prefixCls = _props3.prefixCls,\n          disabled = _props3.disabled,\n          renderPlaceholder = _props3.renderPlaceholder,\n          open = _props3.open,\n          ariaId = _props3.ariaId;\n      var _context$rcTreeSelect = this.context.rcTreeSelect,\n          onSearchInputChange = _context$rcTreeSelect.onSearchInputChange,\n          onSearchInputKeyDown = _context$rcTreeSelect.onSearchInputKeyDown;\n\n\n      return React.createElement(\n        'span',\n        { className: prefixCls + '-search__field__wrap' },\n        React.createElement('input', {\n          type: 'text',\n          ref: this.inputRef,\n          onChange: onSearchInputChange,\n          onKeyDown: onSearchInputKeyDown,\n          value: searchValue,\n          disabled: disabled,\n          className: prefixCls + '-search__field',\n\n          'aria-label': 'filter select',\n          'aria-autocomplete': 'list',\n          'aria-controls': open ? ariaId : undefined,\n          'aria-multiline': 'false'\n        }),\n        React.createElement(\n          'span',\n          {\n            ref: this.mirrorInputRef,\n            className: prefixCls + '-search__field__mirror'\n          },\n          searchValue,\n          '\\xA0'\n        ),\n        renderPlaceholder ? renderPlaceholder() : null\n      );\n    }\n  }]);\n\n  return SearchInput;\n}(React.Component);\n\nSearchInput.propTypes = {\n  open: PropTypes.bool,\n  searchValue: PropTypes.string,\n  prefixCls: PropTypes.string,\n  disabled: PropTypes.bool,\n  renderPlaceholder: PropTypes.func,\n  needAlign: PropTypes.bool,\n  ariaId: PropTypes.string\n};\nSearchInput.contextTypes = {\n  rcTreeSelect: PropTypes.shape(_extends({}, searchContextTypes))\n};\n\n\npolyfill(SearchInput);\n\nexport default SearchInput;","import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n/**\n * ARIA: https://www.w3.org/TR/wai-aria/#combobox\n * Sample 1: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/combobox/aria1.1pattern/listbox-combo.html\n * Sample 2: https://www.w3.org/blog/wai-components-gallery/widget/combobox-with-aria-autocompleteinline/\n *\n * Tab logic:\n * Popup is close\n * 1. Focus input (mark component as focused)\n * 2. Press enter to show the popup\n * 3. If popup has input, focus it\n *\n * Popup is open\n * 1. press tab to close the popup\n * 2. Focus back to the selection input box\n * 3. Let the native tab going on\n *\n * TreeSelect use 2 design type.\n * In single mode, we should focus on the `span`\n * In multiple mode, we should focus on the `input`\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport KeyCode from 'rc-util/es/KeyCode';\nimport shallowEqual from 'shallowequal';\nimport raf from 'raf';\n\nimport SelectTrigger from './SelectTrigger';\nimport { selectorContextTypes } from './Base/BaseSelector';\nimport { popupContextTypes } from './Base/BasePopup';\nimport SingleSelector from './Selector/SingleSelector';\nimport MultipleSelector, { multipleSelectorContextTypes } from './Selector/MultipleSelector';\nimport SinglePopup from './Popup/SinglePopup';\nimport MultiplePopup from './Popup/MultiplePopup';\n\nimport { SHOW_ALL, SHOW_PARENT, SHOW_CHILD } from './strategies';\n\nimport { createRef, generateAriaId, formatInternalValue, formatSelectorValue, parseSimpleTreeData, convertDataToTree, convertTreeToEntities, conductCheck, flatToHierarchy, isPosRelated, isLabelInValue, getFilterTree, cleanEntity } from './util';\nimport { valueProp } from './propTypes';\nimport SelectNode from './SelectNode';\n\nvar Select = function (_React$Component) {\n  _inherits(Select, _React$Component);\n\n  function Select(props) {\n    _classCallCheck(this, Select);\n\n    var _this = _possibleConstructorReturn(this, (Select.__proto__ || Object.getPrototypeOf(Select)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var prefixAria = props.prefixAria,\n        defaultOpen = props.defaultOpen,\n        open = props.open;\n\n\n    _this.state = {\n      open: open || defaultOpen,\n      valueList: [],\n      missValueList: [], // Contains the value not in the tree\n      selectorValueList: [], // Used for multiple selector\n      valueEntities: {},\n      keyEntities: {},\n      searchValue: '',\n\n      init: true\n    };\n\n    _this.selectorRef = createRef();\n    _this.selectTriggerRef = createRef();\n\n    // ARIA need `aria-controls` props mapping\n    // Since this need user input. Let's generate ourselves\n    _this.ariaId = generateAriaId(prefixAria + '-list');\n    return _this;\n  }\n\n  _createClass(Select, [{\n    key: 'getChildContext',\n    value: function getChildContext() {\n      return {\n        rcTreeSelect: {\n          onSelectorFocus: this.onSelectorFocus,\n          onSelectorBlur: this.onSelectorBlur,\n          onSelectorKeyDown: this.onComponentKeyDown,\n          onSelectorClear: this.onSelectorClear,\n          onMultipleSelectorRemove: this.onMultipleSelectorRemove,\n\n          onTreeNodeSelect: this.onTreeNodeSelect,\n          onTreeNodeCheck: this.onTreeNodeCheck,\n          onPopupKeyDown: this.onComponentKeyDown,\n\n          onSearchInputChange: this.onSearchInputChange,\n          onSearchInputKeyDown: this.onSearchInputKeyDown\n        }\n      };\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          autoFocus = _props.autoFocus,\n          disabled = _props.disabled;\n\n\n      if (autoFocus && !disabled) {\n        this.focus();\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(_, prevState) {\n      if (prevState.valueList !== this.state.valueList) {\n        this.forcePopupAlign();\n      }\n    }\n\n    // ==================== Selector ====================\n\n\n    // Handle key board event in both Selector and Popup\n\n\n    // ===================== Popup ======================\n\n\n    // ==================== Trigger =====================\n\n    /**\n     * Only update the value which is not in props\n     */\n\n\n    // [Legacy] Origin provide `documentClickClose` which triggered by `Trigger`\n    // Currently `TreeSelect` align the hide popup logic as `Select` which blur to hide.\n    // `documentClickClose` is not accurate anymore. Let's just keep the key word.\n\n\n    // Tree checkable is also a multiple case\n\n\n    // [Legacy] To align with `Select` component,\n    // We use `searchValue` instead of `inputValue`\n    // but currently still need support that.\n    // Add this method the check if is controlled\n\n\n    // TODO: onChoiceAnimationLeave\n\n\n    /**\n     * 1. Update state valueList.\n     * 2. Fire `onChange` event to user.\n     */\n\n  }, {\n    key: 'focus',\n    value: function focus() {\n      this.selectorRef.current.focus();\n    }\n  }, {\n    key: 'blur',\n    value: function blur() {\n      this.selectorRef.current.blur();\n    }\n\n    // ===================== Render =====================\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _state = this.state,\n          valueList = _state.valueList,\n          missValueList = _state.missValueList,\n          selectorValueList = _state.selectorValueList,\n          valueEntities = _state.valueEntities,\n          keyEntities = _state.keyEntities,\n          searchValue = _state.searchValue,\n          open = _state.open,\n          focused = _state.focused,\n          treeNodes = _state.treeNodes,\n          filteredTreeNodes = _state.filteredTreeNodes;\n      var _props2 = this.props,\n          prefixCls = _props2.prefixCls,\n          treeExpandedKeys = _props2.treeExpandedKeys,\n          onTreeExpand = _props2.onTreeExpand;\n\n      var isMultiple = this.isMultiple();\n\n      var passProps = _extends({}, this.props, {\n        isMultiple: isMultiple,\n        valueList: valueList,\n        selectorValueList: [].concat(_toConsumableArray(missValueList), _toConsumableArray(selectorValueList)),\n        valueEntities: valueEntities,\n        keyEntities: keyEntities,\n        searchValue: searchValue,\n        upperSearchValue: (searchValue || '').toUpperCase(), // Perf save\n        open: open,\n        focused: focused,\n        dropdownPrefixCls: prefixCls + '-dropdown',\n        ariaId: this.ariaId\n      });\n\n      var Popup = isMultiple ? MultiplePopup : SinglePopup;\n      var $popup = React.createElement(Popup, _extends({}, passProps, {\n        onTreeExpanded: this.delayForcePopupAlign,\n        treeNodes: treeNodes,\n        filteredTreeNodes: filteredTreeNodes\n        // Tree expanded control\n        , treeExpandedKeys: treeExpandedKeys,\n        onTreeExpand: onTreeExpand\n      }));\n\n      var Selector = isMultiple ? MultipleSelector : SingleSelector;\n      var $selector = React.createElement(Selector, _extends({}, passProps, {\n        ref: this.selectorRef\n      }));\n\n      return React.createElement(\n        SelectTrigger,\n        _extends({}, passProps, {\n\n          ref: this.selectTriggerRef,\n          popupElement: $popup,\n\n          onKeyDown: this.onKeyDown,\n          onDropdownVisibleChange: this.onDropdownVisibleChange\n        }),\n        $selector\n      );\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var _prevState$prevProps = prevState.prevProps,\n          prevProps = _prevState$prevProps === undefined ? {} : _prevState$prevProps;\n      var treeCheckable = nextProps.treeCheckable,\n          treeCheckStrictly = nextProps.treeCheckStrictly,\n          filterTreeNode = nextProps.filterTreeNode,\n          treeNodeFilterProp = nextProps.treeNodeFilterProp,\n          treeDataSimpleMode = nextProps.treeDataSimpleMode;\n\n      var newState = {\n        prevProps: nextProps,\n        init: false\n      };\n\n      // Process the state when props updated\n      function processState(propName, updater) {\n        if (prevProps[propName] !== nextProps[propName]) {\n          updater(nextProps[propName], prevProps[propName]);\n          return true;\n        }\n        return false;\n      }\n\n      var valueRefresh = false;\n\n      // Open\n      processState('open', function (propValue) {\n        newState.open = propValue;\n      });\n\n      // Tree Nodes\n      var treeNodes = void 0;\n      var treeDataChanged = false;\n      var treeDataModeChanged = false;\n      processState('treeData', function (propValue) {\n        treeNodes = convertDataToTree(propValue);\n        treeDataChanged = true;\n      });\n\n      processState('treeDataSimpleMode', function (propValue, prevValue) {\n        if (!propValue) return;\n\n        var prev = !prevValue || prevValue === true ? {} : prevValue;\n\n        // Shallow equal to avoid dynamic prop object\n        if (!shallowEqual(propValue, prev)) {\n          treeDataModeChanged = true;\n        }\n      });\n\n      // Parse by `treeDataSimpleMode`\n      if (treeDataSimpleMode && (treeDataChanged || treeDataModeChanged)) {\n        var simpleMapper = _extends({\n          id: 'id',\n          pId: 'pId',\n          rootPId: null\n        }, treeDataSimpleMode !== true ? treeDataSimpleMode : {});\n        treeNodes = convertDataToTree(parseSimpleTreeData(nextProps.treeData, simpleMapper));\n      }\n\n      // If `treeData` not provide, use children TreeNodes\n      if (!nextProps.treeData) {\n        processState('children', function (propValue) {\n          treeNodes = Array.isArray(propValue) ? propValue : [propValue];\n        });\n      }\n\n      // Convert `treeData` to entities\n      if (treeNodes) {\n        var entitiesMap = convertTreeToEntities(treeNodes);\n        newState.treeNodes = treeNodes;\n        newState.posEntities = entitiesMap.posEntities;\n        newState.valueEntities = entitiesMap.valueEntities;\n        newState.keyEntities = entitiesMap.keyEntities;\n\n        valueRefresh = true;\n      }\n\n      // Value List\n      if (prevState.init) {\n        processState('defaultValue', function (propValue) {\n          newState.valueList = formatInternalValue(propValue, nextProps);\n          valueRefresh = true;\n        });\n      }\n\n      processState('value', function (propValue) {\n        newState.valueList = formatInternalValue(propValue, nextProps);\n        valueRefresh = true;\n      });\n\n      // Selector Value List\n      if (valueRefresh) {\n        // Find out that value not exist in the tree\n        var missValueList = [];\n        var filteredValueList = [];\n        var keyList = [];\n\n        // Get latest value list\n        var latestValueList = newState.valueList;\n        if (!latestValueList) {\n          // Also need add prev missValueList to avoid new treeNodes contains the value\n          latestValueList = [].concat(_toConsumableArray(prevState.valueList), _toConsumableArray(prevState.missValueList));\n        }\n\n        // Get key by value\n        latestValueList.forEach(function (wrapperValue) {\n          var value = wrapperValue.value;\n\n          var entity = (newState.valueEntities || prevState.valueEntities)[value];\n\n          if (entity) {\n            keyList.push(entity.key);\n            filteredValueList.push(wrapperValue);\n            return;\n          }\n\n          // If not match, it may caused by ajax load. We need keep this\n          missValueList.push(wrapperValue);\n        });\n\n        // We need calculate the value when tree is checked tree\n        if (treeCheckable && !treeCheckStrictly) {\n          // Calculate the keys need to be checked\n          var _conductCheck = conductCheck(keyList, true, newState.keyEntities || prevState.keyEntities),\n              checkedKeys = _conductCheck.checkedKeys;\n\n          // Format value list again for internal usage\n\n\n          newState.valueList = checkedKeys.map(function (key) {\n            return {\n              value: (newState.keyEntities || prevState.keyEntities)[key].value\n            };\n          });\n        } else {\n          newState.valueList = filteredValueList;\n        }\n\n        // Fill the missValueList, we still need display in the selector\n        newState.missValueList = missValueList;\n\n        // Calculate the value list for `Selector` usage\n        newState.selectorValueList = formatSelectorValue(newState.valueList, nextProps, newState.valueEntities || prevState.valueEntities);\n      }\n\n      // [Legacy] To align with `Select` component,\n      // We use `searchValue` instead of `inputValue` but still keep the api\n      // `inputValue` support `null` to work as `autoClearSearchValue`\n      processState('inputValue', function (propValue) {\n        if (propValue !== null) {\n          newState.searchValue = propValue;\n        }\n      });\n\n      // Search value\n      processState('searchValue', function (propValue) {\n        newState.searchValue = propValue;\n      });\n\n      // Do the search logic\n      if (newState.searchValue !== undefined || prevState.searchValue && treeNodes) {\n        var searchValue = newState.searchValue !== undefined ? newState.searchValue : prevState.searchValue;\n        var upperSearchValue = String(searchValue).toUpperCase();\n\n        var filterTreeNodeFn = filterTreeNode;\n        if (filterTreeNode === false) {\n          // Don't filter if is false\n          filterTreeNodeFn = function filterTreeNodeFn() {\n            return true;\n          };\n        } else if (typeof filterTreeNodeFn !== 'function') {\n          // When is not function (true or undefined), use inner filter\n          filterTreeNodeFn = function filterTreeNodeFn(_, node) {\n            var nodeValue = String(node.props[treeNodeFilterProp]).toUpperCase();\n            return nodeValue.indexOf(upperSearchValue) !== -1;\n          };\n        }\n\n        newState.filteredTreeNodes = getFilterTree(newState.treeNodes || prevState.treeNodes, searchValue, filterTreeNodeFn, newState.valueEntities || prevState.valueEntities);\n      }\n\n      // Checked Strategy\n      processState('showCheckedStrategy', function () {\n        newState.selectorValueList = newState.selectorValueList || formatSelectorValue(newState.valueList || prevState.valueList, nextProps, newState.valueEntities || prevState.valueEntities);\n      });\n\n      return newState;\n    }\n  }]);\n\n  return Select;\n}(React.Component);\n\nSelect.propTypes = {\n  prefixCls: PropTypes.string,\n  prefixAria: PropTypes.string,\n  multiple: PropTypes.bool,\n  showArrow: PropTypes.bool,\n  open: PropTypes.bool,\n  value: valueProp,\n  autoFocus: PropTypes.bool,\n\n  defaultOpen: PropTypes.bool,\n  defaultValue: valueProp,\n\n  showSearch: PropTypes.bool,\n  placeholder: PropTypes.node,\n  inputValue: PropTypes.string, // [Legacy] Deprecated. Use `searchValue` instead.\n  searchValue: PropTypes.string,\n  autoClearSearchValue: PropTypes.bool,\n  searchPlaceholder: PropTypes.node, // [Legacy] Confuse with placeholder\n  disabled: PropTypes.bool,\n  children: PropTypes.node,\n  labelInValue: PropTypes.bool,\n  maxTagCount: PropTypes.number,\n  maxTagPlaceholder: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  maxTagTextLength: PropTypes.number,\n  showCheckedStrategy: PropTypes.oneOf([SHOW_ALL, SHOW_PARENT, SHOW_CHILD]),\n\n  dropdownMatchSelectWidth: PropTypes.bool,\n  treeData: PropTypes.array,\n  treeDataSimpleMode: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  treeNodeFilterProp: PropTypes.string,\n  treeNodeLabelProp: PropTypes.string,\n  treeCheckable: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n  treeCheckStrictly: PropTypes.bool,\n  treeIcon: PropTypes.bool,\n  treeLine: PropTypes.bool,\n  treeDefaultExpandAll: PropTypes.bool,\n  treeDefaultExpandedKeys: PropTypes.array,\n  treeExpandedKeys: PropTypes.array,\n  loadData: PropTypes.func,\n  filterTreeNode: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n\n  notFoundContent: PropTypes.string,\n\n  onSearch: PropTypes.func,\n  onSelect: PropTypes.func,\n  onDeselect: PropTypes.func,\n  onChange: PropTypes.func,\n  onDropdownVisibleChange: PropTypes.func,\n\n  onTreeExpand: PropTypes.func,\n\n  inputIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  clearIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  removeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  switcherIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\nSelect.childContextTypes = {\n  rcTreeSelect: PropTypes.shape(_extends({}, selectorContextTypes, multipleSelectorContextTypes, popupContextTypes, {\n\n    onSearchInputChange: PropTypes.func,\n    onSearchInputKeyDown: PropTypes.func\n  }))\n};\nSelect.defaultProps = {\n  prefixCls: 'rc-tree-select',\n  prefixAria: 'rc-tree-select',\n  showArrow: true,\n  showSearch: true,\n  autoClearSearchValue: true,\n  showCheckedStrategy: SHOW_CHILD,\n\n  // dropdownMatchSelectWidth change the origin design, set to false now\n  // ref: https://github.com/react-component/select/blob/4cad95e098a341a09de239ad6981067188842020/src/Select.jsx#L344\n  // ref: https://github.com/react-component/select/pull/71\n  treeNodeFilterProp: 'value',\n  treeNodeLabelProp: 'title',\n  treeIcon: false,\n  notFoundContent: 'Not Found'\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.onSelectorFocus = function () {\n    _this2.setState({ focused: true });\n  };\n\n  this.onSelectorBlur = function () {\n    _this2.setState({ focused: false });\n\n    // TODO: Close when Popup is also not focused\n    // this.setState({ open: false });\n  };\n\n  this.onComponentKeyDown = function (event) {\n    var open = _this2.state.open;\n    var keyCode = event.keyCode;\n\n\n    if (!open) {\n      if ([KeyCode.ENTER, KeyCode.DOWN].indexOf(keyCode) !== -1) {\n        _this2.setOpenState(true);\n      }\n    } else if (KeyCode.ESC === keyCode) {\n      _this2.setOpenState(false);\n    } else if ([KeyCode.UP, KeyCode.DOWN, KeyCode.LEFT, KeyCode.RIGHT].indexOf(keyCode) !== -1) {\n      // TODO: Handle `open` state\n      event.stopPropagation();\n    }\n  };\n\n  this.onDeselect = function (wrappedValue, node, nodeEventInfo) {\n    var onDeselect = _this2.props.onDeselect;\n\n    if (!onDeselect) return;\n\n    onDeselect(wrappedValue, node, nodeEventInfo);\n  };\n\n  this.onSelectorClear = function (event) {\n    var disabled = _this2.props.disabled;\n\n    if (disabled) return;\n\n    _this2.triggerChange([], []);\n\n    if (!_this2.isSearchValueControlled()) {\n      _this2.setUncontrolledState({\n        searchValue: '',\n        filteredTreeNodes: null\n      });\n    }\n\n    event.stopPropagation();\n  };\n\n  this.onMultipleSelectorRemove = function (event, removeValue) {\n    event.stopPropagation();\n\n    var _state2 = _this2.state,\n        valueList = _state2.valueList,\n        missValueList = _state2.missValueList,\n        valueEntities = _state2.valueEntities;\n    var _props3 = _this2.props,\n        treeCheckable = _props3.treeCheckable,\n        treeCheckStrictly = _props3.treeCheckStrictly,\n        treeNodeLabelProp = _props3.treeNodeLabelProp,\n        disabled = _props3.disabled;\n\n    if (disabled) return;\n\n    // Find trigger entity\n    var triggerEntity = valueEntities[removeValue];\n\n    // Clean up value\n    var newValueList = valueList;\n    if (triggerEntity) {\n      // If value is in tree\n      if (treeCheckable && !treeCheckStrictly) {\n        newValueList = valueList.filter(function (_ref) {\n          var value = _ref.value;\n\n          var entity = valueEntities[value];\n          return !isPosRelated(entity.pos, triggerEntity.pos);\n        });\n      } else {\n        newValueList = valueList.filter(function (_ref2) {\n          var value = _ref2.value;\n          return value !== removeValue;\n        });\n      }\n    }\n\n    var triggerNode = triggerEntity ? triggerEntity.node : null;\n\n    var extraInfo = {\n      triggerValue: removeValue,\n      triggerNode: triggerNode\n    };\n    var deselectInfo = {\n      node: triggerNode\n    };\n\n    // [Legacy] Little hack on this to make same action as `onCheck` event.\n    if (treeCheckable) {\n      var filteredEntityList = newValueList.map(function (_ref3) {\n        var value = _ref3.value;\n        return valueEntities[value];\n      });\n\n      deselectInfo.event = 'check';\n      deselectInfo.checked = false;\n      deselectInfo.checkedNodes = filteredEntityList.map(function (_ref4) {\n        var node = _ref4.node;\n        return node;\n      });\n      deselectInfo.checkedNodesPositions = filteredEntityList.map(function (_ref5) {\n        var node = _ref5.node,\n            pos = _ref5.pos;\n        return { node: node, pos: pos };\n      });\n\n      if (treeCheckStrictly) {\n        extraInfo.allCheckedNodes = deselectInfo.checkedNodes;\n      } else {\n        // TODO: It's too expansive to get `halfCheckedKeys` in onDeselect. Not pass this.\n        extraInfo.allCheckedNodes = flatToHierarchy(filteredEntityList).map(function (_ref6) {\n          var node = _ref6.node;\n          return node;\n        });\n      }\n    } else {\n      deselectInfo.event = 'select';\n      deselectInfo.selected = false;\n      deselectInfo.selectedNodes = newValueList.map(function (_ref7) {\n        var value = _ref7.value;\n        return (valueEntities[value] || {}).node;\n      });\n    }\n\n    // Some value user pass prop is not in the tree, we also need clean it\n    var newMissValueList = missValueList.filter(function (_ref8) {\n      var value = _ref8.value;\n      return value !== removeValue;\n    });\n\n    var wrappedValue = void 0;\n    if (_this2.isLabelInValue()) {\n      wrappedValue = {\n        label: triggerNode ? triggerNode.props[treeNodeLabelProp] : null,\n        value: removeValue\n      };\n    } else {\n      wrappedValue = removeValue;\n    }\n\n    _this2.onDeselect(wrappedValue, triggerNode, deselectInfo);\n\n    _this2.triggerChange(newMissValueList, newValueList, extraInfo);\n  };\n\n  this.onValueTrigger = function (isAdd, nodeList, nodeEventInfo, nodeExtraInfo) {\n    var node = nodeEventInfo.node;\n    var value = node.props.value;\n    var _state3 = _this2.state,\n        missValueList = _state3.missValueList,\n        valueEntities = _state3.valueEntities,\n        keyEntities = _state3.keyEntities;\n    var _props4 = _this2.props,\n        disabled = _props4.disabled,\n        inputValue = _props4.inputValue,\n        treeNodeLabelProp = _props4.treeNodeLabelProp,\n        onSelect = _props4.onSelect,\n        treeCheckable = _props4.treeCheckable,\n        treeCheckStrictly = _props4.treeCheckStrictly,\n        autoClearSearchValue = _props4.autoClearSearchValue;\n\n    var label = node.props[treeNodeLabelProp];\n\n    if (disabled) return;\n\n    // Wrap the return value for user\n    var wrappedValue = void 0;\n    if (_this2.isLabelInValue()) {\n      wrappedValue = {\n        value: value,\n        label: label\n      };\n    } else {\n      wrappedValue = value;\n    }\n\n    // [Legacy] Origin code not trigger `onDeselect` every time. Let's align the behaviour.\n    if (isAdd) {\n      if (onSelect) {\n        onSelect(wrappedValue, node, nodeEventInfo);\n      }\n    } else {\n      _this2.onDeselect(wrappedValue, node, nodeEventInfo);\n    }\n\n    // Get wrapped value list.\n    // This is a bit hack cause we use key to match the value.\n    var newValueList = nodeList.map(function (_ref9) {\n      var props = _ref9.props;\n      return {\n        value: props.value,\n        label: props[treeNodeLabelProp]\n      };\n    });\n\n    // When is `treeCheckable` and with `searchValue`, `valueList` is not full filled.\n    // We need calculate the missing nodes.\n    if (treeCheckable && !treeCheckStrictly) {\n      var keyList = newValueList.map(function (_ref10) {\n        var val = _ref10.value;\n        return valueEntities[val].key;\n      });\n      if (isAdd) {\n        keyList = conductCheck(keyList, true, keyEntities).checkedKeys;\n      } else {\n        keyList = conductCheck([valueEntities[value].key], false, keyEntities, { checkedKeys: keyList }).checkedKeys;\n      }\n      newValueList = keyList.map(function (key) {\n        var props = keyEntities[key].node.props;\n\n        return {\n          value: props.value,\n          label: props[treeNodeLabelProp]\n        };\n      });\n    }\n\n    // Clean up `searchValue` when this prop is set\n    if (!_this2.isSearchValueControlled() && (autoClearSearchValue || inputValue === null)) {\n      _this2.setUncontrolledState({\n        searchValue: '',\n        filteredTreeNodes: null\n      });\n    }\n\n    // [Legacy] Provide extra info\n    var extraInfo = _extends({}, nodeExtraInfo, {\n      triggerValue: value,\n      triggerNode: node\n    });\n\n    _this2.triggerChange(missValueList, newValueList, extraInfo);\n  };\n\n  this.onTreeNodeSelect = function (_, nodeEventInfo) {\n    var _state4 = _this2.state,\n        valueList = _state4.valueList,\n        valueEntities = _state4.valueEntities;\n    var _props5 = _this2.props,\n        treeCheckable = _props5.treeCheckable,\n        multiple = _props5.multiple;\n\n    if (treeCheckable) return;\n\n    if (!multiple) {\n      _this2.setOpenState(false);\n    }\n\n    var isAdd = nodeEventInfo.selected;\n    var selectedValue = nodeEventInfo.node.props.value;\n\n\n    var newValueList = void 0;\n\n    if (!multiple) {\n      newValueList = [{ value: selectedValue }];\n    } else {\n      newValueList = valueList.filter(function (_ref11) {\n        var value = _ref11.value;\n        return value !== selectedValue;\n      });\n      if (isAdd) {\n        newValueList.push({ value: selectedValue });\n      }\n    }\n\n    var selectedNodes = newValueList.map(function (_ref12) {\n      var value = _ref12.value;\n      return valueEntities[value];\n    }).filter(function (entity) {\n      return entity;\n    }).map(function (_ref13) {\n      var node = _ref13.node;\n      return node;\n    });\n\n    _this2.onValueTrigger(isAdd, selectedNodes, nodeEventInfo, { selected: isAdd });\n  };\n\n  this.onTreeNodeCheck = function (_, nodeEventInfo) {\n    var _state5 = _this2.state,\n        searchValue = _state5.searchValue,\n        keyEntities = _state5.keyEntities,\n        valueEntities = _state5.valueEntities,\n        valueList = _state5.valueList;\n    var treeCheckStrictly = _this2.props.treeCheckStrictly;\n    var checkedNodes = nodeEventInfo.checkedNodes,\n        checkedNodesPositions = nodeEventInfo.checkedNodesPositions;\n\n    var isAdd = nodeEventInfo.checked;\n\n    var extraInfo = {\n      checked: isAdd\n    };\n\n    var checkedNodeList = checkedNodes;\n\n    // [Legacy] Check event provide `allCheckedNodes`.\n    // When `treeCheckStrictly` or internal `searchValue` is set, TreeNode will be unrelated:\n    // - Related: Show the top checked nodes and has children prop.\n    // - Unrelated: Show all the checked nodes.\n\n    if (treeCheckStrictly) {\n      extraInfo.allCheckedNodes = nodeEventInfo.checkedNodes;\n    } else if (searchValue) {\n      var oriKeyList = valueList.map(function (_ref14) {\n        var value = _ref14.value;\n        return valueEntities[value];\n      }).filter(function (entity) {\n        return entity;\n      }).map(function (_ref15) {\n        var key = _ref15.key;\n        return key;\n      });\n\n      var keyList = void 0;\n      if (isAdd) {\n        keyList = Array.from(new Set([].concat(_toConsumableArray(oriKeyList), _toConsumableArray(checkedNodeList.map(function (_ref16) {\n          var value = _ref16.props.value;\n          return valueEntities[value].key;\n        })))));\n      } else {\n        keyList = conductCheck([nodeEventInfo.node.props.eventKey], false, keyEntities, { checkedKeys: oriKeyList }).checkedKeys;\n      }\n\n      checkedNodeList = keyList.map(function (key) {\n        return keyEntities[key].node;\n      });\n\n      // Let's follow as not `treeCheckStrictly` format\n      extraInfo.allCheckedNodes = keyList.map(function (key) {\n        return cleanEntity(keyEntities[key]);\n      });\n    } else {\n      extraInfo.allCheckedNodes = flatToHierarchy(checkedNodesPositions);\n    }\n\n    _this2.onValueTrigger(isAdd, checkedNodeList, nodeEventInfo, extraInfo);\n  };\n\n  this.onDropdownVisibleChange = function (open) {\n    _this2.setOpenState(open, true);\n  };\n\n  this.onSearchInputChange = function (_ref17) {\n    var value = _ref17.target.value;\n    var _state6 = _this2.state,\n        treeNodes = _state6.treeNodes,\n        valueEntities = _state6.valueEntities;\n    var _props6 = _this2.props,\n        onSearch = _props6.onSearch,\n        filterTreeNode = _props6.filterTreeNode,\n        treeNodeFilterProp = _props6.treeNodeFilterProp;\n\n\n    if (onSearch) {\n      onSearch(value);\n    }\n\n    var isSet = false;\n\n    if (!_this2.isSearchValueControlled()) {\n      isSet = _this2.setUncontrolledState({\n        searchValue: value\n      });\n      _this2.setOpenState(true);\n    }\n\n    if (isSet) {\n      // Do the search logic\n      var upperSearchValue = String(value).toUpperCase();\n\n      var filterTreeNodeFn = filterTreeNode;\n      if (!filterTreeNodeFn) {\n        filterTreeNodeFn = function filterTreeNodeFn(_, node) {\n          var nodeValue = String(node.props[treeNodeFilterProp]).toUpperCase();\n          return nodeValue.indexOf(upperSearchValue) !== -1;\n        };\n      }\n\n      _this2.setState({\n        filteredTreeNodes: getFilterTree(treeNodes, value, filterTreeNodeFn, valueEntities)\n      });\n    }\n  };\n\n  this.onSearchInputKeyDown = function (event) {\n    var _state7 = _this2.state,\n        searchValue = _state7.searchValue,\n        valueList = _state7.valueList;\n    var keyCode = event.keyCode;\n\n\n    if (KeyCode.BACKSPACE === keyCode && _this2.isMultiple() && !searchValue && valueList.length) {\n      var lastValue = valueList[valueList.length - 1].value;\n      _this2.onMultipleSelectorRemove(event, lastValue);\n    }\n  };\n\n  this.setUncontrolledState = function (state) {\n    var needSync = false;\n    var newState = {};\n\n    Object.keys(state).forEach(function (name) {\n      if (name in _this2.props) return;\n\n      needSync = true;\n      newState[name] = state[name];\n    });\n\n    if (needSync) {\n      _this2.setState(newState);\n    }\n\n    return needSync;\n  };\n\n  this.setOpenState = function (open) {\n    var byTrigger = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var onDropdownVisibleChange = _this2.props.onDropdownVisibleChange;\n\n\n    if (onDropdownVisibleChange && onDropdownVisibleChange(open, { documentClickClose: !open && byTrigger }) === false) {\n      return;\n    }\n\n    _this2.setUncontrolledState({ open: open });\n  };\n\n  this.isMultiple = function () {\n    var _props7 = _this2.props,\n        multiple = _props7.multiple,\n        treeCheckable = _props7.treeCheckable;\n\n    return !!(multiple || treeCheckable);\n  };\n\n  this.isLabelInValue = function () {\n    return isLabelInValue(_this2.props);\n  };\n\n  this.isSearchValueControlled = function () {\n    var inputValue = _this2.props.inputValue;\n\n    if ('searchValue' in _this2.props) return true;\n    return 'inputValue' in _this2.props && inputValue !== null;\n  };\n\n  this.forcePopupAlign = function () {\n    var $trigger = _this2.selectTriggerRef.current;\n\n    if ($trigger) {\n      $trigger.forcePopupAlign();\n    }\n  };\n\n  this.delayForcePopupAlign = function () {\n    // Wait 2 frame to avoid dom update & dom algin in the same time\n    // https://github.com/ant-design/ant-design/issues/12031\n    raf(function () {\n      raf(_this2.forcePopupAlign);\n    });\n  };\n\n  this.triggerChange = function (missValueList, valueList) {\n    var extraInfo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var valueEntities = _this2.state.valueEntities;\n    var _props8 = _this2.props,\n        onChange = _props8.onChange,\n        disabled = _props8.disabled;\n\n\n    if (disabled) return;\n\n    // Trigger\n    var extra = _extends({\n      // [Legacy] Always return as array contains label & value\n      preValue: _this2.state.selectorValueList.map(function (_ref18) {\n        var label = _ref18.label,\n            value = _ref18.value;\n        return { label: label, value: value };\n      })\n    }, extraInfo);\n\n    // Format value by `treeCheckStrictly`\n    var selectorValueList = formatSelectorValue(valueList, _this2.props, valueEntities);\n\n    if (!('value' in _this2.props)) {\n      _this2.setState({\n        missValueList: missValueList,\n        valueList: valueList,\n        selectorValueList: selectorValueList\n      });\n    }\n\n    // Only do the logic when `onChange` function provided\n    if (onChange) {\n      var connectValueList = void 0;\n\n      // Get value by mode\n      if (_this2.isMultiple()) {\n        connectValueList = [].concat(_toConsumableArray(missValueList), _toConsumableArray(selectorValueList));\n      } else {\n        connectValueList = selectorValueList.slice(0, 1);\n      }\n\n      var labelList = null;\n      var returnValue = void 0;\n\n      if (_this2.isLabelInValue()) {\n        returnValue = connectValueList.map(function (_ref19) {\n          var label = _ref19.label,\n              value = _ref19.value;\n          return { label: label, value: value };\n        });\n      } else {\n        labelList = [];\n        returnValue = connectValueList.map(function (_ref20) {\n          var label = _ref20.label,\n              value = _ref20.value;\n\n          labelList.push(label);\n          return value;\n        });\n      }\n\n      if (!_this2.isMultiple()) {\n        returnValue = returnValue[0];\n      }\n\n      onChange(returnValue, labelList, extra);\n    }\n  };\n};\n\nSelect.TreeNode = SelectNode;\nSelect.SHOW_ALL = SHOW_ALL;\nSelect.SHOW_PARENT = SHOW_PARENT;\nSelect.SHOW_CHILD = SHOW_CHILD;\n\n// Let warning show correct component name\nSelect.displayName = 'TreeSelect';\n\npolyfill(Select);\n\nexport default Select;","import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport { TreeNode } from 'rc-tree';\nimport { valueProp } from './propTypes';\n\n/**\n * SelectNode wrapped the tree node.\n * Let's use SelectNode instead of TreeNode\n * since TreeNode is so confuse here.\n */\nvar SelectNode = function SelectNode(props) {\n  return React.createElement(TreeNode, props);\n};\n\nSelectNode.propTypes = _extends({}, TreeNode.propTypes, {\n  value: valueProp\n});\n\n// Let Tree trade as TreeNode to reuse this for performance saving.\nSelectNode.isTreeNode = 1;\n\nexport default SelectNode;","import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Trigger from 'rc-trigger';\nimport classNames from 'classnames';\n\nimport { createRef } from './util';\n\nvar BUILT_IN_PLACEMENTS = {\n  bottomLeft: {\n    points: ['tl', 'bl'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    },\n    ignoreShake: true\n  },\n  topLeft: {\n    points: ['bl', 'tl'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 0,\n      adjustY: 1\n    },\n    ignoreShake: true\n  }\n};\n\nvar SelectTrigger = function (_React$Component) {\n  _inherits(SelectTrigger, _React$Component);\n\n  function SelectTrigger() {\n    _classCallCheck(this, SelectTrigger);\n\n    var _this = _possibleConstructorReturn(this, (SelectTrigger.__proto__ || Object.getPrototypeOf(SelectTrigger)).call(this));\n\n    _this.getDropdownTransitionName = function () {\n      var _this$props = _this.props,\n          transitionName = _this$props.transitionName,\n          animation = _this$props.animation,\n          dropdownPrefixCls = _this$props.dropdownPrefixCls;\n\n      if (!transitionName && animation) {\n        return dropdownPrefixCls + '-' + animation;\n      }\n      return transitionName;\n    };\n\n    _this.forcePopupAlign = function () {\n      var $trigger = _this.triggerRef.current;\n\n      if ($trigger) {\n        $trigger.forcePopupAlign();\n      }\n    };\n\n    _this.triggerRef = createRef();\n    return _this;\n  }\n\n  _createClass(SelectTrigger, [{\n    key: 'render',\n    value: function render() {\n      var _classNames;\n\n      var _props = this.props,\n          disabled = _props.disabled,\n          isMultiple = _props.isMultiple,\n          dropdownPopupAlign = _props.dropdownPopupAlign,\n          dropdownMatchSelectWidth = _props.dropdownMatchSelectWidth,\n          dropdownClassName = _props.dropdownClassName,\n          dropdownStyle = _props.dropdownStyle,\n          onDropdownVisibleChange = _props.onDropdownVisibleChange,\n          getPopupContainer = _props.getPopupContainer,\n          dropdownPrefixCls = _props.dropdownPrefixCls,\n          popupElement = _props.popupElement,\n          open = _props.open,\n          children = _props.children;\n\n      // TODO: [Legacy] Use new action when trigger fixed: https://github.com/react-component/trigger/pull/86\n\n      // When false do nothing with the width\n      // ref: https://github.com/ant-design/ant-design/issues/10927\n\n      var stretch = void 0;\n      if (dropdownMatchSelectWidth !== false) {\n        stretch = dropdownMatchSelectWidth ? 'width' : 'minWidth';\n      }\n\n      return React.createElement(\n        Trigger,\n        {\n          ref: this.triggerRef,\n          action: disabled ? [] : ['click'],\n          popupPlacement: 'bottomLeft',\n          builtinPlacements: BUILT_IN_PLACEMENTS,\n          popupAlign: dropdownPopupAlign,\n          prefixCls: dropdownPrefixCls,\n          popupTransitionName: this.getDropdownTransitionName(),\n          onPopupVisibleChange: onDropdownVisibleChange,\n          popup: popupElement,\n          popupVisible: open,\n          getPopupContainer: getPopupContainer,\n          stretch: stretch,\n          popupClassName: classNames(dropdownClassName, (_classNames = {}, _defineProperty(_classNames, dropdownPrefixCls + '--multiple', isMultiple), _defineProperty(_classNames, dropdownPrefixCls + '--single', !isMultiple), _classNames)),\n          popupStyle: dropdownStyle\n        },\n        children\n      );\n    }\n  }]);\n\n  return SelectTrigger;\n}(React.Component);\n\nSelectTrigger.propTypes = {\n  // Pass by outside user props\n  disabled: PropTypes.bool,\n  showSearch: PropTypes.bool,\n  prefixCls: PropTypes.string,\n  dropdownPopupAlign: PropTypes.object,\n  dropdownClassName: PropTypes.string,\n  dropdownStyle: PropTypes.object,\n  transitionName: PropTypes.string,\n  animation: PropTypes.string,\n  getPopupContainer: PropTypes.func,\n  children: PropTypes.node,\n\n  dropdownMatchSelectWidth: PropTypes.bool,\n\n  // Pass by Select\n  isMultiple: PropTypes.bool,\n  dropdownPrefixCls: PropTypes.string,\n  onDropdownVisibleChange: PropTypes.func,\n  popupElement: PropTypes.node,\n  open: PropTypes.bool\n};\n\n\npolyfill(SelectTrigger);\n\nexport default SelectTrigger;","import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { toTitle, UNSELECTABLE_ATTRIBUTE, UNSELECTABLE_STYLE } from '../../util';\n\nvar Selection = function (_React$Component) {\n  _inherits(Selection, _React$Component);\n\n  function Selection() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Selection);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Selection.__proto__ || Object.getPrototypeOf(Selection)).call.apply(_ref, [this].concat(args))), _this), _this.onRemove = function (event) {\n      var _this$props = _this.props,\n          onRemove = _this$props.onRemove,\n          value = _this$props.value;\n\n      onRemove(event, value);\n\n      event.stopPropagation();\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Selection, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          prefixCls = _props.prefixCls,\n          maxTagTextLength = _props.maxTagTextLength,\n          label = _props.label,\n          value = _props.value,\n          onRemove = _props.onRemove,\n          removeIcon = _props.removeIcon;\n\n\n      var content = label || value;\n      if (maxTagTextLength && typeof content === 'string' && content.length > maxTagTextLength) {\n        content = content.slice(0, maxTagTextLength) + '...';\n      }\n\n      return React.createElement(\n        'li',\n        _extends({\n          style: UNSELECTABLE_STYLE\n        }, UNSELECTABLE_ATTRIBUTE, {\n          role: 'menuitem',\n          className: prefixCls + '-selection__choice',\n          title: toTitle(label)\n        }),\n        onRemove && React.createElement(\n          'span',\n          {\n            className: prefixCls + '-selection__choice__remove',\n            onClick: this.onRemove\n          },\n          typeof removeIcon === 'function' ? React.createElement(removeIcon, _extends({}, this.props)) : removeIcon\n        ),\n        React.createElement(\n          'span',\n          { className: prefixCls + '-selection__choice__content' },\n          content\n        )\n      );\n    }\n  }]);\n\n  return Selection;\n}(React.Component);\n\nSelection.propTypes = {\n  prefixCls: PropTypes.string,\n  maxTagTextLength: PropTypes.number,\n  onRemove: PropTypes.func,\n\n  label: PropTypes.node,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  removeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\n\n\nexport default Selection;","import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Animate from 'rc-animate';\n\nimport generateSelector, { selectorPropTypes } from '../../Base/BaseSelector';\nimport SearchInput from '../../SearchInput';\nimport Selection from './Selection';\nimport { createRef } from '../../util';\n\nvar Selector = generateSelector('multiple');\n\nexport var multipleSelectorContextTypes = {\n  onMultipleSelectorRemove: PropTypes.func.isRequired\n};\n\nvar MultipleSelector = function (_React$Component) {\n  _inherits(MultipleSelector, _React$Component);\n\n  function MultipleSelector() {\n    _classCallCheck(this, MultipleSelector);\n\n    var _this = _possibleConstructorReturn(this, (MultipleSelector.__proto__ || Object.getPrototypeOf(MultipleSelector)).call(this));\n\n    _this.onPlaceholderClick = function () {\n      _this.inputRef.current.focus();\n    };\n\n    _this.focus = function () {\n      _this.inputRef.current.focus();\n    };\n\n    _this.blur = function () {\n      _this.inputRef.current.blur();\n    };\n\n    _this.renderPlaceholder = function () {\n      var _this$props = _this.props,\n          prefixCls = _this$props.prefixCls,\n          placeholder = _this$props.placeholder,\n          searchPlaceholder = _this$props.searchPlaceholder,\n          searchValue = _this$props.searchValue,\n          selectorValueList = _this$props.selectorValueList;\n\n\n      var currentPlaceholder = placeholder || searchPlaceholder;\n\n      if (!currentPlaceholder) return null;\n\n      var hidden = searchValue || selectorValueList.length;\n\n      // [Legacy] Not remove the placeholder\n      return React.createElement(\n        'span',\n        {\n          style: {\n            display: hidden ? 'none' : 'block'\n          },\n          onClick: _this.onPlaceholderClick,\n          className: prefixCls + '-search__field__placeholder'\n        },\n        currentPlaceholder\n      );\n    };\n\n    _this.renderSelection = function () {\n      var _this$props2 = _this.props,\n          selectorValueList = _this$props2.selectorValueList,\n          choiceTransitionName = _this$props2.choiceTransitionName,\n          prefixCls = _this$props2.prefixCls,\n          onChoiceAnimationLeave = _this$props2.onChoiceAnimationLeave,\n          labelInValue = _this$props2.labelInValue,\n          maxTagCount = _this$props2.maxTagCount,\n          maxTagPlaceholder = _this$props2.maxTagPlaceholder;\n      var onMultipleSelectorRemove = _this.context.rcTreeSelect.onMultipleSelectorRemove;\n\n      // Check if `maxTagCount` is set\n\n      var myValueList = selectorValueList;\n      if (maxTagCount >= 0) {\n        myValueList = selectorValueList.slice(0, maxTagCount);\n      }\n\n      // Selector node list\n      var selectedValueNodes = myValueList.map(function (_ref) {\n        var label = _ref.label,\n            value = _ref.value;\n        return React.createElement(Selection, _extends({}, _this.props, {\n          key: value,\n          label: label,\n          value: value,\n          onRemove: onMultipleSelectorRemove\n        }));\n      });\n\n      // Rest node count\n      if (maxTagCount >= 0 && maxTagCount < selectorValueList.length) {\n        var content = '+ ' + (selectorValueList.length - maxTagCount) + ' ...';\n        if (typeof maxTagPlaceholder === 'string') {\n          content = maxTagPlaceholder;\n        } else if (typeof maxTagPlaceholder === 'function') {\n          var restValueList = selectorValueList.slice(maxTagCount);\n          content = maxTagPlaceholder(labelInValue ? restValueList : restValueList.map(function (_ref2) {\n            var value = _ref2.value;\n            return value;\n          }));\n        }\n\n        var restNodeSelect = React.createElement(Selection, _extends({}, _this.props, {\n          key: 'rc-tree-select-internal-max-tag-counter',\n          label: content,\n          value: null\n        }));\n\n        selectedValueNodes.push(restNodeSelect);\n      }\n\n      selectedValueNodes.push(React.createElement(\n        'li',\n        {\n          className: prefixCls + '-search ' + prefixCls + '-search--inline',\n          key: '__input'\n        },\n        React.createElement(SearchInput, _extends({}, _this.props, { ref: _this.inputRef, needAlign: true }))\n      ));\n      var className = prefixCls + '-selection__rendered';\n      if (choiceTransitionName) {\n        return React.createElement(\n          Animate,\n          {\n            className: className,\n            component: 'ul',\n            transitionName: choiceTransitionName,\n            onLeave: onChoiceAnimationLeave\n          },\n          selectedValueNodes\n        );\n      }\n      return React.createElement(\n        'ul',\n        { className: className, role: 'menubar' },\n        selectedValueNodes\n      );\n    };\n\n    _this.inputRef = createRef();\n    return _this;\n  }\n\n  _createClass(MultipleSelector, [{\n    key: 'render',\n    value: function render() {\n      return React.createElement(Selector, _extends({}, this.props, {\n        tabIndex: -1,\n        showArrow: false,\n        renderSelection: this.renderSelection,\n        renderPlaceholder: this.renderPlaceholder\n      }));\n    }\n  }]);\n\n  return MultipleSelector;\n}(React.Component);\n\nMultipleSelector.propTypes = _extends({}, selectorPropTypes, {\n  selectorValueList: PropTypes.array,\n  disabled: PropTypes.bool,\n  searchValue: PropTypes.string,\n  labelInValue: PropTypes.bool,\n  maxTagCount: PropTypes.number,\n  maxTagPlaceholder: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n  onChoiceAnimationLeave: PropTypes.func\n});\nMultipleSelector.contextTypes = {\n  rcTreeSelect: PropTypes.shape(_extends({}, multipleSelectorContextTypes, {\n\n    onSearchInputChange: PropTypes.func\n  }))\n};\n\n\nexport default MultipleSelector;","import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport generateSelector, { selectorPropTypes } from '../Base/BaseSelector';\nimport { toTitle, createRef } from '../util';\n\nvar Selector = generateSelector('single');\n\nvar SingleSelector = function (_React$Component) {\n  _inherits(SingleSelector, _React$Component);\n\n  function SingleSelector() {\n    _classCallCheck(this, SingleSelector);\n\n    var _this = _possibleConstructorReturn(this, (SingleSelector.__proto__ || Object.getPrototypeOf(SingleSelector)).call(this));\n\n    _this.focus = function () {\n      _this.selectorRef.current.focus();\n    };\n\n    _this.blur = function () {\n      _this.selectorRef.current.blur();\n    };\n\n    _this.renderSelection = function () {\n      var _this$props = _this.props,\n          selectorValueList = _this$props.selectorValueList,\n          placeholder = _this$props.placeholder,\n          prefixCls = _this$props.prefixCls;\n\n\n      var innerNode = void 0;\n\n      if (selectorValueList.length) {\n        var _selectorValueList$ = selectorValueList[0],\n            label = _selectorValueList$.label,\n            value = _selectorValueList$.value;\n\n        innerNode = React.createElement(\n          'span',\n          {\n            key: 'value',\n            title: toTitle(label),\n            className: prefixCls + '-selection-selected-value'\n          },\n          label || value\n        );\n      } else {\n        innerNode = React.createElement(\n          'span',\n          {\n            key: 'placeholder',\n            className: prefixCls + '-selection__placeholder'\n          },\n          placeholder\n        );\n      }\n\n      return React.createElement(\n        'span',\n        { className: prefixCls + '-selection__rendered' },\n        innerNode\n      );\n    };\n\n    _this.selectorRef = createRef();\n    return _this;\n  }\n\n  _createClass(SingleSelector, [{\n    key: 'render',\n    value: function render() {\n      return React.createElement(Selector, _extends({}, this.props, {\n        ref: this.selectorRef,\n        renderSelection: this.renderSelection\n      }));\n    }\n  }]);\n\n  return SingleSelector;\n}(React.Component);\n\nSingleSelector.propTypes = _extends({}, selectorPropTypes);\n\n\nexport default SingleSelector;","import Select from './Select';\nimport SelectNode from './SelectNode';\n\nexport { SHOW_ALL, SHOW_CHILD, SHOW_PARENT } from './strategies';\nexport var TreeNode = SelectNode;\n\nexport default Select;","import PropTypes from 'prop-types';\nimport { isLabelInValue } from './util';\n\nvar internalValProp = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);\n\nexport function genArrProps(propType) {\n  return PropTypes.oneOfType([propType, PropTypes.arrayOf(propType)]);\n}\n\n/**\n * Origin code check `multiple` is true when `treeCheckStrictly` & `labelInValue`.\n * But in process logic is already cover to array.\n * Check array is not necessary. Let's simplify this check logic.\n */\nexport function valueProp() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var props = args[0],\n      propName = args[1],\n      Component = args[2];\n\n\n  if (isLabelInValue(props)) {\n    var _err = genArrProps(PropTypes.shape({\n      label: PropTypes.node,\n      value: internalValProp\n    })).apply(undefined, args);\n    if (_err) {\n      return new Error('Invalid prop `' + propName + '` supplied to `' + Component + '`. ' + 'You should use { label: string, value: string | number } or [{ label: string, value: string | number }] instead.');\n    }\n    return null;\n  }\n\n  var err = genArrProps(internalValProp).apply(undefined, args);\n  if (err) {\n    return new Error('Invalid prop `' + propName + '` supplied to `' + Component + '`. ' + 'You should use string or [string] instead.');\n  }\n  return null;\n}","export var SHOW_ALL = 'SHOW_ALL';\nexport var SHOW_PARENT = 'SHOW_PARENT';\nexport var SHOW_CHILD = 'SHOW_CHILD';","import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport warning from 'warning';\nimport { convertDataToTree as rcConvertDataToTree, convertTreeToEntities as rcConvertTreeToEntities, conductCheck as rcConductCheck } from 'rc-tree/es/util';\nimport toNodeArray from 'rc-util/es/Children/toArray';\nimport SelectNode from './SelectNode';\nimport { SHOW_CHILD, SHOW_PARENT } from './strategies';\n\nvar warnDeprecatedLabel = false;\n\n// =================== MISC ====================\nexport function toTitle(title) {\n  if (typeof title === 'string') {\n    return title;\n  }\n  return null;\n}\n\nexport function toArray(data) {\n  if (!data) return [];\n\n  return Array.isArray(data) ? data : [data];\n}\n\n// Shallow copy of React 16.3 createRef api\nexport function createRef() {\n  var func = function setRef(node) {\n    func.current = node;\n  };\n  return func;\n}\n\n// =============== Legacy ===============\nexport var UNSELECTABLE_STYLE = {\n  userSelect: 'none',\n  WebkitUserSelect: 'none'\n};\n\nexport var UNSELECTABLE_ATTRIBUTE = {\n  unselectable: 'unselectable'\n};\n\n/**\n * Convert position list to hierarchy structure.\n * This is little hack since use '-' to split the position.\n */\nexport function flatToHierarchy(positionList) {\n  if (!positionList.length) {\n    return [];\n  }\n\n  var entrances = {};\n\n  // Prepare the position map\n  var posMap = {};\n  var parsedList = positionList.slice().map(function (entity) {\n    var clone = _extends({}, entity, {\n      fields: entity.pos.split('-')\n    });\n    delete clone.children;\n    return clone;\n  });\n\n  parsedList.forEach(function (entity) {\n    posMap[entity.pos] = entity;\n  });\n\n  parsedList.sort(function (a, b) {\n    return a.fields.length - b.fields.length;\n  });\n\n  // Create the hierarchy\n  parsedList.forEach(function (entity) {\n    var parentPos = entity.fields.slice(0, -1).join('-');\n    var parentEntity = posMap[parentPos];\n\n    if (!parentEntity) {\n      entrances[entity.pos] = entity;\n    } else {\n      parentEntity.children = parentEntity.children || [];\n      parentEntity.children.push(entity);\n    }\n\n    // Some time position list provide `key`, we don't need it\n    delete entity.key;\n    delete entity.fields;\n  });\n\n  return Object.keys(entrances).map(function (key) {\n    return entrances[key];\n  });\n}\n\n// =============== Accessibility ===============\nvar ariaId = 0;\n\nexport function resetAriaId() {\n  ariaId = 0;\n}\n\nexport function generateAriaId(prefix) {\n  ariaId += 1;\n  return prefix + '_' + ariaId;\n}\n\nexport function isLabelInValue(props) {\n  var treeCheckable = props.treeCheckable,\n      treeCheckStrictly = props.treeCheckStrictly,\n      labelInValue = props.labelInValue;\n\n  if (treeCheckable && treeCheckStrictly) {\n    return true;\n  }\n  return labelInValue || false;\n}\n\n// =================== Tree ====================\nexport function parseSimpleTreeData(treeData, _ref) {\n  var id = _ref.id,\n      pId = _ref.pId,\n      rootPId = _ref.rootPId;\n\n  var keyNodes = {};\n  var rootNodeList = [];\n\n  // Fill in the map\n  var nodeList = treeData.map(function (node) {\n    var clone = _extends({}, node);\n    var key = clone[id];\n    keyNodes[key] = clone;\n    clone.key = clone.key || key;\n    return clone;\n  });\n\n  // Connect tree\n  nodeList.forEach(function (node) {\n    var parentKey = node[pId];\n    var parent = keyNodes[parentKey];\n\n    // Fill parent\n    if (parent) {\n      parent.children = parent.children || [];\n      parent.children.push(node);\n    }\n\n    // Fill root tree node\n    if (parentKey === rootPId || !parent && rootPId === null) {\n      rootNodeList.push(node);\n    }\n  });\n\n  return rootNodeList;\n}\n\n/**\n * Detect if position has relation.\n * e.g. 1-2 related with 1-2-3\n * e.g. 1-3-2 related with 1\n * e.g. 1-2 not related with 1-21\n */\nexport function isPosRelated(pos1, pos2) {\n  var fields1 = pos1.split('-');\n  var fields2 = pos2.split('-');\n\n  var minLen = Math.min(fields1.length, fields2.length);\n  for (var i = 0; i < minLen; i += 1) {\n    if (fields1[i] !== fields2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * This function is only used on treeNode check (none treeCheckStrictly but has searchInput).\n * We convert entity to { node, pos, children } format.\n * This is legacy bug but we still need to do with it.\n * @param entity\n */\nexport function cleanEntity(_ref2) {\n  var node = _ref2.node,\n      pos = _ref2.pos,\n      children = _ref2.children;\n\n  var instance = {\n    node: node,\n    pos: pos\n  };\n\n  if (children) {\n    instance.children = children.map(cleanEntity);\n  }\n\n  return instance;\n}\n\n/**\n * Get a filtered TreeNode list by provided treeNodes.\n * [Legacy] Since `Tree` use `key` as map but `key` will changed by React,\n * we have to convert `treeNodes > data > treeNodes` to keep the key.\n * Such performance hungry!\n */\nexport function getFilterTree(treeNodes, searchValue, filterFunc, valueEntities) {\n  if (!searchValue) {\n    return null;\n  }\n\n  function mapFilteredNodeToData(node) {\n    if (!node) return null;\n\n    var match = false;\n    if (filterFunc(searchValue, node)) {\n      match = true;\n    }\n\n    var children = toNodeArray(node.props.children).map(mapFilteredNodeToData).filter(function (n) {\n      return n;\n    });\n\n    if (children.length || match) {\n      return React.createElement(\n        SelectNode,\n        _extends({}, node.props, {\n          key: valueEntities[node.props.value].key\n        }),\n        children\n      );\n    }\n\n    return null;\n  }\n\n  return treeNodes.map(mapFilteredNodeToData).filter(function (node) {\n    return node;\n  });\n}\n\n// =================== Value ===================\n/**\n * Convert value to array format to make logic simplify.\n */\nexport function formatInternalValue(value, props) {\n  var valueList = toArray(value);\n\n  // Parse label in value\n  if (isLabelInValue(props)) {\n    return valueList.map(function (val) {\n      if (typeof val !== 'object' || !val) {\n        return {\n          value: '',\n          label: ''\n        };\n      }\n\n      return val;\n    });\n  }\n\n  return valueList.map(function (val) {\n    return {\n      value: val\n    };\n  });\n}\n\nexport function getLabel(wrappedValue, entity, treeNodeLabelProp) {\n  if (wrappedValue.label) {\n    return wrappedValue.label;\n  }\n\n  if (entity && entity.node.props) {\n    return entity.node.props[treeNodeLabelProp];\n  }\n\n  // Since value without entity will be in missValueList.\n  // This code will never reached, but we still need this in case.\n  return wrappedValue.value;\n}\n\n/**\n * Convert internal state `valueList` to user needed value list.\n * This will return an array list. You need check if is not multiple when return.\n *\n * `allCheckedNodes` is used for `treeCheckStrictly`\n */\nexport function formatSelectorValue(valueList, props, valueEntities) {\n  var treeNodeLabelProp = props.treeNodeLabelProp,\n      treeCheckable = props.treeCheckable,\n      treeCheckStrictly = props.treeCheckStrictly,\n      showCheckedStrategy = props.showCheckedStrategy;\n\n  // Will hide some value if `showCheckedStrategy` is set\n\n  if (treeCheckable && !treeCheckStrictly) {\n    var values = {};\n    valueList.forEach(function (wrappedValue) {\n      values[wrappedValue.value] = wrappedValue;\n    });\n    var hierarchyList = flatToHierarchy(valueList.map(function (_ref3) {\n      var value = _ref3.value;\n      return valueEntities[value];\n    }));\n\n    if (showCheckedStrategy === SHOW_PARENT) {\n      // Only get the parent checked value\n      return hierarchyList.map(function (_ref4) {\n        var value = _ref4.node.props.value;\n        return {\n          label: getLabel(values[value], valueEntities[value], treeNodeLabelProp),\n          value: value\n        };\n      });\n    } else if (showCheckedStrategy === SHOW_CHILD) {\n      // Only get the children checked value\n      var targetValueList = [];\n\n      // Find the leaf children\n      var traverse = function traverse(_ref5) {\n        var value = _ref5.node.props.value,\n            children = _ref5.children;\n\n        if (!children || children.length === 0) {\n          targetValueList.push({\n            label: getLabel(values[value], valueEntities[value], treeNodeLabelProp),\n            value: value\n          });\n          return;\n        }\n\n        children.forEach(function (entity) {\n          traverse(entity);\n        });\n      };\n\n      hierarchyList.forEach(function (entity) {\n        traverse(entity);\n      });\n\n      return targetValueList;\n    }\n  }\n\n  return valueList.map(function (wrappedValue) {\n    return {\n      label: getLabel(wrappedValue, valueEntities[wrappedValue.value], treeNodeLabelProp),\n      value: wrappedValue.value\n    };\n  });\n}\n\n/**\n * Use `rc-tree` convertDataToTree to convert treeData to TreeNodes.\n * This will change the label to title value\n */\nfunction processProps(props) {\n  var title = props.title,\n      label = props.label,\n      key = props.key,\n      value = props.value;\n\n  var cloneProps = _extends({}, props);\n\n  // Warning user not to use deprecated label prop.\n  if (label && !title) {\n    if (!warnDeprecatedLabel) {\n      warning(false, '\\'label\\' in treeData is deprecated. Please use \\'title\\' instead.');\n      warnDeprecatedLabel = true;\n    }\n\n    cloneProps.title = label;\n  }\n\n  if (!key) {\n    cloneProps.key = value;\n  }\n\n  return cloneProps;\n}\n\nexport function convertDataToTree(treeData) {\n  return rcConvertDataToTree(treeData, { processProps: processProps });\n}\n\n/**\n * Use `rc-tree` convertTreeToEntities for entities calculation.\n * We have additional entities of `valueEntities`\n */\nfunction initWrapper(wrapper) {\n  return _extends({}, wrapper, {\n    valueEntities: {}\n  });\n}\n\nfunction processEntity(entity, wrapper) {\n  var value = entity.node.props.value;\n  entity.value = value;\n  wrapper.valueEntities[value] = entity;\n}\n\nexport function convertTreeToEntities(treeNodes) {\n  return rcConvertTreeToEntities(treeNodes, {\n    initWrapper: initWrapper,\n    processEntity: processEntity\n  });\n}\n\nexport var conductCheck = rcConductCheck;","import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar LazyRenderBox = function (_Component) {\n  _inherits(LazyRenderBox, _Component);\n\n  function LazyRenderBox() {\n    _classCallCheck(this, LazyRenderBox);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  LazyRenderBox.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    return nextProps.hiddenClassName || nextProps.visible;\n  };\n\n  LazyRenderBox.prototype.render = function render() {\n    var _props = this.props,\n        hiddenClassName = _props.hiddenClassName,\n        visible = _props.visible,\n        props = _objectWithoutProperties(_props, ['hiddenClassName', 'visible']);\n\n    if (hiddenClassName || React.Children.count(props.children) > 1) {\n      if (!visible && hiddenClassName) {\n        props.className += ' ' + hiddenClassName;\n      }\n      return React.createElement('div', props);\n    }\n\n    return React.Children.only(props.children);\n  };\n\n  return LazyRenderBox;\n}(Component);\n\nLazyRenderBox.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  visible: PropTypes.bool,\n  hiddenClassName: PropTypes.string\n};\n\n\nexport default LazyRenderBox;","import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport Align from 'rc-align';\nimport Animate from 'rc-animate';\nimport raf from 'raf';\nimport PopupInner from './PopupInner';\nimport LazyRenderBox from './LazyRenderBox';\nimport { saveRef } from './utils';\n\nvar Popup = function (_Component) {\n  _inherits(Popup, _Component);\n\n  function Popup(props) {\n    _classCallCheck(this, Popup);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    _this.state = {\n      // Used for stretch\n      stretchChecked: false,\n      targetWidth: undefined,\n      targetHeight: undefined\n    };\n\n    _this.savePopupRef = saveRef.bind(_this, 'popupInstance');\n    _this.saveAlignRef = saveRef.bind(_this, 'alignInstance');\n    return _this;\n  }\n\n  Popup.prototype.componentDidMount = function componentDidMount() {\n    this.rootNode = this.getPopupDomNode();\n    this.setStretchSize();\n  };\n\n  Popup.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.setStretchSize();\n  };\n\n  // Record size if stretch needed\n\n\n  Popup.prototype.getPopupDomNode = function getPopupDomNode() {\n    return ReactDOM.findDOMNode(this.popupInstance);\n  };\n\n  // `target` on `rc-align` can accept as a function to get the bind element or a point.\n  // ref: https://www.npmjs.com/package/rc-align\n\n\n  Popup.prototype.getMaskTransitionName = function getMaskTransitionName() {\n    var props = this.props;\n    var transitionName = props.maskTransitionName;\n    var animation = props.maskAnimation;\n    if (!transitionName && animation) {\n      transitionName = props.prefixCls + '-' + animation;\n    }\n    return transitionName;\n  };\n\n  Popup.prototype.getTransitionName = function getTransitionName() {\n    var props = this.props;\n    var transitionName = props.transitionName;\n    if (!transitionName && props.animation) {\n      transitionName = props.prefixCls + '-' + props.animation;\n    }\n    return transitionName;\n  };\n\n  Popup.prototype.getClassName = function getClassName(currentAlignClassName) {\n    return this.props.prefixCls + ' ' + this.props.className + ' ' + currentAlignClassName;\n  };\n\n  Popup.prototype.getPopupElement = function getPopupElement() {\n    var _this2 = this;\n\n    var savePopupRef = this.savePopupRef;\n    var _state = this.state,\n        stretchChecked = _state.stretchChecked,\n        targetHeight = _state.targetHeight,\n        targetWidth = _state.targetWidth;\n    var _props = this.props,\n        align = _props.align,\n        visible = _props.visible,\n        prefixCls = _props.prefixCls,\n        style = _props.style,\n        getClassNameFromAlign = _props.getClassNameFromAlign,\n        destroyPopupOnHide = _props.destroyPopupOnHide,\n        stretch = _props.stretch,\n        children = _props.children,\n        onMouseEnter = _props.onMouseEnter,\n        onMouseLeave = _props.onMouseLeave;\n\n    var className = this.getClassName(this.currentAlignClassName || getClassNameFromAlign(align));\n    var hiddenClassName = prefixCls + '-hidden';\n\n    if (!visible) {\n      this.currentAlignClassName = null;\n    }\n\n    var sizeStyle = {};\n    if (stretch) {\n      // Stretch with target\n      if (stretch.indexOf('height') !== -1) {\n        sizeStyle.height = targetHeight;\n      } else if (stretch.indexOf('minHeight') !== -1) {\n        sizeStyle.minHeight = targetHeight;\n      }\n      if (stretch.indexOf('width') !== -1) {\n        sizeStyle.width = targetWidth;\n      } else if (stretch.indexOf('minWidth') !== -1) {\n        sizeStyle.minWidth = targetWidth;\n      }\n\n      // Delay force align to makes ui smooth\n      if (!stretchChecked) {\n        sizeStyle.visibility = 'hidden';\n        raf(function () {\n          if (_this2.alignInstance) {\n            _this2.alignInstance.forceAlign();\n          }\n        });\n      }\n    }\n\n    var newStyle = _extends({}, sizeStyle, style, this.getZIndexStyle());\n\n    var popupInnerProps = {\n      className: className,\n      prefixCls: prefixCls,\n      ref: savePopupRef,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      style: newStyle\n    };\n\n    if (destroyPopupOnHide) {\n      return React.createElement(\n        Animate,\n        {\n          component: '',\n          exclusive: true,\n          transitionAppear: true,\n          transitionName: this.getTransitionName(),\n          onLeave: this.onAnimateLeaved\n        },\n        visible ? React.createElement(\n          Align,\n          {\n            target: this.getAlignTarget(),\n            key: 'popup',\n            ref: this.saveAlignRef,\n            monitorWindowResize: true,\n            align: align,\n            onAlign: this.onAlign\n          },\n          React.createElement(\n            PopupInner,\n            _extends({\n              visible: true\n            }, popupInnerProps),\n            children\n          )\n        ) : null\n      );\n    }\n\n    return React.createElement(\n      Animate,\n      {\n        component: '',\n        exclusive: true,\n        transitionAppear: true,\n        transitionName: this.getTransitionName(),\n        showProp: 'xVisible',\n        onLeave: this.onAnimateLeaved\n      },\n      React.createElement(\n        Align,\n        {\n          target: this.getAlignTarget(),\n          key: 'popup',\n          ref: this.saveAlignRef,\n          monitorWindowResize: true,\n          xVisible: visible,\n          childrenProps: { visible: 'xVisible' },\n          disabled: !visible,\n          align: align,\n          onAlign: this.onAlign\n        },\n        React.createElement(\n          PopupInner,\n          _extends({\n            hiddenClassName: hiddenClassName\n          }, popupInnerProps),\n          children\n        )\n      )\n    );\n  };\n\n  Popup.prototype.getZIndexStyle = function getZIndexStyle() {\n    var style = {};\n    var props = this.props;\n    if (props.zIndex !== undefined) {\n      style.zIndex = props.zIndex;\n    }\n    return style;\n  };\n\n  Popup.prototype.getMaskElement = function getMaskElement() {\n    var props = this.props;\n    var maskElement = void 0;\n    if (props.mask) {\n      var maskTransition = this.getMaskTransitionName();\n      maskElement = React.createElement(LazyRenderBox, {\n        style: this.getZIndexStyle(),\n        key: 'mask',\n        className: props.prefixCls + '-mask',\n        hiddenClassName: props.prefixCls + '-mask-hidden',\n        visible: props.visible\n      });\n      if (maskTransition) {\n        maskElement = React.createElement(\n          Animate,\n          {\n            key: 'mask',\n            showProp: 'visible',\n            transitionAppear: true,\n            component: '',\n            transitionName: maskTransition\n          },\n          maskElement\n        );\n      }\n    }\n    return maskElement;\n  };\n\n  Popup.prototype.render = function render() {\n    return React.createElement(\n      'div',\n      null,\n      this.getMaskElement(),\n      this.getPopupElement()\n    );\n  };\n\n  return Popup;\n}(Component);\n\nPopup.propTypes = {\n  visible: PropTypes.bool,\n  style: PropTypes.object,\n  getClassNameFromAlign: PropTypes.func,\n  onAlign: PropTypes.func,\n  getRootDomNode: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  align: PropTypes.any,\n  destroyPopupOnHide: PropTypes.bool,\n  className: PropTypes.string,\n  prefixCls: PropTypes.string,\n  onMouseLeave: PropTypes.func,\n  stretch: PropTypes.string,\n  children: PropTypes.node,\n  point: PropTypes.shape({\n    pageX: PropTypes.number,\n    pageY: PropTypes.number\n  })\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.onAlign = function (popupDomNode, align) {\n    var props = _this3.props;\n    var currentAlignClassName = props.getClassNameFromAlign(align);\n    // FIX: https://github.com/react-component/trigger/issues/56\n    // FIX: https://github.com/react-component/tooltip/issues/79\n    if (_this3.currentAlignClassName !== currentAlignClassName) {\n      _this3.currentAlignClassName = currentAlignClassName;\n      popupDomNode.className = _this3.getClassName(currentAlignClassName);\n    }\n    props.onAlign(popupDomNode, align);\n  };\n\n  this.onAnimateLeaved = function () {\n    var stretch = _this3.props.stretch;\n    var stretchChecked = _this3.state.stretchChecked;\n\n    if (stretch && stretchChecked) {\n      _this3.setState({ stretchChecked: false });\n    }\n  };\n\n  this.setStretchSize = function () {\n    var getRootDomNode = _this3.props.getRootDomNode;\n    var _state2 = _this3.state,\n        stretchChecked = _state2.stretchChecked,\n        targetHeight = _state2.targetHeight,\n        targetWidth = _state2.targetWidth;\n\n\n    var $ele = getRootDomNode();\n    if (!$ele) return;\n\n    var height = $ele.offsetHeight;\n    var width = $ele.offsetWidth;\n\n    if (targetHeight !== height || targetWidth !== width || !stretchChecked) {\n      _this3.setState({\n        stretchChecked: true,\n        targetHeight: height,\n        targetWidth: width\n      });\n    }\n  };\n\n  this.getTargetElement = function () {\n    return _this3.props.getRootDomNode();\n  };\n\n  this.getAlignTarget = function () {\n    var point = _this3.props.point;\n\n    if (point) {\n      return point;\n    }\n    return _this3.getTargetElement;\n  };\n};\n\nexport default Popup;","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LazyRenderBox from './LazyRenderBox';\n\nvar PopupInner = function (_Component) {\n  _inherits(PopupInner, _Component);\n\n  function PopupInner() {\n    _classCallCheck(this, PopupInner);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  PopupInner.prototype.render = function render() {\n    var props = this.props;\n    var className = props.className;\n    if (!props.visible) {\n      className += ' ' + props.hiddenClassName;\n    }\n    return React.createElement(\n      'div',\n      {\n        className: className,\n        onMouseEnter: props.onMouseEnter,\n        onMouseLeave: props.onMouseLeave,\n        style: props.style\n      },\n      React.createElement(\n        LazyRenderBox,\n        { className: props.prefixCls + '-content', visible: props.visible },\n        props.children\n      )\n    );\n  };\n\n  return PopupInner;\n}(Component);\n\nPopupInner.propTypes = {\n  hiddenClassName: PropTypes.string,\n  className: PropTypes.string,\n  prefixCls: PropTypes.string,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  children: PropTypes.any\n};\n\n\nexport default PopupInner;","import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode, createPortal } from 'react-dom';\nimport contains from 'rc-util/es/Dom/contains';\nimport addEventListener from 'rc-util/es/Dom/addEventListener';\nimport Popup from './Popup';\nimport { getAlignFromPlacement, getAlignPopupClassName } from './utils';\nimport ContainerRender from 'rc-util/es/ContainerRender';\nimport Portal from 'rc-util/es/Portal';\nimport classNames from 'classnames';\n\nfunction noop() {}\n\nfunction returnEmptyString() {\n  return '';\n}\n\nfunction returnDocument() {\n  return window.document;\n}\n\nvar ALL_HANDLERS = ['onClick', 'onMouseDown', 'onTouchStart', 'onMouseEnter', 'onMouseLeave', 'onFocus', 'onBlur', 'onContextMenu'];\n\nvar IS_REACT_16 = !!createPortal;\n\nvar Trigger = function (_React$Component) {\n  _inherits(Trigger, _React$Component);\n\n  function Trigger(props) {\n    _classCallCheck(this, Trigger);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var popupVisible = void 0;\n    if ('popupVisible' in props) {\n      popupVisible = !!props.popupVisible;\n    } else {\n      popupVisible = !!props.defaultPopupVisible;\n    }\n\n    _this.prevPopupVisible = popupVisible;\n\n    _this.state = {\n      popupVisible: popupVisible\n    };\n    return _this;\n  }\n\n  Trigger.prototype.componentWillMount = function componentWillMount() {\n    var _this2 = this;\n\n    ALL_HANDLERS.forEach(function (h) {\n      _this2['fire' + h] = function (e) {\n        _this2.fireEvents(h, e);\n      };\n    });\n  };\n\n  Trigger.prototype.componentDidMount = function componentDidMount() {\n    this.componentDidUpdate({}, {\n      popupVisible: this.state.popupVisible\n    });\n  };\n\n  Trigger.prototype.componentWillReceiveProps = function componentWillReceiveProps(_ref) {\n    var popupVisible = _ref.popupVisible;\n\n    if (popupVisible !== undefined) {\n      this.setState({\n        popupVisible: popupVisible\n      });\n    }\n  };\n\n  Trigger.prototype.componentDidUpdate = function componentDidUpdate(_, prevState) {\n    var props = this.props;\n    var state = this.state;\n    var triggerAfterPopupVisibleChange = function triggerAfterPopupVisibleChange() {\n      if (prevState.popupVisible !== state.popupVisible) {\n        props.afterPopupVisibleChange(state.popupVisible);\n      }\n    };\n    if (!IS_REACT_16) {\n      this.renderComponent(null, triggerAfterPopupVisibleChange);\n    }\n\n    this.prevPopupVisible = prevState.popupVisible;\n\n    // We must listen to `mousedown` or `touchstart`, edge case:\n    // https://github.com/ant-design/ant-design/issues/5804\n    // https://github.com/react-component/calendar/issues/250\n    // https://github.com/react-component/trigger/issues/50\n    if (state.popupVisible) {\n      var currentDocument = void 0;\n      if (!this.clickOutsideHandler && (this.isClickToHide() || this.isContextMenuToShow())) {\n        currentDocument = props.getDocument();\n        this.clickOutsideHandler = addEventListener(currentDocument, 'mousedown', this.onDocumentClick);\n      }\n      // always hide on mobile\n      if (!this.touchOutsideHandler) {\n        currentDocument = currentDocument || props.getDocument();\n        this.touchOutsideHandler = addEventListener(currentDocument, 'touchstart', this.onDocumentClick);\n      }\n      // close popup when trigger type contains 'onContextMenu' and document is scrolling.\n      if (!this.contextMenuOutsideHandler1 && this.isContextMenuToShow()) {\n        currentDocument = currentDocument || props.getDocument();\n        this.contextMenuOutsideHandler1 = addEventListener(currentDocument, 'scroll', this.onContextMenuClose);\n      }\n      // close popup when trigger type contains 'onContextMenu' and window is blur.\n      if (!this.contextMenuOutsideHandler2 && this.isContextMenuToShow()) {\n        this.contextMenuOutsideHandler2 = addEventListener(window, 'blur', this.onContextMenuClose);\n      }\n      return;\n    }\n\n    this.clearOutsideHandler();\n  };\n\n  Trigger.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.clearDelayTimer();\n    this.clearOutsideHandler();\n  };\n\n  Trigger.prototype.getPopupDomNode = function getPopupDomNode() {\n    // for test\n    if (this._component && this._component.getPopupDomNode) {\n      return this._component.getPopupDomNode();\n    }\n    return null;\n  };\n\n  Trigger.prototype.getPopupAlign = function getPopupAlign() {\n    var props = this.props;\n    var popupPlacement = props.popupPlacement,\n        popupAlign = props.popupAlign,\n        builtinPlacements = props.builtinPlacements;\n\n    if (popupPlacement && builtinPlacements) {\n      return getAlignFromPlacement(builtinPlacements, popupPlacement, popupAlign);\n    }\n    return popupAlign;\n  };\n\n  /**\n   * @param popupVisible    Show or not the popup element\n   * @param event           SyntheticEvent, used for `pointAlign`\n   */\n  Trigger.prototype.setPopupVisible = function setPopupVisible(popupVisible, event) {\n    var alignPoint = this.props.alignPoint;\n\n\n    this.clearDelayTimer();\n\n    if (this.state.popupVisible !== popupVisible) {\n      if (!('popupVisible' in this.props)) {\n        this.setState({ popupVisible: popupVisible });\n      }\n      this.props.onPopupVisibleChange(popupVisible);\n    }\n\n    // Always record the point position since mouseEnterDelay will delay the show\n    if (alignPoint && event) {\n      this.setPoint(event);\n    }\n  };\n\n  Trigger.prototype.delaySetPopupVisible = function delaySetPopupVisible(visible, delayS, event) {\n    var _this3 = this;\n\n    var delay = delayS * 1000;\n    this.clearDelayTimer();\n    if (delay) {\n      var point = event ? { pageX: event.pageX, pageY: event.pageY } : null;\n      this.delayTimer = setTimeout(function () {\n        _this3.setPopupVisible(visible, point);\n        _this3.clearDelayTimer();\n      }, delay);\n    } else {\n      this.setPopupVisible(visible, event);\n    }\n  };\n\n  Trigger.prototype.clearDelayTimer = function clearDelayTimer() {\n    if (this.delayTimer) {\n      clearTimeout(this.delayTimer);\n      this.delayTimer = null;\n    }\n  };\n\n  Trigger.prototype.clearOutsideHandler = function clearOutsideHandler() {\n    if (this.clickOutsideHandler) {\n      this.clickOutsideHandler.remove();\n      this.clickOutsideHandler = null;\n    }\n\n    if (this.contextMenuOutsideHandler1) {\n      this.contextMenuOutsideHandler1.remove();\n      this.contextMenuOutsideHandler1 = null;\n    }\n\n    if (this.contextMenuOutsideHandler2) {\n      this.contextMenuOutsideHandler2.remove();\n      this.contextMenuOutsideHandler2 = null;\n    }\n\n    if (this.touchOutsideHandler) {\n      this.touchOutsideHandler.remove();\n      this.touchOutsideHandler = null;\n    }\n  };\n\n  Trigger.prototype.createTwoChains = function createTwoChains(event) {\n    var childPros = this.props.children.props;\n    var props = this.props;\n    if (childPros[event] && props[event]) {\n      return this['fire' + event];\n    }\n    return childPros[event] || props[event];\n  };\n\n  Trigger.prototype.isClickToShow = function isClickToShow() {\n    var _props = this.props,\n        action = _props.action,\n        showAction = _props.showAction;\n\n    return action.indexOf('click') !== -1 || showAction.indexOf('click') !== -1;\n  };\n\n  Trigger.prototype.isContextMenuToShow = function isContextMenuToShow() {\n    var _props2 = this.props,\n        action = _props2.action,\n        showAction = _props2.showAction;\n\n    return action.indexOf('contextMenu') !== -1 || showAction.indexOf('contextMenu') !== -1;\n  };\n\n  Trigger.prototype.isClickToHide = function isClickToHide() {\n    var _props3 = this.props,\n        action = _props3.action,\n        hideAction = _props3.hideAction;\n\n    return action.indexOf('click') !== -1 || hideAction.indexOf('click') !== -1;\n  };\n\n  Trigger.prototype.isMouseEnterToShow = function isMouseEnterToShow() {\n    var _props4 = this.props,\n        action = _props4.action,\n        showAction = _props4.showAction;\n\n    return action.indexOf('hover') !== -1 || showAction.indexOf('mouseEnter') !== -1;\n  };\n\n  Trigger.prototype.isMouseLeaveToHide = function isMouseLeaveToHide() {\n    var _props5 = this.props,\n        action = _props5.action,\n        hideAction = _props5.hideAction;\n\n    return action.indexOf('hover') !== -1 || hideAction.indexOf('mouseLeave') !== -1;\n  };\n\n  Trigger.prototype.isFocusToShow = function isFocusToShow() {\n    var _props6 = this.props,\n        action = _props6.action,\n        showAction = _props6.showAction;\n\n    return action.indexOf('focus') !== -1 || showAction.indexOf('focus') !== -1;\n  };\n\n  Trigger.prototype.isBlurToHide = function isBlurToHide() {\n    var _props7 = this.props,\n        action = _props7.action,\n        hideAction = _props7.hideAction;\n\n    return action.indexOf('focus') !== -1 || hideAction.indexOf('blur') !== -1;\n  };\n\n  Trigger.prototype.forcePopupAlign = function forcePopupAlign() {\n    if (this.state.popupVisible && this._component && this._component.alignInstance) {\n      this._component.alignInstance.forceAlign();\n    }\n  };\n\n  Trigger.prototype.fireEvents = function fireEvents(type, e) {\n    var childCallback = this.props.children.props[type];\n    if (childCallback) {\n      childCallback(e);\n    }\n    var callback = this.props[type];\n    if (callback) {\n      callback(e);\n    }\n  };\n\n  Trigger.prototype.close = function close() {\n    this.setPopupVisible(false);\n  };\n\n  Trigger.prototype.render = function render() {\n    var _this4 = this;\n\n    var popupVisible = this.state.popupVisible;\n    var _props8 = this.props,\n        children = _props8.children,\n        forceRender = _props8.forceRender,\n        alignPoint = _props8.alignPoint,\n        className = _props8.className;\n\n    var child = React.Children.only(children);\n    var newChildProps = { key: 'trigger' };\n\n    if (this.isContextMenuToShow()) {\n      newChildProps.onContextMenu = this.onContextMenu;\n    } else {\n      newChildProps.onContextMenu = this.createTwoChains('onContextMenu');\n    }\n\n    if (this.isClickToHide() || this.isClickToShow()) {\n      newChildProps.onClick = this.onClick;\n      newChildProps.onMouseDown = this.onMouseDown;\n      newChildProps.onTouchStart = this.onTouchStart;\n    } else {\n      newChildProps.onClick = this.createTwoChains('onClick');\n      newChildProps.onMouseDown = this.createTwoChains('onMouseDown');\n      newChildProps.onTouchStart = this.createTwoChains('onTouchStart');\n    }\n    if (this.isMouseEnterToShow()) {\n      newChildProps.onMouseEnter = this.onMouseEnter;\n      if (alignPoint) {\n        newChildProps.onMouseMove = this.onMouseMove;\n      }\n    } else {\n      newChildProps.onMouseEnter = this.createTwoChains('onMouseEnter');\n    }\n    if (this.isMouseLeaveToHide()) {\n      newChildProps.onMouseLeave = this.onMouseLeave;\n    } else {\n      newChildProps.onMouseLeave = this.createTwoChains('onMouseLeave');\n    }\n    if (this.isFocusToShow() || this.isBlurToHide()) {\n      newChildProps.onFocus = this.onFocus;\n      newChildProps.onBlur = this.onBlur;\n    } else {\n      newChildProps.onFocus = this.createTwoChains('onFocus');\n      newChildProps.onBlur = this.createTwoChains('onBlur');\n    }\n\n    var childrenClassName = classNames(child && child.props && child.props.className, className);\n    if (childrenClassName) {\n      newChildProps.className = childrenClassName;\n    }\n    var trigger = React.cloneElement(child, newChildProps);\n\n    if (!IS_REACT_16) {\n      return React.createElement(\n        ContainerRender,\n        {\n          parent: this,\n          visible: popupVisible,\n          autoMount: false,\n          forceRender: forceRender,\n          getComponent: this.getComponent,\n          getContainer: this.getContainer\n        },\n        function (_ref2) {\n          var renderComponent = _ref2.renderComponent;\n\n          _this4.renderComponent = renderComponent;\n          return trigger;\n        }\n      );\n    }\n\n    var portal = void 0;\n    // prevent unmounting after it's rendered\n    if (popupVisible || this._component || forceRender) {\n      portal = React.createElement(\n        Portal,\n        {\n          key: 'portal',\n          getContainer: this.getContainer,\n          didUpdate: this.handlePortalUpdate\n        },\n        this.getComponent()\n      );\n    }\n\n    return [trigger, portal];\n  };\n\n  return Trigger;\n}(React.Component);\n\nTrigger.propTypes = {\n  children: PropTypes.any,\n  action: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  showAction: PropTypes.any,\n  hideAction: PropTypes.any,\n  getPopupClassNameFromAlign: PropTypes.any,\n  onPopupVisibleChange: PropTypes.func,\n  afterPopupVisibleChange: PropTypes.func,\n  popup: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n  popupStyle: PropTypes.object,\n  prefixCls: PropTypes.string,\n  popupClassName: PropTypes.string,\n  className: PropTypes.string,\n  popupPlacement: PropTypes.string,\n  builtinPlacements: PropTypes.object,\n  popupTransitionName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  popupAnimation: PropTypes.any,\n  mouseEnterDelay: PropTypes.number,\n  mouseLeaveDelay: PropTypes.number,\n  zIndex: PropTypes.number,\n  focusDelay: PropTypes.number,\n  blurDelay: PropTypes.number,\n  getPopupContainer: PropTypes.func,\n  getDocument: PropTypes.func,\n  forceRender: PropTypes.bool,\n  destroyPopupOnHide: PropTypes.bool,\n  mask: PropTypes.bool,\n  maskClosable: PropTypes.bool,\n  onPopupAlign: PropTypes.func,\n  popupAlign: PropTypes.object,\n  popupVisible: PropTypes.bool,\n  defaultPopupVisible: PropTypes.bool,\n  maskTransitionName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  maskAnimation: PropTypes.string,\n  stretch: PropTypes.string,\n  alignPoint: PropTypes.bool // Maybe we can support user pass position in the future\n};\nTrigger.defaultProps = {\n  prefixCls: 'rc-trigger-popup',\n  getPopupClassNameFromAlign: returnEmptyString,\n  getDocument: returnDocument,\n  onPopupVisibleChange: noop,\n  afterPopupVisibleChange: noop,\n  onPopupAlign: noop,\n  popupClassName: '',\n  mouseEnterDelay: 0,\n  mouseLeaveDelay: 0.1,\n  focusDelay: 0,\n  blurDelay: 0.15,\n  popupStyle: {},\n  destroyPopupOnHide: false,\n  popupAlign: {},\n  defaultPopupVisible: false,\n  mask: false,\n  maskClosable: true,\n  action: [],\n  showAction: [],\n  hideAction: []\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this5 = this;\n\n  this.onMouseEnter = function (e) {\n    var mouseEnterDelay = _this5.props.mouseEnterDelay;\n\n    _this5.fireEvents('onMouseEnter', e);\n    _this5.delaySetPopupVisible(true, mouseEnterDelay, mouseEnterDelay ? null : e);\n  };\n\n  this.onMouseMove = function (e) {\n    _this5.fireEvents('onMouseMove', e);\n    _this5.setPoint(e);\n  };\n\n  this.onMouseLeave = function (e) {\n    _this5.fireEvents('onMouseLeave', e);\n    _this5.delaySetPopupVisible(false, _this5.props.mouseLeaveDelay);\n  };\n\n  this.onPopupMouseEnter = function () {\n    _this5.clearDelayTimer();\n  };\n\n  this.onPopupMouseLeave = function (e) {\n    // https://github.com/react-component/trigger/pull/13\n    // react bug?\n    if (e.relatedTarget && !e.relatedTarget.setTimeout && _this5._component && _this5._component.getPopupDomNode && contains(_this5._component.getPopupDomNode(), e.relatedTarget)) {\n      return;\n    }\n    _this5.delaySetPopupVisible(false, _this5.props.mouseLeaveDelay);\n  };\n\n  this.onFocus = function (e) {\n    _this5.fireEvents('onFocus', e);\n    // incase focusin and focusout\n    _this5.clearDelayTimer();\n    if (_this5.isFocusToShow()) {\n      _this5.focusTime = Date.now();\n      _this5.delaySetPopupVisible(true, _this5.props.focusDelay);\n    }\n  };\n\n  this.onMouseDown = function (e) {\n    _this5.fireEvents('onMouseDown', e);\n    _this5.preClickTime = Date.now();\n  };\n\n  this.onTouchStart = function (e) {\n    _this5.fireEvents('onTouchStart', e);\n    _this5.preTouchTime = Date.now();\n  };\n\n  this.onBlur = function (e) {\n    _this5.fireEvents('onBlur', e);\n    _this5.clearDelayTimer();\n    if (_this5.isBlurToHide()) {\n      _this5.delaySetPopupVisible(false, _this5.props.blurDelay);\n    }\n  };\n\n  this.onContextMenu = function (e) {\n    e.preventDefault();\n    _this5.fireEvents('onContextMenu', e);\n    _this5.setPopupVisible(true, e);\n  };\n\n  this.onContextMenuClose = function () {\n    if (_this5.isContextMenuToShow()) {\n      _this5.close();\n    }\n  };\n\n  this.onClick = function (event) {\n    _this5.fireEvents('onClick', event);\n    // focus will trigger click\n    if (_this5.focusTime) {\n      var preTime = void 0;\n      if (_this5.preClickTime && _this5.preTouchTime) {\n        preTime = Math.min(_this5.preClickTime, _this5.preTouchTime);\n      } else if (_this5.preClickTime) {\n        preTime = _this5.preClickTime;\n      } else if (_this5.preTouchTime) {\n        preTime = _this5.preTouchTime;\n      }\n      if (Math.abs(preTime - _this5.focusTime) < 20) {\n        return;\n      }\n      _this5.focusTime = 0;\n    }\n    _this5.preClickTime = 0;\n    _this5.preTouchTime = 0;\n    if (event && event.preventDefault) {\n      event.preventDefault();\n    }\n    var nextVisible = !_this5.state.popupVisible;\n    if (_this5.isClickToHide() && !nextVisible || nextVisible && _this5.isClickToShow()) {\n      _this5.setPopupVisible(!_this5.state.popupVisible, event);\n    }\n  };\n\n  this.onDocumentClick = function (event) {\n    if (_this5.props.mask && !_this5.props.maskClosable) {\n      return;\n    }\n    var target = event.target;\n    var root = findDOMNode(_this5);\n    var popupNode = _this5.getPopupDomNode();\n    if (!contains(root, target) && !contains(popupNode, target)) {\n      _this5.close();\n    }\n  };\n\n  this.getRootDomNode = function () {\n    return findDOMNode(_this5);\n  };\n\n  this.getPopupClassNameFromAlign = function (align) {\n    var className = [];\n    var _props9 = _this5.props,\n        popupPlacement = _props9.popupPlacement,\n        builtinPlacements = _props9.builtinPlacements,\n        prefixCls = _props9.prefixCls,\n        alignPoint = _props9.alignPoint,\n        getPopupClassNameFromAlign = _props9.getPopupClassNameFromAlign;\n\n    if (popupPlacement && builtinPlacements) {\n      className.push(getAlignPopupClassName(builtinPlacements, prefixCls, align, alignPoint));\n    }\n    if (getPopupClassNameFromAlign) {\n      className.push(getPopupClassNameFromAlign(align));\n    }\n    return className.join(' ');\n  };\n\n  this.getComponent = function () {\n    var _props10 = _this5.props,\n        prefixCls = _props10.prefixCls,\n        destroyPopupOnHide = _props10.destroyPopupOnHide,\n        popupClassName = _props10.popupClassName,\n        action = _props10.action,\n        onPopupAlign = _props10.onPopupAlign,\n        popupAnimation = _props10.popupAnimation,\n        popupTransitionName = _props10.popupTransitionName,\n        popupStyle = _props10.popupStyle,\n        mask = _props10.mask,\n        maskAnimation = _props10.maskAnimation,\n        maskTransitionName = _props10.maskTransitionName,\n        zIndex = _props10.zIndex,\n        popup = _props10.popup,\n        stretch = _props10.stretch,\n        alignPoint = _props10.alignPoint;\n    var _state = _this5.state,\n        popupVisible = _state.popupVisible,\n        point = _state.point;\n\n\n    var align = _this5.getPopupAlign();\n\n    var mouseProps = {};\n    if (_this5.isMouseEnterToShow()) {\n      mouseProps.onMouseEnter = _this5.onPopupMouseEnter;\n    }\n    if (_this5.isMouseLeaveToHide()) {\n      mouseProps.onMouseLeave = _this5.onPopupMouseLeave;\n    }\n\n    return React.createElement(\n      Popup,\n      _extends({\n        prefixCls: prefixCls,\n        destroyPopupOnHide: destroyPopupOnHide,\n        visible: popupVisible,\n        point: alignPoint && point,\n        className: popupClassName,\n        action: action,\n        align: align,\n        onAlign: onPopupAlign,\n        animation: popupAnimation,\n        getClassNameFromAlign: _this5.getPopupClassNameFromAlign\n      }, mouseProps, {\n        stretch: stretch,\n        getRootDomNode: _this5.getRootDomNode,\n        style: popupStyle,\n        mask: mask,\n        zIndex: zIndex,\n        transitionName: popupTransitionName,\n        maskAnimation: maskAnimation,\n        maskTransitionName: maskTransitionName,\n        ref: _this5.savePopup\n      }),\n      typeof popup === 'function' ? popup() : popup\n    );\n  };\n\n  this.getContainer = function () {\n    var props = _this5.props;\n\n    var popupContainer = document.createElement('div');\n    // Make sure default popup container will never cause scrollbar appearing\n    // https://github.com/react-component/trigger/issues/41\n    popupContainer.style.position = 'absolute';\n    popupContainer.style.top = '0';\n    popupContainer.style.left = '0';\n    popupContainer.style.width = '100%';\n    var mountNode = props.getPopupContainer ? props.getPopupContainer(findDOMNode(_this5)) : props.getDocument().body;\n    mountNode.appendChild(popupContainer);\n    return popupContainer;\n  };\n\n  this.setPoint = function (point) {\n    var alignPoint = _this5.props.alignPoint;\n\n    if (!alignPoint || !point) return;\n\n    _this5.setState({\n      point: {\n        pageX: point.pageX,\n        pageY: point.pageY\n      }\n    });\n  };\n\n  this.handlePortalUpdate = function () {\n    if (_this5.prevPopupVisible !== _this5.state.popupVisible) {\n      _this5.props.afterPopupVisibleChange(_this5.state.popupVisible);\n    }\n  };\n\n  this.savePopup = function (node) {\n    _this5._component = node;\n  };\n};\n\nexport default Trigger;","import _extends from 'babel-runtime/helpers/extends';\nfunction isPointsEq(a1, a2, isAlignPoint) {\n  if (isAlignPoint) {\n    return a1[0] === a2[0];\n  }\n  return a1[0] === a2[0] && a1[1] === a2[1];\n}\n\nexport function getAlignFromPlacement(builtinPlacements, placementStr, align) {\n  var baseAlign = builtinPlacements[placementStr] || {};\n  return _extends({}, baseAlign, align);\n}\n\nexport function getAlignPopupClassName(builtinPlacements, prefixCls, align, isAlignPoint) {\n  var points = align.points;\n  for (var placement in builtinPlacements) {\n    if (builtinPlacements.hasOwnProperty(placement)) {\n      if (isPointsEq(builtinPlacements[placement].points, points, isAlignPoint)) {\n        return prefixCls + '-placement-' + placement;\n      }\n    }\n  }\n  return '';\n}\n\nexport function saveRef(name, component) {\n  this[name] = component;\n}"],"sourceRoot":""}