{"version":3,"sources":["webpack:///./app/widget/index/Administrator/ClientInfo/main.js"],"names":["mapStateToProps","state","ownProps","stateClient","mapDispatchToProps","dispatch","goClientInfo","App","props","searchSubmit","getList","searchShow","e","bmcid","setState","targetId","searchHide","changeInput","from","target","value","handleClearIconClick","type","onLoading","cus_name","des","page_info","spinning","axios","get","params","pageNo","pageSize","then","response","bmaincustomer_list","push","data","catch","error","message","match","totalNum","ClientInfos","console","log","path","status","React","Component"],"mappings":"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","file":"js/chunk/212_9219446834c9068affd4.js","sourcesContent":["import Tpl from './tpl';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { goClientInfo } from '../../../../js/actions/index';\r\nimport { message } from 'antd';\r\nimport axios from '../../../../js/common/ajax';\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stateClient: state.stateClient\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return bindActionCreators({ goClientInfo }, dispatch)\r\n}\r\n@connect(mapStateToProps, mapDispatchToProps)\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            cus_name: '',\r\n            des: '',\r\n            spinning:false,\r\n            params: this.props.match.params,\r\n            bmaincustomer_list: [],\r\n            page_info: {\r\n                pageNo: 1,\r\n                pageSize: 12,\r\n                totalNum: 0,\r\n            },\r\n            targetId: null,\r\n            ClientInfos:\"\",\r\n            type:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n       \r\n       \r\n        console.log(this.props.match.path)\r\n       this.setState({\r\n        ClientInfos:this.props.match.path\r\n       },()=>{\r\n        if(this.state.ClientInfos==\"/ClientInfos\"){\r\n            this.setState({\r\n                type:\"jingpin\"\r\n            },()=>{\r\n                this.getList()\r\n                this.props.goClientInfo(true)\r\n            })\r\n        }else{\r\n            this.setState({\r\n                type:\"\"\r\n            },()=>{\r\n                this.getList()\r\n                this.props.goClientInfo(true)\r\n            })\r\n        }\r\n       })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.goClientInfo(false)\r\n    }\r\n    getList(pageNo){\r\n        let { cus_name, des, page_info } = this.state;\r\n        this.setState({\r\n            spinning:true,\r\n        },()=>{\r\n           \r\n            axios.get('/hcm/cus/cus_customerlist', {\r\n                params: {\r\n                    \"cus_name\": cus_name,\r\n                    \"cus_memo_name\": des,\r\n                    \"pageNo\": pageNo ? pageNo :page_info.pageNo,\r\n                    \"pageSize\": page_info.pageSize\r\n                }\r\n            })\r\n            .then((response) => {\r\n                \r\n                console.log(response)\r\n                if(response.data.status==10000){\r\n                    this.setState({\r\n                        bmaincustomer_list: response.data.data.bmaincustomer_list,\r\n                        page_info: response.data.data.page_info,\r\n                        spinning:false,\r\n                    })\r\n                }else{\r\n                    message.error(response.data.message);\r\n                }\r\n                \r\n            })\r\n            .catch((error) => {\r\n                message.error(error.message);\r\n                this.setState({\r\n                    spinning:false\r\n                })\r\n            });\r\n        })\r\n        \r\n    }\r\n    searchSubmit = () => {\r\n        this.getList(1)\r\n    }\r\n    searchShow = (e, bmcid) => {\r\n        this.setState({\r\n            targetId: bmcid\r\n        })\r\n        this.props.goClientInfo(true)\r\n    }\r\n    searchHide = (e) => {\r\n        this.setState({\r\n            targetId: null\r\n        },()=>{\r\n            this.getList()\r\n        })\r\n        this.props.goClientInfo(false)\r\n\r\n    }\r\n    changeInput = (e, from) => {\r\n        let state = this.state;\r\n        state[from] = e.target.value;\r\n        this.setState(state)\r\n    }\r\n    handleClearIconClick =  (type) => {\r\n        let state = this.state;\r\n        state[type] = null;\r\n        this.setState(state);\r\n    }\r\n    onLoading = () => {\r\n        let { cus_name, des, page_info } = this.state;\r\n        this.setState({\r\n            spinning:true,\r\n        },()=>{\r\n            axios.get('/hcm/cus/cus_customerlist', {\r\n                params: {\r\n                    \"cus_name\": cus_name,\r\n                    \"cus_memo_name\": des,\r\n                    \"pageNo\": page_info.pageNo+1,\r\n                    \"pageSize\": page_info.pageSize\r\n                }\r\n            })\r\n            .then((response) => {\r\n                let bmaincustomer_list = this.state.bmaincustomer_list;\r\n                bmaincustomer_list.push(...response.data.data.bmaincustomer_list)\r\n                this.setState({\r\n                    bmaincustomer_list: bmaincustomer_list,\r\n                    page_info: response.data.data.page_info,\r\n                    spinning:false,\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                message.error(error.message);\r\n                this.setState({\r\n                    spinning:false\r\n                })\r\n            });\r\n        })\r\n    }\r\n    render() {\r\n        return <Tpl that={this} />\r\n    }\r\n}\r\nexport default App"],"sourceRoot":""}