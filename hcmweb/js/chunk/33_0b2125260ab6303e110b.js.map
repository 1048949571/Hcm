{"version":3,"sources":["webpack:///./app/widget/components/TagInput/main.js","webpack:///./app/widget/components/TagInput/taginput.less","webpack:///./app/widget/components/TagInput/tpl.js"],"names":["App","props","targetValue","e","targetItem","state","value","target","setState","editItem","item","index","onFocusInput","nodeName","tag_input_textarea","current","focus","stopPropagation","subItem","values","length","maxText","error","newSet","Set","onChange","rmItem","splice","changeValue","inputValue","keyDownValue","keyCode","arr","concat","split","delete","trim","onBlurValue","React","createRef","nextProps","Component","Tpl","that","style","className","placeholder","autoFocus","map","height"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;IAEMA,G;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8GACTA,KADS;;AAAA,cAwBnBC,WAxBmB,GAwBL,UAACC,CAAD,EAAM;AAChB,gBAAIC,aAAa,MAAKC,KAAL,CAAWD,UAA5B;AACAA,uBAAWE,KAAX,GAAoBH,EAAEI,MAAF,CAASD,KAA7B;AACA,kBAAKE,QAAL,CAAc;AACVJ;AADU,aAAd;AAGH,SA9BkB;;AAAA,cA+BnBK,QA/BmB,GA+BR,UAACC,IAAD,EAAMC,KAAN,EAAc;AACrB,gBAAIP,aAAa;AACbE,uBAAMI,IADO;AAEbC;AAFa,aAAjB;AAIA,kBAAKH,QAAL,CAAc;AACVJ;AADU,aAAd;AAGH,SAvCkB;;AAAA,cAwCnBQ,YAxCmB,GAwCJ,UAACT,CAAD,EAAO;AAClB,gBAAGA,EAAEI,MAAF,CAASM,QAAT,IAAmB,OAAnB,IAA4BV,EAAEI,MAAF,CAASM,QAAT,IAAmB,KAAlD,EAAwD;AACpD,sBAAKC,kBAAL,CAAwBC,OAAxB,CAAgCC,KAAhC;AACH;AACDb,cAAEc,eAAF;AACH,SA7CkB;;AAAA,cA8CnBC,OA9CmB,GA8CT,YAAK;AACX,gBAAId,aAAa,MAAKC,KAAL,CAAWD,UAA5B;AACA,gBAAIe,SAAS,MAAKd,KAAL,CAAWc,MAAxB;AACAA,mBAAOf,WAAWO,KAAlB,IAA2BP,WAAWE,KAAtC;;AAEA,gBAAGF,WAAWE,KAAX,CAAiBc,MAAjB,GAA0B,MAAKnB,KAAL,CAAWoB,OAAxC,EAAgD;AAC5C,kCAAQC,KAAR,CACI;AAAA;AAAA;AAAA;AAEI;AAAA;AAAA,0BAAM,WAAU,KAAhB;AAAuB,8BAAKrB,KAAL,CAAWoB;AAAlC,qBAFJ;AAAA;AAGS;AAAA;AAAA,0BAAM,WAAU,KAAhB;AAAuBjB,mCAAWE,KAAX,CAAiBc;AAAxC,qBAHT;AAAA;AAAA,iBADJ;AAQA;AACH;;AAED,gBAAIG,SAAS,IAAIC,GAAJ,CAAQL,MAAR,CAAb;AACA,kBAAKX,QAAL,CAAc;AACVW,qDAAWI,MAAX,EADU;AAEVnB,4BAAW;AACPO,2BAAM,IADC;AAEPL,2BAAM;AAFC;AAFD,aAAd,EAME,YAAI;AACF,sBAAKL,KAAL,CAAWwB,QAAX,CAAoB,MAAKpB,KAAL,CAAWc,MAA/B;AACH,aARD;AASH,SAzEkB;;AAAA,cA0EnBO,MA1EmB,GA0EZ,UAACf,KAAD,EAAS;AACZ,gBAAIQ,SAAS,MAAKd,KAAL,CAAWc,MAAxB;AACAA,mBAAOQ,MAAP,CAAchB,KAAd,EAAqB,CAArB;AACA,kBAAKH,QAAL,CAAc;AACVW;AADU,aAAd,EAEE,YAAI;AACF,sBAAKlB,KAAL,CAAWwB,QAAX,CAAoB,MAAKpB,KAAL,CAAWc,MAA/B;AACH,aAJD;AAKH,SAlFkB;;AAAA,cAmFnBS,WAnFmB,GAmFL,UAACzB,CAAD,EAAK;AACf,gBAAGA,EAAEI,MAAF,CAASD,KAAT,IAAkB,IAArB,EAA0B;AACtB,sBAAKE,QAAL,CAAc;AACVqB,gCAAY1B,EAAEI,MAAF,CAASD;AADX,iBAAd;AAGH;AACJ,SAzFkB;;AAAA,cA0FnBwB,YA1FmB,GA0FJ,UAAC3B,CAAD,EAAK;AAChB,gBAAGA,EAAE4B,OAAF,IAAW,EAAX,IAAe,MAAK1B,KAAL,CAAWwB,UAAX,IAAyB,IAA3C,EAAgD;AAC5C,oBAAIG,MAAM,IAAIR,GAAJ,CAAQ,MAAKnB,KAAL,CAAWc,MAAX,CAAkBc,MAAlB,CAAyB,MAAK5B,KAAL,CAAWwB,UAAX,CAAsBK,KAAtB,CAA4B,IAA5B,CAAzB,CAAR,CAAV;AAD4C;AAAA;AAAA;;AAAA;AAE5C,yCAAgBF,GAAhB,8HAAoB;AAAA,4BAAZtB,IAAY;;AAChB,4BAAGA,KAAKU,MAAL,GAAc,MAAKnB,KAAL,CAAWoB,OAA5B,EAAoC;AAChC,8CAAQC,KAAR,CACI;AAAA;AAAA;AAAA;AAEI;AAAA;AAAA,sCAAM,WAAU,KAAhB;AAAuB,0CAAKrB,KAAL,CAAWoB;AAAlC,iCAFJ;AAAA;AAGKX,oCAHL;AAAA;AAGa;AAAA;AAAA,sCAAM,WAAU,KAAhB;AAAuBA,yCAAKU;AAA5B,iCAHb;AAAA;AAAA,6BADJ;AAQAY,gCAAIG,MAAJ,CAAWzB,IAAX;AACH;AACD,4BAAGA,KAAKU,MAAL,IAAaV,KAAK0B,IAAL,MAAa,EAA7B,EAAgC;AAC5B,8CAAQd,KAAR,CACI;AAAA;AAAA;AAAA;AAAA,6BADJ;AAKAU,gCAAIG,MAAJ,CAAWzB,IAAX;AACH;AACJ;AAtB2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuB5CsB,oBAAIG,MAAJ,CAAW,EAAX;;AAEA,sBAAK3B,QAAL,CAAc;AACVqB,gCAAW,EADD;AAEVV,yDAAWa,GAAX;AAFU,iBAAd,EAGE,YAAI;AACF,0BAAK/B,KAAL,CAAWwB,QAAX,CAAoB,MAAKpB,KAAL,CAAWc,MAA/B;AACH,iBALD;AAMH;AACJ,SA3HkB;;AAAA,cA4HnBkB,WA5HmB,GA4HL,UAAClC,CAAD,EAAK;AACf,gBAAG,MAAKE,KAAL,CAAWwB,UAAX,IAAyB,IAAzB,IAA+B,MAAKxB,KAAL,CAAWwB,UAAX,IAAuB,EAAzD,EAA4D;AACxD,oBAAIG,MAAM,IAAIR,GAAJ,CAAQ,MAAKnB,KAAL,CAAWc,MAAX,CAAkBc,MAAlB,CAAyB,MAAK5B,KAAL,CAAWwB,UAAX,CAAsBK,KAAtB,CAA4B,IAA5B,CAAzB,CAAR,CAAV;AADwD;AAAA;AAAA;;AAAA;AAExD,0CAAgBF,GAAhB,mIAAoB;AAAA,4BAAZtB,IAAY;;AAChB,4BAAGA,KAAKU,MAAL,GAAc,MAAKnB,KAAL,CAAWoB,OAA5B,EAAoC;AAChC,8CAAQC,KAAR,CACI;AAAA;AAAA;AAAA;AAEI;AAAA;AAAA,sCAAM,WAAU,KAAhB;AAAuB,0CAAKrB,KAAL,CAAWoB;AAAlC,iCAFJ;AAAA;AAGKX,oCAHL;AAAA;AAGa;AAAA;AAAA,sCAAM,WAAU,KAAhB;AAAuBA,yCAAKU;AAA5B,iCAHb;AAAA;AAAA,6BADJ;AAQAY,gCAAIG,MAAJ,CAAWzB,IAAX;AACH;AACD,4BAAGA,KAAK0B,IAAL,MAAa,EAAhB,EAAmB;AACf,8CAAQd,KAAR,CACI;AAAA;AAAA;AAAA;AAAA,6BADJ;AAKAU,gCAAIG,MAAJ,CAAWzB,IAAX;AACH;AACJ;AAtBuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBxDsB,oBAAIG,MAAJ,CAAW,EAAX;;AAEA,sBAAK3B,QAAL,CAAc;AACVqB,gCAAW,EADD;AAEVV,yDAAWa,GAAX;AAFU,iBAAd,EAGE,YAAI;AACF,0BAAK/B,KAAL,CAAWwB,QAAX,CAAoB,MAAKpB,KAAL,CAAWc,MAA/B;AACH,iBALD;AAMH;AACJ,SA7JkB;;AAEf,cAAKL,kBAAL,GAA0BwB,MAAMC,SAAN,EAA1B;AACA,cAAKlC,KAAL,GAAa;AACTwB,wBAAW,EADF;AAETV,oBAAO,MAAKlB,KAAL,CAAWK,KAAX,IAAkB,EAFhB;AAGTF,wBAAW;AACPO,uBAAM,IADC;AAEPL,uBAAM;AAFC;AAHF,SAAb;AAHe;AAWlB;;;;4CAEmB,CAEnB;;;6CACoB,CAEpB;;;kDACyBkC,S,EAAW;AACjC,iBAAKhC,QAAL,CAAc;AACVW,wBAAOqB,UAAUlC,KAAV,IAAiB;AADd,aAAd;AAGH;;;iCAuIQ;AACL,mBAAO,oBAAC,aAAD,IAAK,MAAM,IAAX,GAAP;AACH;;;;EAjKagC,MAAMG,S;;kBAmKTzC,G;;;;;;;;;;;;ACrKf,yC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;;AACA;;;;;;AAEA,IAAM0C,MAAM,oBAAS,UAACC,IAAD,EAAU;AAC3B;AAD2B,sBAQvBA,KAAK1C,KARkB;AAAA,QAGvB2C,KAHuB,eAGvBA,KAHuB;AAAA,QAIvBC,SAJuB,eAIvBA,SAJuB;AAAA,QAKvBC,WALuB,eAKvBA,WALuB;AAAA,4CAMvBC,SANuB;AAAA,QAMvBA,SANuB,yCAMb,IANa;AAAA,QAOvB1B,OAPuB,eAOvBA,OAPuB;AAAA,sBAcvBsB,KAAKtC,KAdkB;AAAA,QAWvBwB,UAXuB,eAWvBA,UAXuB;AAAA,QAYvBV,MAZuB,eAYvBA,MAZuB;AAAA,QAavBf,UAbuB,eAavBA,UAbuB;;AAe3B,WACI;AAAA;AAAA,UAAK,SAAS,iBAACD,CAAD;AAAA,uBAAKwC,KAAK/B,YAAL,CAAkBT,CAAlB,CAAL;AAAA,aAAd,EAAyC,OAAOyC,KAAhD,EAAuD,0BAAwBC,SAA/E;AACI;AAAA;AAAA,cAAI,WAAU,cAAd;AAEI1B,mBAAO6B,GAAP,CAAW,UAACtC,IAAD,EAAMC,KAAN;AAAA,uBACP;AAAA;AAAA,sBAAS,SAASD,IAAlB,EAAwB,KAAKC,KAA7B,EAAoC,SAAQ,OAA5C;AACI;AAAA;AAAA,0BAAI,WAAU,MAAd;AAEQA,iCAASP,WAAWO,KAApB,GACA;AACI,2CADJ;AAEI,kCAAK,OAFT;AAGI,oCACI;AACI,sCAAK,OADT;AAEI,yCAAS,iBAACR,CAAD;AAAA,2CAAKwC,KAAKzB,OAAL,EAAL;AAAA;AAFb,8BAJR;AASI,uCAAWG,OATf;AAUI,uCAAW,mBAAClB,CAAD,EAAK;AACZ,oCAAGA,EAAE4B,OAAF,IAAW,EAAd,EAAiB;AACbY,yCAAKzB,OAAL;AACH;AACJ,6BAdL;AAeI,mCAAOd,WAAWE,KAAX,CAAiB8B,IAAjB,EAfX;AAgBI,sCAAU,kBAACjC,CAAD;AAAA,uCAAKwC,KAAKzC,WAAL,CAAiBC,CAAjB,CAAL;AAAA,6BAhBd;AAiBI,oCAAQ,gBAACA,CAAD;AAAA,uCAAKwC,KAAKzB,OAAL,EAAL;AAAA,6BAjBZ;AAkBI,yCAAY;AAlBhB,0BADA,GAsBA;AAAC,iCAAD,CAAO,QAAP;AAAA;AACI;AAAA;AAAA,kCAAG,WAAU,MAAb;AAAqBR;AAArB,6BADJ;AAEI;AAAA;AAAA,kCAAM,WAAU,QAAhB;AACI,sEAAM,WAAU,gBAAhB,EAAiC,MAAK,MAAtC,EAA8C,SAAS;AAAA,+CAAIiC,KAAKlC,QAAL,CAAcC,IAAd,EAAmBC,KAAnB,CAAJ;AAAA,qCAAvD,GADJ;AAEI,sEAAM,WAAU,iBAAhB,EAAkC,MAAK,OAAvC,EAA+C,SAAS;AAAA,+CAAIgC,KAAKjB,MAAL,CAAYf,KAAZ,CAAJ;AAAA,qCAAxD;AAFJ;AAFJ;AAxBR;AADJ,iBADO;AAAA,aAAX;AAFJ,SADJ;AA+CI;AACI,uBAAWoC,SADf;AAEI,iBAAKJ,KAAK7B,kBAFd;AAGI,mBAAO,EAACmC,QAAOpB,WAAWK,KAAX,CAAiB,IAAjB,EAAuBd,MAAvB,GAA8B,EAAtC,EAHX;AAII,mBAAOS,UAJX;AAKI,yBAAaiB,WALjB;AAMI,sBAAY,kBAAC3C,CAAD;AAAA,uBAAKwC,KAAKf,WAAL,CAAiBzB,CAAjB,CAAL;AAAA,aANhB;AAOI,uBAAW,mBAACA,CAAD;AAAA,uBAAKwC,KAAKb,YAAL,CAAkB3B,CAAlB,CAAL;AAAA,aAPf;AAQI,oBAAU,gBAACA,CAAD;AAAA,uBAAKwC,KAAKN,WAAL,CAAiBlC,CAAjB,CAAL;AAAA,aARd;AASI,uBAAU;AATd;AA/CJ,KADJ;AA6DH,CA5EW,CAAZ;kBA6EeuC,G","file":"js/chunk/33_0b2125260ab6303e110b.js","sourcesContent":["import Tpl from './tpl';\r\nimport { Checkbox,message } from 'antd';\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.tag_input_textarea = React.createRef()\r\n        this.state = {\r\n            inputValue:'',\r\n            values:this.props.value||[],\r\n            targetItem:{\r\n                index:null,\r\n                value:null\r\n            }\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n\r\n    }\r\n    componentWillMount() {\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            values:nextProps.value||[],\r\n        })\r\n    }\r\n    targetValue = (e) =>{\r\n        let targetItem = this.state.targetItem;\r\n        targetItem.value =  e.target.value;\r\n        this.setState({\r\n            targetItem\r\n        })\r\n    }\r\n    editItem = (item,index)=>{\r\n        let targetItem = {\r\n            value:item,\r\n            index\r\n        }\r\n        this.setState({\r\n            targetItem\r\n        })\r\n    }\r\n    onFocusInput = (e) => {\r\n        if(e.target.nodeName!='INPUT'&&e.target.nodeName!='SVG'){\r\n            this.tag_input_textarea.current.focus()\r\n        }\r\n        e.stopPropagation()\r\n    }\r\n    subItem = () =>{\r\n        let targetItem = this.state.targetItem;\r\n        let values = this.state.values;\r\n        values[targetItem.index] = targetItem.value;\r\n\r\n        if(targetItem.value.length > this.props.maxText){\r\n            message.error(\r\n                <span>\r\n                    字符长度最大长度\r\n                    <span className='red'>{this.props.maxText}</span>,\r\n                    本条长度为<span className='red'>{targetItem.value.length}</span>, \r\n                    请重新编辑！\r\n                </span>\r\n            )\r\n            return\r\n        }\r\n        \r\n        let newSet = new Set(values)\r\n        this.setState({\r\n            values:[...newSet],\r\n            targetItem:{\r\n                index:null,\r\n                value:null\r\n            }\r\n        },()=>{\r\n            this.props.onChange(this.state.values)\r\n        })\r\n    }\r\n    rmItem=(index)=>{\r\n        let values = this.state.values;\r\n        values.splice(index, 1);\r\n        this.setState({\r\n            values\r\n        },()=>{\r\n            this.props.onChange(this.state.values)\r\n        })\r\n    }\r\n    changeValue = (e)=>{\r\n        if(e.target.value != '\\n'){\r\n            this.setState({\r\n                inputValue: e.target.value\r\n            })\r\n        }\r\n    }\r\n    keyDownValue = (e)=>{\r\n        if(e.keyCode==13&&this.state.inputValue != '\\n'){\r\n            let arr = new Set(this.state.values.concat(this.state.inputValue.split('\\n')))\r\n            for(let item of arr){\r\n                if(item.length > this.props.maxText){\r\n                    message.error(\r\n                        <span>\r\n                            字符长度最大长度\r\n                            <span className='red'>{this.props.maxText}</span>,\r\n                            {item}长度为<span className='red'>{item.length}</span>, \r\n                            已经为您自动删除！\r\n                        </span>\r\n                    )\r\n                    arr.delete(item)\r\n                }\r\n                if(item.length&&item.trim()==''){\r\n                    message.error(\r\n                        <span>\r\n                            空字符条目已自动删除\r\n                        </span>\r\n                    )\r\n                    arr.delete(item)\r\n                }\r\n            }\r\n            arr.delete('')\r\n            \r\n            this.setState({\r\n                inputValue:'',\r\n                values:[...arr]\r\n            },()=>{\r\n                this.props.onChange(this.state.values)\r\n            })\r\n        }\r\n    }\r\n    onBlurValue = (e)=>{\r\n        if(this.state.inputValue != '\\n'&&this.state.inputValue!=''){\r\n            let arr = new Set(this.state.values.concat(this.state.inputValue.split('\\n')))\r\n            for(let item of arr){\r\n                if(item.length > this.props.maxText){\r\n                    message.error(\r\n                        <span>\r\n                            字符长度最大长度\r\n                            <span className='red'>{this.props.maxText}</span>,\r\n                            {item}长度为<span className='red'>{item.length}</span>, \r\n                            已经为您自动删除！\r\n                        </span>\r\n                    )\r\n                    arr.delete(item)\r\n                }\r\n                if(item.trim()==''){\r\n                    message.error(\r\n                        <span>\r\n                            空字符条目已自动删除\r\n                        </span>\r\n                    )\r\n                    arr.delete(item)\r\n                }\r\n            }\r\n            arr.delete('')\r\n            \r\n            this.setState({\r\n                inputValue:'',\r\n                values:[...arr]\r\n            },()=>{\r\n                this.props.onChange(this.state.values)\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return <Tpl that={this} />\r\n    }\r\n}\r\nexport default App","// removed by extract-text-webpack-plugin","import { Popover, Icon,Input } from 'antd';\r\nimport './taginput.less';\r\nimport ThatMain from '../../HOC/That';\r\n\r\nconst Tpl = ThatMain((that) => {\r\n    // console.log(that.props)\r\n    let {\r\n        style,\r\n        className,\r\n        placeholder,\r\n        autoFocus=true,\r\n        maxText\r\n    } = that.props;\r\n\r\n    let {\r\n        inputValue,\r\n        values,\r\n        targetItem\r\n    } = that.state;\r\n    return (\r\n        <div onClick={(e)=>that.onFocusInput(e)} style={style} className={`tag-input ${className}`}>\r\n            <ul className='tag-list-box'>\r\n            {   \r\n                values.map((item,index)=>\r\n                    <Popover content={item} key={index} trigger=\"hover\">\r\n                        <li className='item'>\r\n                            {\r\n                                index == targetItem.index ? \r\n                                <Input \r\n                                    autoFocus \r\n                                    size=\"small\" \r\n                                    suffix={\r\n                                        <Icon \r\n                                            type=\"check\" \r\n                                            onClick={(e)=>that.subItem()}  \r\n                                        />\r\n                                    }\r\n                                    maxLength={maxText}\r\n                                    onKeyDown={(e)=>{\r\n                                        if(e.keyCode==13){\r\n                                            that.subItem()\r\n                                        }\r\n                                    }}\r\n                                    value={targetItem.value.trim()} \r\n                                    onChange={(e)=>that.targetValue(e)} \r\n                                    onBlur={(e)=>that.subItem()}\r\n                                    placeholder=\"请输入\" \r\n                                />\r\n                                :\r\n                                <React.Fragment>\r\n                                    <p className='text'>{item}</p>\r\n                                    <span className='action'>\r\n                                        <Icon className=\"link-icon edit\" type=\"edit\"  onClick={()=>that.editItem(item,index)} />\r\n                                        <Icon className=\"link-icon close\" type=\"close\" onClick={()=>that.rmItem(index)} />\r\n                                    </span>\r\n                                </React.Fragment>   \r\n\r\n                            }\r\n                            \r\n                            \r\n                        </li>\r\n                    </Popover>\r\n                )\r\n            }\r\n            </ul>\r\n\r\n           \r\n            <textarea \r\n                autoFocus={autoFocus} \r\n                ref={that.tag_input_textarea} \r\n                style={{height:inputValue.split('\\n').length*30}}\r\n                value={inputValue}\r\n                placeholder={placeholder}\r\n                onChange = {(e)=>that.changeValue(e)}\r\n                onKeyDown={(e)=>that.keyDownValue(e)}\r\n                onBlur = {(e)=>that.onBlurValue(e)}\r\n                className='input' \r\n            />\r\n        </div>\r\n    )\r\n})\r\nexport default Tpl"],"sourceRoot":""}