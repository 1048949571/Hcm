{"version":3,"sources":["webpack:///./app/widget/components/Copyright.js","webpack:///./app/widget/components/Layout/index.js","webpack:///./app/widget/components/Layout/index.less","webpack:///./app/widget/index/Brand/CustomerEditor/CustomerEditor.less","webpack:///./app/widget/index/Brand/CustomerEditor/tpl.js"],"names":["Copyright","props","clazzName","React","Component","RightBox","className","breadcrumbList","map","v","i","linkList","history","go","children","defaultProps","title","Step","FormItem","Item","Option","RangePicker","SHOW_PARENT","ZIduan","display","marginTop","childrenn","Tpl","that","getFieldDecorator","form","abcARRAy","push","state","Brrby","ForgetSubmit","marginLeft","width","USERS","float","IMGS","marginRight","lineHeight","IMGStxt","apply_statuS","initialValue","dealername","dutynumber","treeData","position","subordinate","document","getElementById","maxHeight","overflow","onChangeSubor","approve_start","moment","approve_end","onChange","authorize_num","approve_date","onChangeX","Array","item","index","im","ind","fieldtype","fieldname","fieldvalue","prompt","opotion","split","handle","height","marginBottom","SuccessBTN","ErrorBTN"],"mappings":"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","file":"js/chunk/82_a2f3c7044408a6012e9c.js","sourcesContent":["\r\nclass Copyright extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return(\r\n            <div className={this.props.clazzName ? this.props.clazzName:'Copyright'}>\r\n                Copyright &#169; 杭州久点网络技术有限公司\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\nexport default Copyright","import Copyright from '../Copyright'\r\nimport { Breadcrumb } from 'antd'\r\n\r\nimport './index.less'\r\n\r\nconst RightBox = props => {\r\n  return (\r\n    <div className={`layout-wrapper ${props.className || ''}`}>\r\n      <div className=\"header-wrapper\">\r\n        <Breadcrumb className=\"breadcrumb\">\r\n          {\r\n            props.breadcrumbList.map((v, i) => {\r\n              if (props.linkList[i] === '') {\r\n                return <Breadcrumb.Item key={v}>{v}</Breadcrumb.Item>\r\n              }\r\n              return (\r\n                <Breadcrumb.Item \r\n                  href=\"javascript:;\" \r\n                  key={v}>\r\n                  <span onClick={() => {props.history.go(-props.linkList[i])}}>{v}</span>\r\n                </Breadcrumb.Item>\r\n              )\r\n            })\r\n          }\r\n        </Breadcrumb>\r\n        {/* <h1 className=\"title\">{props.title}</h1> */}\r\n      </div>\r\n      <div className=\"layout-content\">{ props.children }</div>\r\n      <div className=\"copyright\">\r\n        <Copyright />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nRightBox.defaultProps = {\r\n  title: '标题',\r\n  breadcrumbList: [],\r\n  linkList: []\r\n}\r\n\r\nexport default RightBox","// removed by extract-text-webpack-plugin","// removed by extract-text-webpack-plugin","import './CustomerEditor.less'\r\nimport ThatMain from '../../../HOC/That';\r\nimport ContentBox from '../../../components/Layout';\r\n\r\n// import Footer from \"../../../components/Copyright\"\r\n\r\nimport { Steps, Form, TreeNode, TreeSelect, Breadcrumb, Input, Select, Button, Timeline, DatePicker } from 'antd';\r\nconst Step = Steps.Step;\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst { RangePicker } = DatePicker;\r\nconst SHOW_PARENT = TreeSelect.SHOW_PARENT;\r\nconst ZIduan = {\r\n    display: \"\",\r\n    marginTop: \"20px\"\r\n}\r\nconst children = [];\r\nconst childrenn = [];\r\n\r\n\r\n\r\n\r\nconst Tpl = ThatMain((that) => {\r\n    const { getFieldDecorator } = that.props.form;\r\n    const abcARRAy = []\r\n    abcARRAy.push(that.state.Brrby)\r\n    return (\r\n        <ContentBox \r\n            breadcrumbList={['客户盘点', '客户信息', '编辑']}\r\n            linkList={['', '1', '']}\r\n            history={that.props.history}\r\n        >\r\n        <div className='CustomerEditor'>\r\n\r\n            {/* <div className='Breadcrumb'>\r\n                <Breadcrumb >\r\n                    <Breadcrumb.Item>\r\n                        客户盘点\r\n                            </Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n\r\n                        <a href=\"/index.html#/ClientCheck\">客户信息</a>\r\n                    </Breadcrumb.Item>\r\n                    <Breadcrumb.Item>\r\n                        编辑\r\n                            </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n            </div> */}\r\n            <div className=\"CustomerEditorBOX\">\r\n                <Form onSubmit={that.ForgetSubmit} className=\"forget-form\" style={{ marginLeft: \"20px\", width: \"400px\" }}>\r\n                    <div className=\"FORMtit\">\r\n                        <div className={that.state.USERS} style={{ float: \"right\" }}>\r\n                            <img src={that.state.IMGS} style={{float:\"left\",marginRight:\"10px\",marginTop:\"7px\"}} /> <b style={{lineHeight: \"32px\",float: \"left\"}}>{that.state.IMGStxt}</b> </div>\r\n                    </div>\r\n                    <div className=\"FORMtit\"> <div className=\"FORMus\">客户名称：</div>\r\n                        {\r\n                            that.state.apply_statuS == \"APPLYING\" ? <FormItem className=\"tops\">\r\n                                {getFieldDecorator('CustomerName', {\r\n                                    initialValue: that.state.dealername || \"\",\r\n                                })(\r\n                                    <Input className='user-name'\r\n                                        maxLength=\"50\"\r\n                                        disabled\r\n                                    />\r\n                                    )}\r\n                            </FormItem> : <FormItem className=\"tops\">\r\n                                    {getFieldDecorator('CustomerName', {\r\n                                        initialValue: that.state.dealername || \"\",\r\n                                    })(\r\n                                        <Input className='user-name'\r\n                                            maxLength=\"50\"\r\n                                            \r\n                                        />\r\n                                        )}\r\n                                </FormItem>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"FORMtit\"> <div className=\"FORMus\">备注名称：</div>\r\n                        <FormItem className=\"tops\">\r\n                            {getFieldDecorator('NameOfNote', {\r\n                                initialValue: that.state.dutynumber || '',\r\n                            })(\r\n                                <Input className='user-name'\r\n                                    maxLength=\"50\"\r\n                                />\r\n                                )}\r\n                        </FormItem>\r\n                    </div>\r\n                    {\r\n                        that.state.treeData ? <div id=\"areaxb\" className=\"FORMtit\" style={{ position: \"relative\" }}> <div className=\"FORMus\">直属上级：</div>\r\n                            <FormItem className=\"tops\" >\r\n                                {getFieldDecorator('Subordinate', {\r\n                                    initialValue: that.state.subordinate\r\n                                })(\r\n\r\n\r\n\r\n                                    <TreeSelect\r\n                                        getPopupContainer={() => document.getElementById('areaxb')}\r\n                                        style={{ width: 320 }}\r\n                                        //value={that.state.value}\r\n                                        dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\r\n                                        treeData={that.state.treeData}\r\n                                        placeholder=\"请选择部门人员\"\r\n                                        treeDefaultExpandAll\r\n                                        onChange={that.onChangeSubor}\r\n                                    />\r\n                                    )}\r\n\r\n                            </FormItem>\r\n\r\n                        </div> : <div className=\"FORMtit\"> <div className=\"FORMus\">直属上级：</div><FormItem className=\"tops\">请在账号管理中添加直属上级 </FormItem> </div>\r\n                    }\r\n\r\n                    <div className=\"FORMtit\">\r\n                        <div className=\"FORMus\">授权期限：</div>\r\n                        <FormItem className=\"tops\">\r\n                            {getFieldDecorator('approve_start', {\r\n                                initialValue: that.state.approve_start ? [moment(that.state.approve_start), moment(that.state.approve_end)] : [moment(), moment()]\r\n                            })(\r\n                                <RangePicker className=\"user-name\" style={{ display: \"inline-block\", width: \"320px\" }} onChange={that.onChange} />\r\n                                )}\r\n                        </FormItem>\r\n                    </div>\r\n                    <div className=\"FORMtit\"> <div className=\"FORMus\">授权编码：</div>\r\n                        <FormItem className=\"tops\">\r\n                            {getFieldDecorator('authorize_num', {\r\n                                initialValue: that.state.authorize_num || '',\r\n                            })(\r\n                                <Input className='user-name'\r\n                                    maxLength=\"50\"\r\n                                />\r\n                                )}\r\n                        </FormItem>\r\n                    </div>\r\n                    <div className=\"FORMtit\">\r\n                        <div className=\"FORMus\">审批日期：</div>\r\n                        <FormItem className=\"tops\">\r\n                            {getFieldDecorator('approve_date', {\r\n                                initialValue: that.state.approve_date ? moment(that.state.approve_date) : moment(),\r\n                            })(\r\n                                <DatePicker className=\"user-name\" style={{ display: \"inline-block\", width: \"320px\" }} onChange={that.onChangeX} />\r\n\r\n                                )}\r\n                        </FormItem>\r\n                    </div>\r\n                    {/* <div className=\"FORMtit\"> <div className=\"FORMus\"  >申请人：</div>\r\n                        <FormItem className=\"tops\">\r\n                            {getFieldDecorator('Applicant', {\r\n                                initialValue: that.state.apply_person || '',\r\n                            })(\r\n                                <Input className='user-name'\r\n                                />\r\n                                )}\r\n                        </FormItem>\r\n                    </div>\r\n                    <div className=\"FORMtit\"> <div className=\"FORMus\">授权内容：</div>\r\n                        <FormItem className=\"tops\">\r\n                            {getFieldDecorator('AuthorizedContent', {\r\n                                initialValue: that.state.apply_content || '',\r\n                            })(\r\n                                <textarea className=\"topsx\" style={{ resize: \"none\" }} placeholder=\"请输入\" />\r\n                                )}\r\n                        </FormItem>\r\n                    </div> */}\r\n\r\n                    {\r\n                        that.state.Array ? <div>\r\n                            {\r\n                                that.state.Array.map((item, index) => {\r\n                                    return <div key={index}>\r\n                                        {\r\n                                            abcARRAy ? <div>\r\n                                                {\r\n                                                    abcARRAy.map((im, ind) => {\r\n                                                        return <div key={ind}>\r\n                                                            {item.fieldtype == \"TEXT\" ?\r\n                                                                <div className=\"FORMtit\" style={{ marginTop: \"10px\" }}>\r\n                                                                    <div className=\"FORMus\">{item.fieldname}：</div>\r\n                                                                    {/* <Input value={item.fieldvalue} onChange={e=>that.iptChange(e,item.fieldvalue)} className='user-name'/> */}\r\n\r\n                                                                    <FormItem className=\"tops\">\r\n                                                                        {getFieldDecorator(item.fieldvalue, {\r\n                                                                            initialValue: im[item.fieldvalue],\r\n                                                                        })(\r\n                                                                            <Input className='user-name' maxLength=\"50\" placeholder={item.prompt ? item.prompt : \"请输入内容\"}\r\n                                                                            />\r\n                                                                            )}\r\n                                                                    </FormItem>\r\n\r\n                                                                </div>\r\n                                                                : item.fieldtype == \"MULTISELECT\" ?\r\n                                                                    <div id=\"areaxbn\" className=\"FORMtit\" style={{ marginTop: \"20px\", position: 'relative' }}>\r\n                                                                        <div className=\"FORMus\">{item.fieldname}：</div>\r\n                                                                        {\r\n                                                                            item.opotion.split(\",\") ?\r\n                                                                                <FormItem className=\"tops\">\r\n                                                                                    {getFieldDecorator(item.fieldvalue, {\r\n                                                                                        initialValue: im[item.fieldvalue],\r\n                                                                                    })(\r\n                                                                                        <Select\r\n                                                                                            getPopupContainer={() => document.getElementById('areaxbn')}\r\n                                                                                            mode=\"multiple\"\r\n                                                                                            style={{ width: '100%' }}\r\n                                                                                            placeholder={item.prompt ? item.prompt : \"请选择内容\"}\r\n                                                                                            onChange={that.handle}\r\n                                                                                        >\r\n                                                                                            {\r\n                                                                                                item.opotion.split(\",\").map((v, i) => {\r\n                                                                                                    return <Option key={i} value={v}>{v}</Option>\r\n                                                                                                })\r\n                                                                                            }\r\n                                                                                        </Select>\r\n\r\n                                                                                        )}\r\n                                                                                </FormItem> : <FormItem className=\"tops\">\r\n                                                                                    {getFieldDecorator(item.fieldvalue, {\r\n                                                                                        initialValue: im[item.fieldvalue],\r\n                                                                                    })(<Select\r\n                                                                                        getPopupContainer={() => document.getElementById('areaxbn')}\r\n                                                                                        mode=\"multiple\"\r\n                                                                                        style={{ width: '100%' }}\r\n                                                                                        placeholder={item.prompt ? item.prompt : \"请选择内容\"}\r\n                                                                                        onChange={that.handle}\r\n                                                                                    >\r\n                                                                                        {children}\r\n                                                                                    </Select>\r\n\r\n\r\n                                                                                        )}\r\n                                                                                </FormItem>\r\n                                                                        }\r\n                                                                    </div> : item.fieldtype == \"Single\" ?\r\n                                                                        <div className=\"FORMtit\" style={{ marginTop: \"20px\" }}>\r\n                                                                            <div className=\"FORMus\">{item.fieldname}：</div>\r\n                                                                            {/* <Input value={item.fieldvalue} onChange={e=>that.iptChange(e,item.fieldvalue)} className='user-name'/> */}\r\n\r\n                                                                            <FormItem className=\"tops\">\r\n                                                                                {getFieldDecorator(item.fieldvalue, {\r\n                                                                                    initialValue: im[item.fieldvalue],//that.state.Brrby[item.prompt]\r\n                                                                                })(\r\n                                                                                    <textarea className='user-name' placeholder={item.prompt ? item.prompt : \"请输入内容\"} maxLength=\"100\" style={{ width: \"320px\", height: \"60px\" }}\r\n                                                                                    />\r\n                                                                                    )}\r\n                                                                            </FormItem>\r\n\r\n                                                                        </div> : <div id=\"areax\" className=\"FORMtit\" style={{ marginTop: \"20px\", position: 'relative' }}>\r\n                                                                            <div className=\"FORMus\">{item.fieldname}：</div>\r\n                                                                            {\r\n                                                                                item.opotion.split(\",\") ? <FormItem className=\"tops\"  >\r\n                                                                                    {getFieldDecorator(item.fieldvalue, {\r\n                                                                                        initialValue: im[item.fieldvalue],\r\n                                                                                    })(\r\n                                                                                        <Select\r\n                                                                                            style={{ width: '100%' }}\r\n                                                                                            placeholder={item.prompt ? item.prompt : \"请选择内容\"}\r\n                                                                                            onChange={that.handle}\r\n                                                                                            getPopupContainer={() => document.getElementById('areax')}\r\n                                                                                        >\r\n                                                                                            {\r\n                                                                                                item.opotion.split(\",\").map((v, i) => {\r\n                                                                                                    return <Option key={i} value={v}>{v}</Option>\r\n                                                                                                })\r\n                                                                                            }\r\n                                                                                        </Select>\r\n                                                                                        )}\r\n                                                                                </FormItem> : <FormItem className=\"tops\">\r\n                                                                                        {getFieldDecorator(item.fieldvalue, {\r\n                                                                                            initialValue: '请选择',\r\n                                                                                        })(\r\n                                                                                            <Select\r\n                                                                                                getPopupContainer={() => document.getElementById('areax')}\r\n                                                                                                style={{ width: '100%' }}\r\n                                                                                                placeholder={item.prompt ? item.prompt : \"请选择内容\"}\r\n                                                                                                onChange={that.handle}\r\n                                                                                            >\r\n                                                                                                {childrenn}\r\n                                                                                            </Select>\r\n                                                                                            )}\r\n                                                                                    </FormItem>}\r\n\r\n                                                                        </div>}\r\n                                                        </div>\r\n                                                    })\r\n\r\n                                                }\r\n                                            </div> : null\r\n                                        }\r\n\r\n\r\n                                    </div>\r\n\r\n                                })\r\n                            }</div> : null\r\n                    }\r\n\r\n                    <div className=\"FORMtit\" style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\r\n                        <Button className=\"btn2-main\" htmlType=\"submit\" onClick={() => that.SuccessBTN()}  style={{ marginLeft: 150 }}>确认</Button>\r\n                        <Button className=\"ErrorBTN\" onClick={() => that.ErrorBTN()} style={{ marginLeft: 10 }}>取消</Button>\r\n                    </div>\r\n                </Form>\r\n\r\n            </div>\r\n\r\n            {/* <Footer className='Copyright'></Footer> */}\r\n\r\n        </div>\r\n        </ContentBox>\r\n    )\r\n})\r\nexport default Tpl"],"sourceRoot":""}