{"version":3,"sources":["webpack:///./node_modules/_antd@3.10.1@antd/es/tree/DirectoryTree.js","webpack:///./node_modules/_antd@3.10.1@antd/es/tree/Tree.js","webpack:///./node_modules/_antd@3.10.1@antd/es/tree/index.js","webpack:///./node_modules/_antd@3.10.1@antd/es/tree/style/css.js","webpack:///./node_modules/_antd@3.10.1@antd/es/tree/style/index.css","webpack:///./node_modules/_antd@3.10.1@antd/es/tree/util.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACoB;AACN;AACN;AAC4B;AAClC;AACvD,aAAa,SAAI,IAAI,SAAI;AACzB;AACA;AACA;AACA,KAAK,yHAAyH,cAAc;AAC5I;AACA,KAAK;AACL;AAC+B;AACK;AACT;AACY;AACsC;AACnD;AAC6B;AAC5B;AAC3B;AACA;AACA;;AAEA;AACA,eAAe,mDAAmB,CAAC,8CAAI,GAAG,eAAe;AACzD;AACA,WAAW,mDAAmB,CAAC,8CAAI,GAAG,4CAA4C;AAClF;;AAEA;AACA,IAAI,qEAAS;;AAEb;AACA,QAAQ,2EAAe;;AAEvB,oBAAoB,sFAA0B;;AAE9C;AACA;;AAEA,wCAAwC,6BAA6B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+DAA+D,8EAAkB,kCAAkC,8EAAkB,CAAC,4DAAa;AACnJ,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uDAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,8EAAqB;AACzD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,uCAAuC,6DAAc;AACrD,SAAS;AACT,uCAAuC,4EAAmB;AAC1D,SAAS;AACT;AACA;AACA,iCAAiC,sDAAQ;AACzC;AACA,SAAS;AACT;AACA;;AAEA,IAAI,wEAAY;AAChB;AACA;AACA;AACA,+BAA+B,uCAAuC;AACtE;AACA;AACA,+BAA+B,uCAAuC;AACtE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA,mCAAmC,iDAAU;AAC7C,mBAAmB,mDAAmB,CAAC,8CAAI,EAAE,oEAAQ,EAAE,sCAAsC,UAAU,wNAAwN;AAC/T;AACA,KAAK;;AAEL;AACA,CAAC,CAAC,+CAAe;;AAEF,4EAAa,EAAC;;AAE7B;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;ACxMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACc;AACN;AAC4B;AAClC;AACxB;AACY;AACC;AACR;AACW;AACpB;;AAE3B;AACA,IAAI,qEAAS;;AAEb;AACA,QAAQ,2EAAe;;AAEvB,oBAAoB,sFAA0B;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,mDAAmB,CAAC,8CAAI,GAAG,mEAAmE;AACrH;AACA;AACA;AACA,2BAA2B,mDAAmB,CAAC,8CAAI,GAAG,6DAA6D;AACnH;AACA,uBAAuB,mDAAmB,CAAC,8CAAI,GAAG,mHAAmH;AACrK,aAAa;AACb;AACA;AACA;AACA,uBAAuB,mDAAmB,CAAC,8CAAI,GAAG,+EAA+E;AACjI;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,wEAAY;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mDAAmB;AACtC,gBAAgB,+CAAM;AACtB,gBAAgB,oEAAQ,EAAE,uBAAuB,UAAU,YAAY,iDAAU,2EAA2E,mDAAmB,UAAU,2CAA2C,sDAAsD;AAC1R;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC,CAAC,+CAAe;;AAEF,mEAAI,EAAC;;AAEpB,gBAAgB,gDAAQ;AACxB,qBAAqB,sDAAa;AAClC;AACA;AACA;AACA;AACA,mBAAmB,oEAAQ,GAAG,EAAE,2DAAS,GAAG,eAAe;AAC3D,E;;;;;;;;;;;;AC9EA;AAAA;AAA0B;AACX,4GAAI,E;;;;;;;;;;;;ACDnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACV;AACrB;;;;;;;;;;;;ACFA,yC;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAyE;AACzE;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB;AACzB;AACA;AACA,mBAAmB,uEAAe;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gCAAgC,6EAAqB;AACrD;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,C","file":"js/chunk/19_e3a3d640ba7d78ea29c0.js","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nvar __rest = this && this.__rest || function (s, e) {\n    var t = {};\n    for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    }if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n        if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n    }return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport debounce from 'lodash/debounce';\nimport { conductExpandParent, convertTreeToEntities } from 'rc-tree/es/util';\nimport Tree from './Tree';\nimport { calcRangeKeys, getFullKeyList } from './util';\nimport Icon from '../icon';\nfunction getIcon(props) {\n    var isLeaf = props.isLeaf,\n        expanded = props.expanded;\n\n    if (isLeaf) {\n        return React.createElement(Icon, { type: 'file' });\n    }\n    return React.createElement(Icon, { type: expanded ? 'folder-open' : 'folder' });\n}\n\nvar DirectoryTree = function (_React$Component) {\n    _inherits(DirectoryTree, _React$Component);\n\n    function DirectoryTree(props) {\n        _classCallCheck(this, DirectoryTree);\n\n        var _this = _possibleConstructorReturn(this, (DirectoryTree.__proto__ || Object.getPrototypeOf(DirectoryTree)).call(this, props));\n\n        _this.onExpand = function (expandedKeys, info) {\n            var onExpand = _this.props.onExpand;\n\n            _this.setUncontrolledState({ expandedKeys: expandedKeys });\n            // Call origin function\n            if (onExpand) {\n                return onExpand(expandedKeys, info);\n            }\n            return undefined;\n        };\n        _this.onClick = function (event, node) {\n            var _this$props = _this.props,\n                onClick = _this$props.onClick,\n                expandAction = _this$props.expandAction;\n            // Expand the tree\n\n            if (expandAction === 'click') {\n                _this.onDebounceExpand(event, node);\n            }\n            if (onClick) {\n                onClick(event, node);\n            }\n        };\n        _this.onDoubleClick = function (event, node) {\n            var _this$props2 = _this.props,\n                onDoubleClick = _this$props2.onDoubleClick,\n                expandAction = _this$props2.expandAction;\n            // Expand the tree\n\n            if (expandAction === 'doubleClick') {\n                _this.onDebounceExpand(event, node);\n            }\n            if (onDoubleClick) {\n                onDoubleClick(event, node);\n            }\n        };\n        _this.onSelect = function (keys, event) {\n            var _this$props3 = _this.props,\n                onSelect = _this$props3.onSelect,\n                multiple = _this$props3.multiple,\n                children = _this$props3.children;\n            var _this$state = _this.state,\n                _this$state$expandedK = _this$state.expandedKeys,\n                expandedKeys = _this$state$expandedK === undefined ? [] : _this$state$expandedK,\n                _this$state$selectedK = _this$state.selectedKeys,\n                selectedKeys = _this$state$selectedK === undefined ? [] : _this$state$selectedK;\n            var node = event.node,\n                nativeEvent = event.nativeEvent;\n            var _node$props$eventKey = node.props.eventKey,\n                eventKey = _node$props$eventKey === undefined ? '' : _node$props$eventKey;\n\n            var newState = {};\n            // Windows / Mac single pick\n            var ctrlPick = nativeEvent.ctrlKey || nativeEvent.metaKey;\n            var shiftPick = nativeEvent.shiftKey;\n            // Generate new selected keys\n            var newSelectedKeys = selectedKeys.slice();\n            if (multiple && ctrlPick) {\n                // Control click\n                newSelectedKeys = keys;\n                _this.lastSelectedKey = eventKey;\n                _this.cachedSelectedKeys = newSelectedKeys;\n            } else if (multiple && shiftPick) {\n                // Shift click\n                newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(_this.cachedSelectedKeys || []), _toConsumableArray(calcRangeKeys(children, expandedKeys, eventKey, _this.lastSelectedKey)))));\n            } else {\n                // Single click\n                newSelectedKeys = [eventKey];\n                _this.lastSelectedKey = eventKey;\n                _this.cachedSelectedKeys = newSelectedKeys;\n            }\n            newState.selectedKeys = newSelectedKeys;\n            if (onSelect) {\n                onSelect(newSelectedKeys, event);\n            }\n            _this.setUncontrolledState(newState);\n        };\n        _this.setTreeRef = function (node) {\n            _this.tree = node;\n        };\n        _this.expandFolderNode = function (event, node) {\n            var isLeaf = node.props.isLeaf;\n\n            if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {\n                return;\n            }\n            // Get internal rc-tree\n            var internalTree = _this.tree.tree;\n            // Call internal rc-tree expand function\n            // https://github.com/ant-design/ant-design/issues/12567\n            internalTree.onNodeExpand(event, node);\n        };\n        _this.setUncontrolledState = function (state) {\n            var newState = omit(state, Object.keys(_this.props));\n            if (Object.keys(newState).length) {\n                _this.setState(newState);\n            }\n        };\n        var defaultExpandAll = props.defaultExpandAll,\n            defaultExpandParent = props.defaultExpandParent,\n            expandedKeys = props.expandedKeys,\n            defaultExpandedKeys = props.defaultExpandedKeys,\n            children = props.children;\n\n        var _convertTreeToEntitie = convertTreeToEntities(children),\n            keyEntities = _convertTreeToEntitie.keyEntities;\n        // Selected keys\n\n\n        _this.state = {\n            selectedKeys: props.selectedKeys || props.defaultSelectedKeys || []\n        };\n        // Expanded keys\n        if (defaultExpandAll) {\n            _this.state.expandedKeys = getFullKeyList(props.children);\n        } else if (defaultExpandParent) {\n            _this.state.expandedKeys = conductExpandParent(expandedKeys || defaultExpandedKeys, keyEntities);\n        } else {\n            _this.state.expandedKeys = expandedKeys || defaultExpandedKeys;\n        }\n        _this.onDebounceExpand = debounce(_this.expandFolderNode, 200, {\n            leading: true\n        });\n        return _this;\n    }\n\n    _createClass(DirectoryTree, [{\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            if ('expandedKeys' in nextProps) {\n                this.setState({ expandedKeys: nextProps.expandedKeys });\n            }\n            if ('selectedKeys' in nextProps) {\n                this.setState({ selectedKeys: nextProps.selectedKeys });\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _a = this.props,\n                prefixCls = _a.prefixCls,\n                className = _a.className,\n                props = __rest(_a, [\"prefixCls\", \"className\"]);var _state = this.state,\n                expandedKeys = _state.expandedKeys,\n                selectedKeys = _state.selectedKeys;\n\n            var connectClassName = classNames(prefixCls + '-directory', className);\n            return React.createElement(Tree, _extends({ icon: getIcon, ref: this.setTreeRef }, props, { prefixCls: prefixCls, className: connectClassName, expandedKeys: expandedKeys, selectedKeys: selectedKeys, onSelect: this.onSelect, onClick: this.onClick, onDoubleClick: this.onDoubleClick, onExpand: this.onExpand }));\n        }\n    }]);\n\n    return DirectoryTree;\n}(React.Component);\n\nexport default DirectoryTree;\n\nDirectoryTree.defaultProps = {\n    prefixCls: 'ant-tree',\n    showIcon: true,\n    expandAction: 'click'\n};","import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport DirectoryTree from './DirectoryTree';\nimport classNames from 'classnames';\nimport animation from '../_util/openAnimation';\nimport Icon from '../icon';\n\nvar Tree = function (_React$Component) {\n    _inherits(Tree, _React$Component);\n\n    function Tree() {\n        _classCallCheck(this, Tree);\n\n        var _this = _possibleConstructorReturn(this, (Tree.__proto__ || Object.getPrototypeOf(Tree)).apply(this, arguments));\n\n        _this.renderSwitcherIcon = function (_ref) {\n            var isLeaf = _ref.isLeaf,\n                expanded = _ref.expanded,\n                loading = _ref.loading;\n            var _this$props = _this.props,\n                prefixCls = _this$props.prefixCls,\n                showLine = _this$props.showLine;\n\n            if (loading) {\n                return React.createElement(Icon, { type: 'loading', className: prefixCls + '-switcher-loading-icon' });\n            }\n            if (showLine) {\n                if (isLeaf) {\n                    return React.createElement(Icon, { type: 'file', className: prefixCls + '-switcher-line-icon' });\n                }\n                return React.createElement(Icon, { type: expanded ? 'minus-square' : 'plus-square', className: prefixCls + '-switcher-line-icon', theme: 'outlined' });\n            } else {\n                if (isLeaf) {\n                    return null;\n                }\n                return React.createElement(Icon, { type: 'caret-down', className: prefixCls + '-switcher-icon', theme: 'filled' });\n            }\n        };\n        _this.setTreeRef = function (node) {\n            _this.tree = node;\n        };\n        return _this;\n    }\n\n    _createClass(Tree, [{\n        key: 'render',\n        value: function render() {\n            var props = this.props;\n            var prefixCls = props.prefixCls,\n                className = props.className,\n                showIcon = props.showIcon;\n\n            var checkable = props.checkable;\n            return React.createElement(\n                RcTree,\n                _extends({ ref: this.setTreeRef }, props, { className: classNames(!showIcon && prefixCls + '-icon-hide', className), checkable: checkable ? React.createElement('span', { className: prefixCls + '-checkbox-inner' }) : checkable, switcherIcon: this.renderSwitcherIcon }),\n                this.props.children\n            );\n        }\n    }]);\n\n    return Tree;\n}(React.Component);\n\nexport default Tree;\n\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n    prefixCls: 'ant-tree',\n    checkable: false,\n    showIcon: false,\n    openAnimation: _extends({}, animation, { appear: null })\n};","import Tree from './Tree';\nexport default Tree;","import '../../style/index.css';\nimport './index.css';\n// style dependencies\nimport '../../checkbox/style/css';","// removed by extract-text-webpack-plugin","import { getNodeChildren, convertTreeToEntities } from \"rc-tree/es/util\";\nvar Record;\n(function (Record) {\n    Record[Record[\"None\"] = 0] = \"None\";\n    Record[Record[\"Start\"] = 1] = \"Start\";\n    Record[Record[\"End\"] = 2] = \"End\";\n})(Record || (Record = {}));\n// TODO: Move this logic into `rc-tree`\nfunction traverseNodesKey(rootChildren, callback) {\n    var nodeList = getNodeChildren(rootChildren) || [];\n    function processNode(node) {\n        var key = node.key,\n            children = node.props.children;\n\n        if (callback(key) !== false) {\n            traverseNodesKey(children, callback);\n        }\n    }\n    nodeList.forEach(processNode);\n}\nexport function getFullKeyList(children) {\n    var _convertTreeToEntitie = convertTreeToEntities(children),\n        keyEntities = _convertTreeToEntitie.keyEntities;\n\n    return Object.keys(keyEntities);\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\nexport function calcRangeKeys(rootChildren, expandedKeys, startKey, endKey) {\n    var keys = [];\n    var record = Record.None;\n    if (startKey && startKey === endKey) {\n        return [startKey];\n    }\n    if (!startKey || !endKey) {\n        return [];\n    }\n    function matchKey(key) {\n        return key === startKey || key === endKey;\n    }\n    traverseNodesKey(rootChildren, function (key) {\n        if (record === Record.End) {\n            return false;\n        }\n        if (matchKey(key)) {\n            // Match test\n            keys.push(key);\n            if (record === Record.None) {\n                record = Record.Start;\n            } else if (record === Record.Start) {\n                record = Record.End;\n                return false;\n            }\n        } else if (record === Record.Start) {\n            // Append selection\n            keys.push(key);\n        }\n        if (expandedKeys.indexOf(key) === -1) {\n            return false;\n        }\n        return true;\n    });\n    return keys;\n}"],"sourceRoot":""}