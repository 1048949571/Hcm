{"version":3,"sources":["webpack:///./app/widget/index/Dealers/Home/main.js"],"names":["mapStateToProps","state","ownProps","currentBrand","dealer","mapDispatchToProps","dispatch","getBrandList","App","props","reSubmitApply","method","url","then","res","data","status","message","success","catch","handleDateClick","index","date","setState","selectDateIndex","currentDate","getBrandActivityPublicShop","handleToggleClick","isExpandShop","getList","productList","noticeList","binding","userId","userid","campaign_node","type","format","ser_day","shopBtnList","getBrandActivityPublicDate","sevenActivity","goTo","history","push","pathname","path","dataList","selectShopIndex","React","Component"],"mappings":"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","file":"js/chunk/297_b1863b5ca55c559193d4.js","sourcesContent":["import Tpl from './tpl';\r\nimport {message as Msg, notification} from 'antd';\r\nimport axios from '../../../../js/common/ajax';\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment'\r\nimport { getBrandList } from '../../../../js/actions/dealer'\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        currentBrand: state.dealer.currentBrand\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return bindActionCreators({ getBrandList }, dispatch)\r\n}\r\n@connect(mapStateToProps, mapDispatchToProps)\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dataList:[],\r\n            selectDateIndex: 0,\r\n            isExpandShop: true,\r\n            selectShopIndex: -1,\r\n            sevenActivity: [],\r\n            shopBtnList: [],\r\n            currentDate: moment().format('YYYY-MM-DD'),\r\n            productList: [],\r\n            noticeList: [],\r\n            binding: null,\r\n            userId: null,\r\n        }\r\n    }\r\n    componentWillMount() {\r\n       this.getBrandActivityPublicDate()\r\n       this.getBrandActivityPublicShop(this.state.currentDate)\r\n       this.getList()\r\n    //    notification.config({\r\n    //        duration: null,\r\n    //        top: 60\r\n    //    })\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     setTimeout(() => {\r\n    //         try {\r\n    //             if (!sessionStorage.getItem('exdate')) {\r\n    //                 sessionStorage.setItem('exdate', true)\r\n    //                 const { end_days, authorize_end } = this.props.currentBrand\r\n    //                 !!end_days && end_days < 30 ?\r\n    //                 notification.warning({\r\n    //                     key: '999',\r\n    //                     message: '账号即将到期提醒',\r\n    //                     description: `你的账号有效期至${moment(authorize_end).format('YYYY-MM-DD')}日，使用期限仅剩${end_days}天，过期后账号将不能使用，请及时联系管理员续期`,\r\n    //                 }) : null\r\n    //             }\r\n    //         } catch (error) {\r\n    //             // Msg.warning('请关闭浏览器的无痕模式！')\r\n    //         }\r\n    //     }, 500);\r\n    // }\r\n\r\n    // componentWillUnmount() {\r\n    //     notification.close('999')\r\n    // }\r\n\r\n    reSubmitApply = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: '/hcm/dealer/reSubmitApplying'\r\n        }).then(res => {\r\n            const { data, status, message } = res.data\r\n            if (status === '10000') {\r\n                Msg.success(message)\r\n                this.props.getBrandList()\r\n            }\r\n        }).catch()\r\n    }\r\n\r\n    handleDateClick = (index, date) => {\r\n        this.setState({\r\n            selectDateIndex: index,\r\n            currentDate: date\r\n        })\r\n        this.getBrandActivityPublicShop(date)\r\n    }\r\n    handleToggleClick = () => {\r\n        this.setState({\r\n            isExpandShop: !this.state.isExpandShop\r\n        })\r\n    }\r\n\r\n    getList = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: '/hcm/Index/dealerIndex',\r\n        }).then(res => {\r\n            const { data, status, message } = res.data\r\n            if (status === '10000') {\r\n                this.setState({\r\n                    productList: data.productList,\r\n                    noticeList: data.noticeList,\r\n                    binding: data.binding,\r\n                    userId: data.userid,\r\n                })\r\n            }\r\n        }).catch()\r\n    }\r\n\r\n    getBrandActivityPublicShop = date => {\r\n        axios({\r\n            method: 'post',\r\n            url: '/hcm/campgign/PublicShops',\r\n            data: {\r\n                campaign_node: '已审核',\r\n                type: moment().format('YYYY-MM-DD') === date ? 1 : 2,\r\n                ser_day: date\r\n            }\r\n        }).then(res => {\r\n            const { data, status, message } = res.data\r\n            if (status === '10000') {\r\n                this.setState({\r\n                    shopBtnList: data\r\n                })\r\n            }\r\n        }).catch()\r\n    }\r\n\r\n    getBrandActivityPublicDate = () => {\r\n        axios({\r\n            method: 'post',\r\n            url: '/hcm/campgign/ScheduleBMCSeven'\r\n        }).then(res => {\r\n            const { data, status, message } = res.data\r\n            if (status === '10000') {\r\n                this.setState({\r\n                    sevenActivity: data\r\n                })\r\n            }\r\n        }).catch()\r\n    }\r\n\r\n    goTo = path => {\r\n        this.props.history.push({\r\n            pathname: path\r\n        })\r\n    }\r\n   \r\n    \r\n    render() {\r\n        return <Tpl that={this} />\r\n    }\r\n}\r\nexport default App;\r\n"],"sourceRoot":""}