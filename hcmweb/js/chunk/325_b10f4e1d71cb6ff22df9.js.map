{"version":3,"sources":["webpack:///./app/widget/index/Service/DownloadProgress/main.js"],"names":["DownloadProgress","props","downLoads","setState","pageSize","pageNo","totalNum","data","state","pageNum","LoadingModal","bl","ajax","post","then","res","status","content","totalElements","pageNumber","loading","catch","error","statusText","changePagination","a","b","titButton","onPaginationSize","columns","title","render","record","index","shop_nick","display","width","float","down_url","parseInt","current_page","total_page","moment","start_time","format","end_time","ProductInformation_list","storeName","React","Component","create"],"mappings":"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","file":"js/chunk/325_b10f4e1d71cb6ff22df9.js","sourcesContent":["import Tpl from './tpl';\r\nimport { message,Progress, Form } from 'antd';\r\nimport ajax from '../../../../js/common/ajax';\r\nclass DownloadProgress extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const columns = [{\r\n            title: '序号',\r\n            render: (content, record, index) => (\r\n                <span key={index}>\r\n                    {index+1}\r\n                </span>\r\n            )\r\n        }, {\r\n            title: '旺旺名称',\r\n            render: (content, record, index) => (\r\n                <span key={index}>\r\n                {record.shop_nick}\r\n                </span>\r\n            )\r\n        }, {\r\n            title: '进度',\r\n            render: (content, record, index) => (\r\n                <span key={index} style={{display: \"inline-block\",width:\"100%\"}}>\r\n                    {\r\n                        record.status==\"已完成\" ?  <span  style={{display: \"inline-block\",width:\"100%\"}}><b>{record.status}</b><b style={{float:\"right\"}}><a href={`/hcm/search/redownLoad_search?filePath=${record.down_url}`}>立即下载</a></b></span> : \r\n                        record.status==\"进行中\" || record.status==\"开始下载\" ?  <Progress percent={parseInt(record.current_page/record.total_page*100)} size=\"small\" /> : \r\n                        record.status==\"失败\" ? <Progress percent={record.current_page/record.total_page*100} size=\"small\" status=\"exception\" /> : null \r\n                    }\r\n                    \r\n                </span>\r\n            )\r\n        }, {\r\n            title: '下载时间',\r\n            render: (content, record, index) => (\r\n                <span key={index}>\r\n                    {moment(record.start_time).format('YYYY-MM-DD HH:mm:ss')}\r\n                </span>\r\n            )\r\n        }, {\r\n            title: '下载预计完成时间',\r\n            render: (content, record, index) => (\r\n                <span key={index}>\r\n                    {moment(record.end_time).format('YYYY-MM-DD HH:mm:ss')}\r\n                </span>\r\n            )\r\n        }]\r\n        this.state = {\r\n            pageSize: 10,\r\n            pageNo: 1,\r\n            totalNum: 0,\r\n            loading: false,\r\n            data: [],\r\n            ProductInformation_list: columns,\r\n            storeName:\"\",\r\n            titButton:\"\"\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.DownloadProgress(this.state.pageNo,this.state.pageSize)\r\n        \r\n    }\r\n    downLoads=()=>{\r\n        this.setState({          \r\n            pageSize: 10,\r\n            pageNo: 1,\r\n            totalNum: 0,\r\n            data: []\r\n        },()=>{\r\n            this.DownloadProgress(this.state.pageNo,this.state.pageSize)\r\n        })\r\n        \r\n    }\r\n    DownloadProgress=(pageNum,pageSize)=>{\r\n        LoadingModal({bl:true})\r\n        ajax.post(\"/hcm/search/downLoadRecord_list\", {\r\n            pageNo:pageNum,\r\n            pageSize:pageSize\r\n        }).then((res) => {\r\n            if (res.data.status == 10000) {\r\n                if(res.data.data.content!=\"\" && res.data.data.content!=null){\r\n                    \r\n                        this.setState({\r\n                            data:res.data.data.content                    ,\r\n                            totalNum:res.data.data.totalElements,\r\n                            pageSize:res.data.data.pageSize,\r\n                            pageNo:res.data.data.pageNumber,\r\n                            loading: false\r\n                        })\r\n                        LoadingModal({bl:false})\r\n                   \r\n                }else{\r\n                    this.setState({\r\n                        loading: false,\r\n                        data:[]\r\n                    })\r\n                    LoadingModal({bl:false})\r\n                \r\n                     \r\n                }\r\n            }else{\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n                LoadingModal({bl:false})\r\n            }\r\n                \r\n        }).catch((error) => {\r\n            message.error(error.statusText);\r\n            this.setState({\r\n              loading: false,\r\n              data:[]\r\n            })\r\n            LoadingModal({bl:false})\r\n        })\r\n    \r\n    }\r\n\r\n    changePagination = (a,b) => {\r\n       \r\n        this.setState({\r\n            loading: true,\r\n            pageSize: b,\r\n            pageNo: a,\r\n            titButton:\"\"\r\n        },()=>{\r\n            this.DownloadProgress(this.state.pageNo,this.state.pageSize)\r\n        })\r\n    }\r\n    onPaginationSize = (a,b) => {\r\n        this.setState({\r\n            loading: true,\r\n            pageSize: b,\r\n            pageNo: a,\r\n            titButton:\"\"\r\n        },()=>{\r\n            this.DownloadProgress(this.state.pageNo,this.state.pageSize)\r\n        })\r\n        \r\n        \r\n    }\r\n    render() {\r\n        return <Tpl that={this} />\r\n    }\r\n}\r\nexport default Form.create()(DownloadProgress);\r\n"],"sourceRoot":""}