{"version":3,"sources":["webpack:///./app/widget/index/Dealers/ActivityInformation/main.js"],"names":["ActivityInformation","sevenActivity","state","dealer","props","switchActivity","date","index","type","activityObj","setState","selectedIndex","selectedDate","undefined","getActivityDayInfo","obj","method","url","data","campaign_node","ser_day","then","res","status","message","Object","assign","error","catch","dispatch","Date","str","getFullYear","String","getMonth","padStart","getDate","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;IAQMA,mB,WALL,yBAAQ;AAAA,WACL;AACIC,uBAAeC,MAAMC,MAAN,CAAaF;AADhC,KADK;AAAA,CAAR,C;;;AAMG,iCAAYG,KAAZ,EAAmB;AAAA;;AAAA,8IACTA,KADS;;AAAA,cAenBC,cAfmB,GAeF,UAACC,IAAD,EAAOC,KAAP,EAAcC,IAAd,EAAuB;AAAA,gBAC5BC,WAD4B,GACZ,MAAKP,KADO,CAC5BO,WAD4B;;AAEpC,kBAAKC,QAAL,CAAc;AACVC,+BAAeJ,KADL;AAEVK,8BAAcN;AAFJ,aAAd;AAIAG,wBAAYH,IAAZ,MAAsBO,SAAtB,IAAmC,MAAKC,kBAAL,CAAwB,EAACR,UAAD,EAAOE,UAAP,EAAxB,CAAnC;AACH,SAtBkB;;AAAA,cAwBnBM,kBAxBmB,GAwBE,UAACC,GAAD,EAAS;AAAA,gBAClBN,WADkB,GACF,MAAKP,KADH,CAClBO,WADkB;;AAE1B,gCAAM;AACFO,wBAAQ,MADN;AAEFC,qBAAK,0BAFH;AAGFC,sBAAM;AACFC,mCAAe,KADb;AAEFC,6BAASL,IAAIT,IAFX;AAGFE,0BAAMO,IAAIP;AAHR;AAHJ,aAAN,EAQGa,IARH,CAQQ,eAAO;AAAA,gCACuBC,IAAIJ,IAD3B;AAAA,oBACHA,IADG,aACHA,IADG;AAAA,oBACGK,MADH,aACGA,MADH;AAAA,oBACWC,OADX,aACWA,OADX;;AAEX,oBAAID,WAAW,OAAf,EAAwB;AACpB,0BAAKb,QAAL,CAAc;AACVD,qCAAagB,OAAOC,MAAP,CAAc,EAAd,EAAkBjB,WAAlB,sBACRM,IAAIT,IADI,EACGY,IADH,EADH;AAIVN,sCAAcG,IAAIT;AAJR,qBAAd;AAMH,iBAPD,MAOO;AACH,sCAAIqB,KAAJ,CAAUH,OAAV;AACH;AACJ,aApBD,EAoBGI,KApBH,CAoBS,eAAO;AACZ,kCAAID,KAAJ,CAAU,aAAV;AACH,aAtBD;AAuBH,SAjDkB;;AAEf,cAAKzB,KAAL,GAAa;AACTS,2BAAe,CADN;AAETF,yBAAa,EAFJ;AAGTG,0BAAc;AAHL,SAAb;AAFe;AAOlB;;;;6CACoB;AAAA,gBACTiB,QADS,GACI,KAAKzB,KADT,CACTyB,QADS;;AAEjBA,qBAAS,6BAAT;AACA,gBAAMvB,OAAO,IAAIwB,IAAJ,EAAb;AACA,gBAAMC,MAASzB,KAAK0B,WAAL,EAAT,SAA+BC,OAAO3B,KAAK4B,QAAL,KAAgB,CAAvB,EAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAA/B,SAA6EF,OAAO3B,KAAK8B,OAAL,EAAP,EAAuBD,QAAvB,CAAgC,CAAhC,EAAmC,GAAnC,CAAnF;AACA,iBAAKrB,kBAAL,CAAwB,EAACR,MAAMyB,GAAP,EAAYvB,MAAM,CAAlB,EAAxB;AACH;AASD;;;;iCA2BS;AACL,mBAAO,oBAAC,aAAD,IAAK,MAAM,IAAX,GAAP;AACH;;;;EArD6B6B,MAAMC,S;kBAwDzBtC,mB","file":"js/chunk/292_ed3ca35ed90c170a69b3.js","sourcesContent":["import { connect } from 'react-redux'\r\nimport { getDealerSeven } from '../../../../js/actions/dealer'\r\nimport Tpl from './tpl'\r\nimport axios from '../../../../js/common/ajax'\r\nimport { message as Msg } from 'antd'\r\n\r\n@connect(state => (\r\n    {\r\n        sevenActivity: state.dealer.sevenActivity\r\n    }\r\n))\r\nclass ActivityInformation extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedIndex: 0,\r\n            activityObj: {},\r\n            selectedDate: ''\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        const { dispatch } = this.props\r\n        dispatch(getDealerSeven())\r\n        const date = new Date()\r\n        const str = `${date.getFullYear()}-${String(date.getMonth()+1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\r\n        this.getActivityDayInfo({date: str, type: 1})\r\n    }\r\n    switchActivity = (date, index, type) => {\r\n        const { activityObj } = this.state\r\n        this.setState({\r\n            selectedIndex: index,\r\n            selectedDate: date\r\n        })\r\n        activityObj[date] === undefined && this.getActivityDayInfo({date, type})\r\n    }\r\n    // 查询活动日程信息\r\n    getActivityDayInfo = (obj) => {\r\n        const { activityObj } = this.state\r\n        axios({\r\n            method: 'post',\r\n            url: '/hcm/campgign/ScheduleMy',\r\n            data: {\r\n                campaign_node: '已审核',\r\n                ser_day: obj.date,\r\n                type: obj.type\r\n            }\r\n        }).then(res => {\r\n            const { data, status, message } = res.data\r\n            if (status === '10000') {\r\n                this.setState({\r\n                    activityObj: Object.assign({}, activityObj, {\r\n                        [obj.date]: data\r\n                    }),\r\n                    selectedDate: obj.date\r\n                })\r\n            } else {\r\n                Msg.error(message)\r\n            }\r\n        }).catch(err => {\r\n            Msg.error('网络异常，请稍后再试！')\r\n        })\r\n    }\r\n    render() {\r\n        return <Tpl that={this} />\r\n    }\r\n}\r\n\r\nexport default ActivityInformation"],"sourceRoot":""}