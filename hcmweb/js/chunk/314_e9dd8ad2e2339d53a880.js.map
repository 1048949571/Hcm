{"version":3,"sources":["webpack:///./app/js/common/crypto.js","webpack:///./app/widget/index/Modify/ModifyPassword/main.js"],"names":["CryptoJS","require","Encrypt","word","key","enc","Utf8","parse","srcs","encrypted","AES","encrypt","mode","ECB","padding","pad","Pkcs7","toString","Decrypt","decrypt","stringify","ModifyPassword","props","HistoryGo","window","history","go","DidMountText","console","log","match","params","type","ajax","post","then","res","setState","userName","username","BJBtn","visible","confirmLoading","Trim","str","replace","ForgetSubmit","e","preventDefault","form","validateFields","err","values","pwd","undefined","pwds","forgetxs","titlesx","length","crypto","oldpwd","data","status","error","message","onBlur","number","RegExp","regEn","test","AqPercentSum","forgetmmClock","AqPercentx","state","shows","React","Component","create"],"mappings":"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","file":"js/chunk/314_e9dd8ad2e2339d53a880.js","sourcesContent":["var CryptoJS = require(\"crypto-js\");\r\nexport default {\r\n    Encrypt(word){\r\n        var key = CryptoJS.enc.Utf8.parse(\"hcmabcdefghijklm\");\r\n        var srcs = CryptoJS.enc.Utf8.parse(word);\r\n        var encrypted = CryptoJS.AES.encrypt(srcs, key, { mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7 });\r\n        return encrypted.toString();\r\n    },\r\n    Decrypt(word){\r\n        var key = CryptoJS.enc.Utf8.parse(\"hcmabcdefghijklm\");\r\n        var decrypt = CryptoJS.AES.decrypt(word, key, { mode: CryptoJS.mode.ECB, padding: CryptoJS.pad.Pkcs7 });\r\n        return CryptoJS.enc.Utf8.stringify(decrypt).toString();\r\n    }\r\n}\r\n","import Tpl from './tpl';\r\nimport ajax from '../../../../js/common/ajax'\r\nimport { Form, message } from 'antd';\r\nimport crypto from '../../../../js/common/crypto';\r\n\r\nclass ModifyPassword extends React.Component {\r\n    constructor(props) {\r\n        // document.title = '修改密码';\r\n        super(props)\r\n        this.state = {\r\n            forgetxs: false,//输入错误提示\r\n            shows: true,\r\n            AqPercentSum: 30,\r\n            forgetmmClock: \"red\",\r\n            AqPercentx: \"弱\",\r\n            userName:\"\"\r\n        }\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.DidMountText()\r\n    }\r\n    HistoryGo = () => {\r\n        window.history.go(-1)\r\n    }\r\n    DidMountText = () => {\r\n        console.log(this.props.match.params.type)\r\n        //const {dispatch}=this.props\r\n        ajax.post('/hcm/userin/getByUserId')\r\n        .then((res) => {\r\n            console.log(res)\r\n            this.setState({\r\n                userName: res.username\r\n            })\r\n            //dispatch(getNavList(this.state.userName))\r\n        })\r\n    }\r\n    BJBtn = () => {\r\n        this.setState({\r\n            visible: true,\r\n            confirmLoading: true\r\n        })\r\n    }\r\n    Trim = (str) => {\r\n\r\n        return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\r\n    }\r\n    ForgetSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            console.log(values)\r\n            if (values.pwd != \"\" && values.pwd != undefined) {\r\n                if (values.pwd != values.pwds) {\r\n                    this.setState({\r\n                        forgetxs: true,\r\n                        titlesx: \"两次输入的密码不同，请重新输入。\"\r\n                    })\r\n                } else {\r\n                    if(this.Trim(values.pwd).length>=6 && this.Trim(values.pwd).length<=16){\r\n                        this.setState({\r\n                            forgetxs: false\r\n                        })\r\n                        ajax.post('/hcm/user/updatePassword', {\r\n                            \"username\": this.props.match.params.type,\r\n                            \"password\": crypto.Encrypt(this.Trim(values.pwd)),\r\n                            \"oldPassword\": crypto.Encrypt(this.Trim(values.oldpwd))\r\n                        }).then((res) => {\r\n                            console.log(res)\r\n                            if (res.data.status == 10000) {\r\n                                //message.success(\"修改成功\")\r\n                                window.history.go(-1)\r\n                                \r\n                               \r\n                            }else{\r\n                                message.error(res.data.message)\r\n                                \r\n                            }\r\n                        })\r\n                    }else{\r\n                        message.error(\"密码必须在6-16位之间！\")\r\n                    }\r\n                    \r\n\r\n                }\r\n            } else {\r\n                this.setState({\r\n                    forgetxs: true,\r\n                    titlesx: \"密码不能为空。\"\r\n                })\r\n            }\r\n        })\r\n    }\r\n    onBlur = () => {\r\n        this.props.form.validateFields((err, values) => {\r\n            // console.log(values)\r\n            let number = new RegExp(\"^[0-9]*$\");\r\n            let regEn = new RegExp(\"^[~!@#$%^&*()_+<>?:{},.\\/;'[\\]]*$\")\r\n            if (values.pwd != undefined && values.pwd.length >= 6 && values.pwd != \"\") {\r\n                console.log(1)\r\n                if (number.test(values.pwd) || new RegExp(\"^\\w*$\").test(values.pwd) || regEn.test(values.pwd)) {\r\n                    console.log(values.pwd)\r\n                    this.setState({\r\n                        AqPercentSum: 30,\r\n                        forgetmmClock: \"red\",\r\n                        AqPercentx: \"弱\"\r\n                    });\r\n                } else if (number.test(values.pwd) && regEn.test(values.pwd)) {\r\n                    this.setState({\r\n                        AqPercentSum: 60,\r\n                        forgetmmClock: \"yellow\",\r\n                        AqPercentx: \"中\"\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        AqPercentSum: 100,\r\n                        forgetmmClock: \"green\",\r\n                        AqPercentx: \"强\"\r\n                    });\r\n                }\r\n            } else {\r\n\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return <Tpl that={this} />\r\n    }\r\n}\r\nexport default Form.create()(ModifyPassword)"],"sourceRoot":""}