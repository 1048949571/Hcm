{"version":3,"sources":["webpack:///./app/widget/index/Brand/CustomFields/main.js"],"names":["CustomFields","props","remove","k","form","keys","getFieldValue","console","log","length","filter","key","setFieldsValue","add","nextKeys","concat","state","uuid","handleSubmit","e","preventDefault","validateFields","err","values","NewJ","resetFields","getFieldsValue","setState","visible","confirmLoading","type","FORMtitHides","FieldName","FieldOccupancy","FieldType","Edit","index","opotion","undefined","bBRRay","split","names","fieldtype","ajson","Editvisible","fieldname","prompt","Bmcid","id","DeleteBtn","ajax","post","module","then","res","fetch","onChangeValue","target","value","arr","push","removeDuplicatedItem","str","ar2","array","Array","j","i","toString","match","RegExp","sort","ForgetSubmit","aaw","map","v","join","fieldClassify","data","status","error","message","bmcid","handleOk","handleCancel","changePagination","current","pageSize","pageNo","onPaginationSize","size","handleTableChange","pagination","filters","sorter","pager","results","page","sortField","field","sortOrder","order","handleChange","AddField","FieldTypesA","FieldTypes","DeleteInp","lists","splice","params","loading","totalNum","columns","title","dataIndex","width","render","text","item","record","bind","verticalAlign","paddingRight","CustomFields_list","FieldNameValue","FieldOccupancyValue","React","Component","create"],"mappings":"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","file":"js/chunk/247_b9e75d919e9140f619a4.js","sourcesContent":["import Tpl from './tpl';\r\nimport ajax from '../../../../js/common/ajax'\r\nimport { Form, Input, message } from 'antd';\r\nclass CustomFields extends React.Component {\r\n    constructor(props) {\r\n        // document.title = '自定义字段';\r\n        super(props)\r\n\r\n        const columns = [{\r\n            title: '序号',\r\n            dataIndex: 'index',\r\n            width: '10%',\r\n            render: (text, item, index) => index + 1\r\n        }, {\r\n            title: '字段名称',\r\n            dataIndex: 'fieldname',\r\n            width: '30%',\r\n        }, {\r\n            title: '字段类型',\r\n            dataIndex: '',\r\n            width: '40%',\r\n            render: (text, record, index) => (\r\n                <span>\r\n                    {\r\n                        text.fieldtype == \"TEXT\" ? <span>文本框</span>\r\n                            : text.fieldtype == \"Single\" ? <span>文本域</span>\r\n                                : text.fieldtype == \"SINGLESELECT\" ? <span>单选下拉框</span>\r\n                                    : text.fieldtype == \"MULTISELECT\" ? <span>多选下拉框</span>\r\n                                        : null\r\n                    }\r\n                </span>\r\n            )\r\n        }, {\r\n            title: '操作',\r\n            dataIndex: '',\r\n            width: '20%',\r\n            render: (text, record, index) => (\r\n                <span>\r\n\r\n                    <a  className=\"BJ\" onClick={this.Edit.bind(this, text)}>\r\n                        <img style={{ verticalAlign: 'text-bottom', paddingRight: '4px' }} src='../../../img/icon/icon_operating_edit.png' />\r\n\r\n                        编辑</a>\r\n\r\n                    <a onClick={this.DeleteBtn.bind(this, text)}>\r\n                        <img style={{ verticalAlign: 'text-bottom', paddingRight: '4px' }} src='../../../img/icon/icon_operating_del.png' />\r\n\r\n                        删除</a>\r\n                </span>\r\n            )\r\n        }];\r\n        this.state = {\r\n            CustomFields_list: columns,\r\n            data: [],\r\n            type: \"新增\",\r\n            pagination: {},\r\n            loading: false,\r\n            pageNo: 1,\r\n            pageSize: 10,\r\n            totalNum: \"\",\r\n            visible: false,//新增弹框\r\n            Editvisible: false,//编辑弹框\r\n            confirmLoading: false,\r\n            FORMtitHides: false,\r\n            FieldNameValue: \"\",\r\n            Bmcid: \"\",//品牌商ID 判断编辑保存\r\n            FieldName: \"\",//字段名称\r\n            FieldOccupancy: \"\",//字段占位\r\n            FieldType: \"\",//字段类型\r\n            FieldOccupancyValue: \"\",\r\n            onChangeValue: [],\r\n            uuid: 0,\r\n            id: \"\",\r\n            arr: [],\r\n            ajson: \"\",\r\n            bBRRay: []\r\n\r\n        }\r\n\r\n    }\r\n    remove = (k) => {\r\n        const { form } = this.props;\r\n        // can use data-binding to get\r\n        const keys = form.getFieldValue('keys');\r\n        console.log(keys)\r\n        // We need at least one passenger\r\n        if (keys.length === 1) {\r\n            return;\r\n        }\r\n\r\n        // can use data-binding to set\r\n        console.log(keys.filter(key => key !== k))\r\n        form.setFieldsValue({\r\n            keys: keys.filter(key => key !== k),\r\n        });\r\n    }\r\n\r\n    add = () => {\r\n\r\n\r\n        //console.log(this.state.uuid,\"1\")\r\n        const { form } = this.props;\r\n        const keys = form.getFieldValue('keys');\r\n        console.log(keys)\r\n        const nextKeys = keys.concat(this.state.uuid);\r\n        this.state.uuid++;\r\n        form.setFieldsValue({\r\n            keys: nextKeys\r\n        });\r\n        \r\n\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        this.fetch();\r\n\r\n    }\r\n    NewJ = () => {//新增\r\n        const { form: { resetFields, getFieldsValue } } = this.props\r\n        const { form } = this.props;\r\n        const keys = form.getFieldValue('keys');\r\n        console.log(keys)\r\n        const nextKeys = keys.concat([]);\r\n        console.log(nextKeys)\r\n        form.setFieldsValue({\r\n            keys: nextKeys,\r\n        });\r\n        //console.log(this.props)\r\n        resetFields()\r\n        this.setState({\r\n            visible: true,\r\n            uuid: 0,\r\n            confirmLoading: true,\r\n            type: \"新增\",\r\n            FORMtitHides: false,\r\n            FieldName: \"\",//字段名称\r\n            FieldOccupancy: \"\",//字段占位\r\n            FieldType: \"请选择\"//字段类型\r\n        });\r\n    }\r\n    Edit = (index) => {//编辑\r\n        //  console.log(index)\r\n        const { form } = this.props;\r\n        if (index.opotion != undefined && index.opotion != \"\" && index.opotion != null) {\r\n            this.setState({\r\n                bBRRay: index.opotion.split(\",\"),\r\n                uuid: index.opotion.split(\",\").length\r\n            }, () => {\r\n                form.setFieldsValue({\r\n                    names: this.state.bBRRay\r\n                });\r\n            })\r\n        }\r\n\r\n        const { form: { resetFields, getFieldsValue } } = this.props\r\n        //console.log(this.props)\r\n        resetFields()\r\n        if (index.fieldtype == \"TEXT\" || index.fieldtype == \"文本框\") {\r\n            this.setState({\r\n                FieldType: \"文本框\",//字段类型\r\n\r\n                FORMtitHides: false\r\n            });\r\n        } else if (index.fieldtype == \"Single\" || index.fieldtype == \"文本域\") {\r\n            this.setState({\r\n                FieldType: \"文本域\",//字段类型\r\n\r\n                FORMtitHides: false\r\n            });\r\n        } else if (index.fieldtype == \"SINGLESELECT\" || index.fieldtype == \"单选下拉框\") {\r\n            this.setState({\r\n                FieldType: \"单选下拉框\",//字段类型，\r\n                FORMtitHides: true,\r\n                ajson: index.opotion\r\n            });\r\n        } else if (index.fieldtype == \"MULTISELECT\" || index.fieldtype == \"多选下拉框\") {\r\n            this.setState({\r\n                FieldType: \"多选下拉框\",//字段类型\r\n                FORMtitHides: true,\r\n                ajson: index.opotion\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            visible: true,\r\n            Editvisible: true,\r\n            type: \"编辑\",\r\n            FieldName: index.fieldname,//字段名称\r\n            FieldOccupancy: index.prompt,//字段占位\r\n            Bmcid: index.id\r\n        });\r\n\r\n    }\r\n\r\n    DeleteBtn = (index) => { //删除列表\r\n        //console.log(index)\r\n        ajax.post('/hcm/hcmCustomModel/delete', {\r\n            id: index.id,\r\n            module: 'DEALER'\r\n        }).then((res) => {\r\n            //console.log(res)\r\n            this.fetch();\r\n        })\r\n    }\r\n    onChangeValue = (e) => {\r\n        console.log(e.target.value)\r\n        const arr = []\r\n        arr.push(e.target.value)\r\n        this.setState({\r\n            onChangeValue: arr\r\n        })\r\n\r\n    }\r\n    removeDuplicatedItem = (str) => {\r\n        var ar2 = str.split(\",\");\r\n        var array = new Array();\r\n        var j = 0\r\n        for (var i = 0; i < ar2.length; i++) {\r\n            if ((array == \"\" || array.toString().match(new RegExp(ar2[i], \"g\")) == null) && ar2[i] != \"\") {\r\n                array[j] = ar2[i];\r\n                array.sort();\r\n                j++;\r\n            }\r\n        }\r\n        return array.toString();\r\n    }\r\n    ForgetSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            console.log(values, \"123\")\r\n            const { FieldName, FieldOccupancy, FieldType, ...aaw } = values\r\n\r\n            if (!err) {\r\n                console.log(this.state.onChangeValue)\r\n                if (this.state.confirmLoading == true) {\r\n                    if (values.FieldName != undefined && values.FieldName != \"\") {\r\n                        if (values.FieldName.length <= 6) {\r\n                            if (values.FieldType != \"请选择\" && values.FieldType != \"\") {\r\n                                if (this.state.FORMtitHides == true) {\r\n                                    if (values.keys.length != 0) {\r\n                                        console.log(this.removeDuplicatedItem(values.keys.map((e, v) => {\r\n                                            return aaw.names[e]\r\n                                        }).join(',')))\r\n                                        ajax.post('/hcm/hcmCustomModel/save', {\r\n                                            fieldClassify: \"add\",\r\n                                            fieldname: values.FieldName,\r\n                                            fieldtype: values.FieldType,\r\n                                            opotion: this.removeDuplicatedItem(values.keys.map((e, v) => {\r\n                                                return aaw.names[e]\r\n                                            }).join(',')),\r\n                                            prompt: values.FieldOccupancy,\r\n                                            module: \"DEALER\"\r\n                                        }).then((res) => {\r\n                                            if (res.data.status == 10000) {\r\n                                                this.setState({\r\n                                                    visible: false,\r\n                                                    confirmLoading: false,\r\n                                                    Editvisible: false,\r\n                                                    bBRRay: [],\r\n                                                    uuid: 0\r\n                                                });\r\n                                                this.fetch();\r\n                                            } else {\r\n                                                message.error(res.data.message)\r\n                                            }\r\n\r\n                                        })\r\n                                    } else {\r\n                                        message.error(\"请填写字段类型！\")\r\n\r\n                                    }\r\n\r\n                                } else {\r\n                                    ajax.post('/hcm/hcmCustomModel/save', {\r\n                                        fieldClassify: \"add\",\r\n                                        fieldname: values.FieldName,\r\n                                        fieldtype: values.FieldType,\r\n                                        opotion: [],\r\n                                        prompt: values.FieldOccupancy,\r\n                                        module: \"DEALER\"\r\n                                    }).then((res) => {\r\n\r\n                                        if (res.data.status == 10000) {\r\n                                            this.setState({\r\n                                                visible: false,\r\n                                                confirmLoading: false,\r\n                                                Editvisible: false,\r\n                                                bBRRay: [],\r\n                                                uuid: 0\r\n                                            });\r\n                                            this.fetch();\r\n                                        } else {\r\n                                            message.error(res.data.message)\r\n                                        }\r\n                                    })\r\n                                }\r\n\r\n\r\n                            } else {\r\n                                message.error(\"请选择字段类型！\")\r\n                            }\r\n                        } else {\r\n                            message.error(\"请输入6个字以内！\")\r\n                        }\r\n\r\n                    } else {\r\n                        message.error(\"请输入字段名称！\")\r\n                    }\r\n\r\n                } else if (this.state.Editvisible == true) {\r\n                    if (this.state.Bmcid != \"\") {\r\n                        if (values.FieldName != undefined && values.FieldName != \"\") {\r\n                            if (values.FieldName.length <= 6) {\r\n                                if (values.FieldType != \"请选择\" && values.FieldType != \"\") {\r\n\r\n                                    if (this.state.FieldType == \"文本框\") {\r\n                                        if (this.state.FORMtitHides == true) {\r\n\r\n                                            if (values.keys.length != 0) {\r\n\r\n                                                ajax.post('/hcm/hcmCustomModel/save', {\r\n                                                    id: this.state.Bmcid,\r\n                                                    fieldname: values.FieldName,\r\n                                                    fieldtype: \"TEXT\",\r\n                                                    opotion: this.removeDuplicatedItem(values.keys.map((e, v) => {\r\n                                                        return aaw.names[e]\r\n                                                    }).join(',')),\r\n                                                    prompt: values.FieldOccupancy,\r\n                                                    module: \"DEALER\"\r\n                                                }).then((res) => {\r\n                                                    if (res.data.status == 10000) {\r\n                                                        this.setState({\r\n                                                            visible: false,\r\n                                                            confirmLoading: false,\r\n                                                            Editvisible: false,\r\n                                                            bBRRay: [],\r\n                                                            uuid: 0\r\n                                                        });\r\n                                                        const { form: { resetFields, getFieldsValue } } = this.props\r\n\r\n                                                        resetFields()\r\n                                                        this.fetch();\r\n\r\n                                                    } else {\r\n                                                        message.error(res.data.message)\r\n                                                    }\r\n\r\n\r\n\r\n                                                })\r\n                                            } else {\r\n                                                ajax.post('/hcm/hcmCustomModel/save', {\r\n                                                    bmcid: \"1\",//品牌商ID\r\n                                                    id: this.state.Bmcid,\r\n                                                    fieldname: values.FieldName,\r\n                                                    fieldtype: \"TEXT\",\r\n                                                    opotion: this.state.ajson,\r\n                                                    prompt: values.FieldOccupancy,\r\n                                                    module: \"DEALER\"\r\n                                                }).then((res) => {\r\n                                                    if (res.data.status == 10000) {\r\n                                                        this.setState({\r\n                                                            visible: false,\r\n                                                            confirmLoading: false,\r\n                                                            Editvisible: false,\r\n                                                            bBRRay: [],\r\n                                                            uuid: 0\r\n                                                        });\r\n                                                        const { form: { resetFields, getFieldsValue } } = this.props\r\n                                                        //console.log(this.props)\r\n                                                        resetFields()\r\n                                                        this.fetch();\r\n\r\n                                                    } else {\r\n                                                        message.error(res.data.message)\r\n                                                    }\r\n\r\n\r\n\r\n                                                })\r\n                                            }\r\n\r\n                                        } else {\r\n                                            ajax.post('/hcm/hcmCustomModel/save', {\r\n                                                id: this.state.Bmcid,\r\n                                                fieldname: values.FieldName,\r\n                                                fieldtype: \"TEXT\",\r\n                                                opotion: [],\r\n                                                prompt: values.FieldOccupancy,\r\n                                                module: \"DEALER\"\r\n                                            }).then((res) => {\r\n\r\n                                                if (res.data.status == 10000) {\r\n                                                    this.setState({\r\n                                                        visible: false,\r\n                                                        confirmLoading: false,\r\n                                                        Editvisible: false,\r\n                                                        bBRRay: [],\r\n                                                        uuid: 0\r\n                                                    });\r\n                                                    const { form: { resetFields, getFieldsValue } } = this.props\r\n                                                    //console.log(this.props)\r\n                                                    resetFields()\r\n                                                    this.fetch();\r\n                                                } else {\r\n                                                    message.error(res.data.message)\r\n                                                }\r\n\r\n\r\n                                            })\r\n                                        }\r\n                                    } else if (this.state.FieldType == \"文本域\") {\r\n                                        if (this.state.FORMtitHides == true) {\r\n\r\n                                            if (values.keys.length != 0) {\r\n\r\n                                                ajax.post('/hcm/hcmCustomModel/save', {\r\n                                                    id: this.state.Bmcid,\r\n                                                    fieldname: values.FieldName,\r\n                                                    fieldtype: \"Single\",\r\n                                                    opotion: this.removeDuplicatedItem(values.keys.map((e, v) => {\r\n                                                        return aaw.names[e]\r\n                                                    }).join(',')),\r\n                                                    prompt: values.FieldOccupancy,\r\n                                                    module: \"DEALER\"\r\n                                                }).then((res) => {\r\n                                                    if (res.data.status == 10000) {\r\n                                                        this.setState({\r\n                                                            visible: false,\r\n                                                            confirmLoading: false,\r\n                                                            Editvisible: false,\r\n                                                            bBRRay: [],\r\n                                                            uuid: 0\r\n                                                        });\r\n                                                        const { form: { resetFields, getFieldsValue } } = this.props\r\n\r\n                                                        resetFields()\r\n                                                        this.fetch();\r\n\r\n                                                    } else {\r\n                                                        message.error(res.data.message)\r\n                                                    }\r\n\r\n\r\n\r\n                                                })\r\n                                            } else {\r\n                                                ajax.post('/hcm/hcmCustomModel/save', {\r\n                                                    bmcid: \"1\",//品牌商ID\r\n                                                    id: this.state.Bmcid,\r\n                                                    fieldname: values.FieldName,\r\n                                                    fieldtype: \"Single\",\r\n                                                    opotion: this.state.ajson,\r\n                                                    prompt: values.FieldOccupancy,\r\n                                                    module: \"DEALER\"\r\n                                                }).then((res) => {\r\n                                                    if (res.data.status == 10000) {\r\n                                                        this.setState({\r\n                                                            visible: false,\r\n                                                            confirmLoading: false,\r\n                                                            Editvisible: false,\r\n                                                            bBRRay: [],\r\n                                                            uuid: 0\r\n                                                        });\r\n                                                        const { form: { resetFields, getFieldsValue } } = this.props\r\n                                                        //console.log(this.props)\r\n                                                        resetFields()\r\n                                                        this.fetch();\r\n\r\n                                                    } else {\r\n                                                        message.error(res.data.message)\r\n                                                    }\r\n\r\n\r\n\r\n                                                })\r\n                                            }\r\n\r\n                                        } else {\r\n                                            ajax.post('/hcm/hcmCustomModel/save', {\r\n                                                id: this.state.Bmcid,\r\n                                                fieldname: values.FieldName,\r\n                                                fieldtype: \"Single\",\r\n                                                opotion: [],\r\n                                                prompt: values.FieldOccupancy,\r\n                                                module: \"DEALER\"\r\n                                            }).then((res) => {\r\n\r\n                                                if (res.data.status == 10000) {\r\n                                                    this.setState({\r\n                                                        visible: false,\r\n                                                        confirmLoading: false,\r\n                                                        Editvisible: false,\r\n                                                        bBRRay: [],\r\n                                                        uuid: 0\r\n                                                    });\r\n                                                    const { form: { resetFields, getFieldsValue } } = this.props\r\n                                                    //console.log(this.props)\r\n                                                    resetFields()\r\n                                                    this.fetch();\r\n                                                } else {\r\n                                                    message.error(res.data.message)\r\n                                                }\r\n\r\n\r\n                                            })\r\n                                        }\r\n                                    } else if (this.state.FieldType == \"单选下拉框\") {\r\n                                        if (this.state.FORMtitHides == true) {\r\n\r\n                                            if (values.keys.length != 0) {\r\n\r\n                                                ajax.post('/hcm/hcmCustomModel/save', {\r\n                                                    id: this.state.Bmcid,\r\n                                                    fieldname: values.FieldName,\r\n                                                    fieldtype: \"SINGLESELECT\",\r\n                                                    opotion: this.removeDuplicatedItem(values.keys.map((e, v) => {\r\n                                                        return aaw.names[e]\r\n                                                    }).join(',')),\r\n                                                    prompt: values.FieldOccupancy,\r\n                                                    module: \"DEALER\"\r\n                                                }).then((res) => {\r\n                                                    if (res.data.status == 10000) {\r\n                                                        this.setState({\r\n                                                            visible: false,\r\n                                                            confirmLoading: false,\r\n                                                            Editvisible: false,\r\n                                                            bBRRay: [],\r\n                                                            uuid: 0\r\n                                                        });\r\n                                                        const { form: { resetFields, getFieldsValue } } = this.props\r\n\r\n                                                        resetFields()\r\n                                                        this.fetch();\r\n\r\n                                                    } else {\r\n                                                        message.error(res.data.message)\r\n                                                    }\r\n\r\n\r\n\r\n                                                })\r\n                                            } else {\r\n                                                ajax.post('/hcm/hcmCustomModel/save', {\r\n                                                    bmcid: \"1\",//品牌商ID\r\n                                                    id: this.state.Bmcid,\r\n                                                    fieldname: values.FieldName,\r\n                                                    fieldtype: \"SINGLESELECT\",\r\n                                                    opotion: this.state.ajson,\r\n                                                    prompt: values.FieldOccupancy,\r\n                                                    module: \"DEALER\"\r\n                                                }).then((res) => {\r\n                                                    if (res.data.status == 10000) {\r\n                                                        this.setState({\r\n                                                            visible: false,\r\n                                                            confirmLoading: false,\r\n                                                            Editvisible: false,\r\n                                                            bBRRay: [],\r\n                                                            uuid: 0\r\n                                                        });\r\n                                                        const { form: { resetFields, getFieldsValue } } = this.props\r\n                                                        //console.log(this.props)\r\n                                                        resetFields()\r\n                                                        this.fetch();\r\n\r\n                                                    } else {\r\n                                                        message.error(res.data.message)\r\n                                                    }\r\n\r\n\r\n\r\n                                                })\r\n                                            }\r\n\r\n                                        } else {\r\n                                            ajax.post('/hcm/hcmCustomModel/save', {\r\n                                                id: this.state.Bmcid,\r\n                                                fieldname: values.FieldName,\r\n                                                fieldtype: \"SINGLESELECT\",\r\n                                                opotion: [],\r\n                                                prompt: values.FieldOccupancy,\r\n                                                module: \"DEALER\"\r\n                                            }).then((res) => {\r\n\r\n                                                if (res.data.status == 10000) {\r\n                                                    this.setState({\r\n                                                        visible: false,\r\n                                                        confirmLoading: false,\r\n                                                        Editvisible: false,\r\n                                                        bBRRay: [],\r\n                                                        uuid: 0\r\n                                                    });\r\n                                                    const { form: { resetFields, getFieldsValue } } = this.props\r\n                                                    //console.log(this.props)\r\n                                                    resetFields()\r\n                                                    this.fetch();\r\n                                                } else {\r\n                                                    message.error(res.data.message)\r\n                                                }\r\n\r\n\r\n                                            })\r\n                                        }\r\n                                    } else if (this.state.FieldType == \"多选下拉框\") {\r\n                                        if (this.state.FORMtitHides == true) {\r\n\r\n                                            if (values.keys.length != 0) {\r\n\r\n                                                ajax.post('/hcm/hcmCustomModel/save', {\r\n                                                    id: this.state.Bmcid,\r\n                                                    fieldname: values.FieldName,\r\n                                                    fieldtype: \"MULTISELECT\",\r\n                                                    opotion: this.removeDuplicatedItem(values.keys.map((e, v) => {\r\n                                                        return aaw.names[e]\r\n                                                    }).join(',')),\r\n                                                    prompt: values.FieldOccupancy,\r\n                                                    module: \"DEALER\"\r\n                                                }).then((res) => {\r\n                                                    if (res.data.status == 10000) {\r\n                                                        this.setState({\r\n                                                            visible: false,\r\n                                                            confirmLoading: false,\r\n                                                            Editvisible: false,\r\n                                                            bBRRay: [],\r\n                                                            uuid: 0\r\n                                                        });\r\n                                                        const { form: { resetFields, getFieldsValue } } = this.props\r\n\r\n                                                        resetFields()\r\n                                                        this.fetch();\r\n\r\n                                                    } else {\r\n                                                        message.error(res.data.message)\r\n                                                    }\r\n\r\n\r\n\r\n                                                })\r\n                                            } else {\r\n                                                ajax.post('/hcm/hcmCustomModel/save', {\r\n                                                    bmcid: \"1\",//品牌商ID\r\n                                                    id: this.state.Bmcid, \r\n                                                    fieldname: values.FieldName,\r\n                                                    fieldtype: \"MULTISELECT\",\r\n                                                    opotion: this.state.ajson,\r\n                                                    prompt: values.FieldOccupancy,\r\n                                                    module: \"DEALER\"\r\n                                                }).then((res) => {\r\n                                                    if (res.data.status == 10000) {\r\n                                                        this.setState({\r\n                                                            visible: false,\r\n                                                            confirmLoading: false,\r\n                                                            Editvisible: false,\r\n                                                            bBRRay: [],\r\n                                                            uuid: 0\r\n                                                        });\r\n                                                        const { form: { resetFields, getFieldsValue } } = this.props\r\n                                                        //console.log(this.props)\r\n                                                        resetFields()\r\n                                                        this.fetch();\r\n\r\n                                                    } else {\r\n                                                        message.error(res.data.message)\r\n                                                    }\r\n\r\n\r\n\r\n                                                })\r\n                                            }\r\n\r\n                                        } else {\r\n                                            ajax.post('/hcm/hcmCustomModel/save', {\r\n                                                id: this.state.Bmcid,\r\n                                                fieldname: values.FieldName,\r\n                                                fieldtype: \"MULTISELECT\",\r\n                                                opotion: [],\r\n                                                prompt: values.FieldOccupancy,\r\n                                                module: \"DEALER\"\r\n                                            }).then((res) => {\r\n\r\n                                                if (res.data.status == 10000) {\r\n                                                    this.setState({\r\n                                                        visible: false,\r\n                                                        confirmLoading: false,\r\n                                                        Editvisible: false,\r\n                                                        bBRRay: [],\r\n                                                        uuid: 0\r\n                                                    });\r\n                                                    const { form: { resetFields, getFieldsValue } } = this.props\r\n                                                    //console.log(this.props)\r\n                                                    resetFields()\r\n                                                    this.fetch();\r\n                                                } else {\r\n                                                    message.error(res.data.message)\r\n                                                }\r\n\r\n\r\n                                            })\r\n                                        }\r\n                                    }\r\n\r\n\r\n                                } else {\r\n                                    message.error(\"请选择字段类型！\")\r\n                                }\r\n                            } else {\r\n                                message.error(\"请输入6个字以内！\")\r\n                            }\r\n\r\n                        } else {\r\n                            message.error(\"请输入字段名称！\")\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n    handleOk = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            console.log(values)\r\n        })\r\n    }\r\n    handleCancel = () => {\r\n\r\n        this.setState({\r\n            visible: false,\r\n            confirmLoading: false,\r\n            Editvisible: false,\r\n            bBRRay: [],\r\n            uuid: 0\r\n        });\r\n    }\r\n    changePagination = (current, pageSize) => {\r\n        console.log(current, pageSize);\r\n        ajax.post('/hcm/hcmCustomModel/getPagination', {\r\n            module: \"DEALER\",\r\n            pageNo: current,\r\n            pageSize: pageSize,\r\n        }).then((res) => {\r\n            console.log(res)\r\n            if (res.data.status == 10000) {\r\n                this.fetch();\r\n                this.setState({\r\n                    pageNo: current\r\n                })\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n    onPaginationSize = (current, size) => {\r\n        console.log(size)\r\n        ajax.post('/hcm/hcmCustomModel/getPagination', {\r\n            module: \"DEALER\",\r\n            pageNo: current,\r\n            pageSize: size,\r\n        }).then((res) => {\r\n            console.log(res, \"123312\")\r\n            if (res.data.status == 10000) {\r\n                this.fetch();\r\n                this.setState({\r\n                    pageNo: current,\r\n                    pageSize: size\r\n                })\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n    handleTableChange = (pagination, filters, sorter) => {\r\n        console.log(pagination, filters, sorter)\r\n        const pager = { ...this.state.pagination };\r\n        pager.current = pagination.current;\r\n        this.setState({\r\n            pagination: pager,\r\n        });\r\n        this.fetch({\r\n            results: pagination.pageSize,\r\n            page: pagination.current,\r\n            sortField: sorter.field,\r\n            sortOrder: sorter.order,\r\n            ...filters,\r\n        });\r\n    }\r\n    handleChange = (value) => { //字段类型\r\n        if (value == \"SINGLESELECT\" || value == \"MULTISELECT\" || value == \"单选下拉框\" || value == \"多选下拉框\") {\r\n            this.setState({\r\n                FORMtitHides: true\r\n            });\r\n            if (value == \"SINGLESELECT\") {\r\n                this.setState({\r\n                    FieldType: \"单选下拉框\"\r\n                })\r\n            } else if (value == \"TEXT\") {\r\n                this.setState({\r\n                    FieldType: \"文本框\"\r\n                })\r\n            } else if (value == \"Single\") {\r\n                this.setState({\r\n                    FieldType: \"文本域\"\r\n                })\r\n            } else if (value == \"MULTISELECT\") {\r\n                this.setState({\r\n                    FieldType: \"多选下拉框\"\r\n                })\r\n            }\r\n        } else {\r\n            this.setState({\r\n                FORMtitHides: false\r\n            });\r\n            if (value == \"SINGLESELECT\") {\r\n                this.setState({\r\n                    FieldType: \"单选下拉框\"\r\n                })\r\n            } else if (value == \"TEXT\") {\r\n                this.setState({\r\n                    FieldType: \"文本框\"\r\n                })\r\n            } else if (value == \"Single\") {\r\n                this.setState({\r\n                    FieldType: \"文本域\"\r\n                })\r\n            } else if (value == \"MULTISELECT\") {\r\n                this.setState({\r\n                    FieldType: \"多选下拉框\"\r\n                })\r\n            }\r\n        }\r\n    }\r\n    AddField = () => {\r\n\r\n        this.state.FieldTypesA.push(\"\")\r\n        this.setState({\r\n            FieldTypes: this.state.FieldTypesA\r\n        })\r\n    }\r\n    DeleteInp = (index) => {\r\n        var lists = this.state.FieldTypes;\r\n        lists.splice(index, 1);\r\n        this.setState({ FieldTypes: lists })\r\n    }\r\n    fetch = (params = {}) => {\r\n        console.log('params:', params);\r\n        this.setState({ loading: true });\r\n        ajax.post('/hcm/hcmCustomModel/getBybmcidAndModule', {\r\n            module: \"DEALER\",\r\n        }).then((res) => {\r\n            // const pagination = { ...this.state.pagination };\r\n            console.log(res, \"541541\")\r\n            // Read total count from server\r\n            // pagination.total = data.totalCount;\r\n            // pagination.total = 200;\r\n            if (res.data.status == 10000) {\r\n\r\n                this.setState({\r\n                    data: res.data.data.add.data,\r\n                    loading: false,\r\n                    totalNum: res.data.data.add.data.length\r\n\r\n                });\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return <Tpl that={this} />\r\n    }\r\n}\r\nexport default Form.create()(CustomFields)"],"sourceRoot":""}