{"version":3,"sources":["webpack:///./app/widget/index/Announcements/main.js"],"names":["confirm","App","props","onRangePicker","e","setState","start_time","end_time","chTreeSelect","value","label","extra","type","state","getNoticeTypeList","ajax","get","params","dictcode","then","response","noticeTypeList","data","catch","error","statusText","onSearch","pageNo","getList","pageSize","notice_title","notice_type","user_name","format","dataList","content","pageNumber","totalNum","totalElements","chSearchIpt","target","handleClearIconClick","changePagination","page","onPaginationSize","current","size","rmDepart","item","that","title","okText","cancelText","className","onOk","post","notice_id","id","status","success","message","moment","subtract","React","Component"],"mappings":"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","file":"js/chunk/229_f0c09d877833a9fd96a1.js","sourcesContent":["import Tpl from './tpl';\r\nimport {message,Modal} from 'antd';\r\nimport ajax from '../../../js/common/ajax';\r\nconst confirm = Modal.confirm;\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            start_time:moment().subtract(3, 'months'),\r\n            end_time:moment(),\r\n            notice_title:null,\r\n            notice_type:null,\r\n            user_name:null,\r\n\r\n            dataList:[],\r\n            \r\n            noticeTypeList:[],\r\n            pageNo: 1,\r\n            pageSize: 10,\r\n            totalNum: null,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getList()\r\n        this.getNoticeTypeList();\r\n    }\r\n    onRangePicker = (e) =>{\r\n        \r\n        this.setState({\r\n            start_time:e[0],\r\n            end_time:e[1],\r\n        })\r\n    }\r\n    chTreeSelect=(value, label, extra, type)=>{\r\n        let state = this.state;\r\n        state[type] = value;\r\n        this.setState(state)\r\n    }\r\n    getNoticeTypeList=()=>{\r\n        ajax.get('/hcm/sys/GetList', {\r\n            params: {\r\n                dictcode:'notice_type'\r\n            }\r\n        })\r\n        .then((response) => {\r\n            this.setState({\r\n                noticeTypeList:response.data.data\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            message.error(error.statusText);\r\n        });\r\n    }\r\n    onSearch= () =>{\r\n        this.setState({\r\n            pageNo:1\r\n        },()=>{\r\n            this.getList()\r\n        })\r\n    }\r\n    getList=()=>{\r\n        let {pageNo,pageSize,start_time,end_time,notice_title,notice_type,user_name} = this.state;\r\n        ajax.get('/hcm/notice/Getlist', {\r\n            params: {\r\n                pageNo:pageNo,\r\n                pageSize:pageSize,\r\n                start_time:start_time?start_time.format('YYYY-MM-DD HH:mm:ss'):null,\r\n                end_time:end_time?end_time.format('YYYY-MM-DD HH:mm:ss'):null,\r\n                notice_title,notice_type,user_name\r\n            }\r\n        }).then((response) => {\r\n            let data = response.data.data;\r\n            // console.log(data)\r\n            this.setState({\r\n                dataList: data.content,\r\n                pageNo: data.pageNumber,\r\n                pageSize: data.pageSize,\r\n                totalNum: data.totalElements,\r\n            })\r\n        }).catch((error) => {\r\n            message.error(error.statusText);\r\n        });\r\n    }\r\n    chSearchIpt = (e,type)=>{\r\n        let state = this.state;\r\n        state[type] = e.target.value;\r\n        this.setState(state)\r\n\r\n    }\r\n    handleClearIconClick =  (type) => {\r\n        let state = this.state;\r\n        state[type] = null;\r\n        this.setState(state);\r\n    }\r\n    changePagination = (page, pageSize) => {\r\n        this.setState({\r\n            pageNo: page,\r\n            pageSize: pageSize,\r\n        }, () => {\r\n            this.getList()\r\n        })\r\n    }\r\n    onPaginationSize = (current, size) => {\r\n        this.setState({\r\n            pageNo: 1,\r\n            pageSize: size,\r\n        }, () => {\r\n            this.getList()\r\n        })\r\n    }\r\n    rmDepart = (item)=>{\r\n        let that = this;\r\n        confirm({\r\n            title:null ,\r\n            content: <div><div className='tips'>提示</div><div className='pline'></div><p className='Dtitle'>你确认要删除该通知公告吗？</p><p>删除后<span className='red'>相关人员将不再能看到该公告</span></p></div>,\r\n            okText: '确定',\r\n            cancelText: '取消',\r\n            className:'alert-item-confirm',\r\n            onOk() {\r\n                ajax.post('/hcm/notice/Delete',{\r\n                    notice_id:item.id\r\n                })\r\n                .then((response) => {\r\n                    if (response.data.status == '10000') {\r\n                        that.getList()\r\n                        message.success(response.data.message);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    message.error(error.statusText);\r\n                });\r\n            },\r\n            \r\n        });\r\n        \r\n    }\r\n    render() {\r\n        return <Tpl that={this} />\r\n    }\r\n}\r\nexport default App;\r\n"],"sourceRoot":""}