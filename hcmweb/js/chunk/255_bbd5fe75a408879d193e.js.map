{"version":3,"sources":["webpack:///./app/widget/index/Brand/ExpiringClientList/main.js"],"names":["App","props","onSearch","bl","setState","pageNo","dealername","state","takePeople","rangePicker","oldSearch","getList","ajax","get","params","pageSize","stopDateStart","format","stopDateEnd","then","response","dataList","data","page_info","checkAll","selectedRowKeys","startTarget","visible","totalNum","catch","error","statusText","chSearchIpt","e","type","console","log","target","value","handleClearIconClick","formatColumn","arr","column","title","dataIndex","key","render","text","record","index","moment","align","width","allStartConfirm","id","allRmConfirm","itemStart","restorePicker","ids","authorizeStart","authorizeEnd","spinning","status","success","message","onTableCheckChange","changePagination","page","onPaginationSize","current","size","dealer_list","forEach","item","push","allStart","join","allRm","length","confirm","maskClosable","content","okText","cancelText","className","onOk","add","React","Component","create"],"mappings":"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","file":"js/chunk/255_bbd5fe75a408879d193e.js","sourcesContent":["import Tpl from './tpl';\r\nimport { Form, Modal, message, Checkbox, Menu, Dropdown, Icon } from 'antd';\r\nimport ajax from '../../../../js/common/ajax';\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            visible:false,\r\n            pageNo: 1,\r\n            pageSize: 10,\r\n            checkAll: false,\r\n            totalNum: null,\r\n            dataList: [],\r\n\r\n            dealername:null,\r\n            takePeople:null,\r\n            rangePicker:[null,null],\r\n            oldSearch:{\r\n                dealername:null,\r\n                takePeople:null,\r\n                rangePicker:[null,null],\r\n            },\r\n\r\n            restorePicker:[moment(),moment().add(1, 'year')],\r\n            spinning: false,\r\n            selectedRowKeys: [],\r\n            startTarget:{}\r\n            \r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getList()\r\n    }\r\n    onSearch= (bl=false) =>{\r\n        this.setState({\r\n            pageNo:1,\r\n            dealername: bl ? null : this.state.dealername,\r\n            takePeople: bl ? null : this.state.takePeople,\r\n            rangePicker: bl ? [null,null] : this.state.rangePicker,\r\n            oldSearch:{\r\n                dealername: bl ? null : this.state.dealername,\r\n                takePeople: bl ? null : this.state.takePeople,\r\n                rangePicker: bl ? [null,null] : this.state.rangePicker,\r\n            },\r\n        },()=>{\r\n            this.getList()\r\n        })\r\n    }\r\n    getList = () => {\r\n        let {dealername,takePeople,rangePicker} = this.state;\r\n        ajax.get('/hcm/dealer/getlistStop', {\r\n            params: {\r\n                pageNo: this.state.pageNo,\r\n                pageSize: this.state.pageSize,\r\n                dealername:dealername,\r\n                takePeople:takePeople,\r\n                stopDateStart:rangePicker[0] ? `${rangePicker[0].format('YYYY-MM-DD')} 00:00:00`:null,\r\n                stopDateEnd:rangePicker[1] ? `${rangePicker[1].format('YYYY-MM-DD')} 23:59:59` : null,\r\n            }\r\n        }).then((response) => {\r\n            let dataList = response.data.data;\r\n            this.setState({\r\n                dataList: dataList,\r\n                pageNo: dataList.page_info.pageNo,\r\n                pageSize: dataList.page_info.pageSize,\r\n                checkAll: false,\r\n                selectedRowKeys: [],\r\n                startTarget:{},\r\n                visible:false,\r\n                totalNum: dataList.page_info.totalNum,\r\n            })\r\n        }).catch((error) => {\r\n            message.error(error.statusText);\r\n        });\r\n    }\r\n    \r\n    chSearchIpt = (e,type)=>{\r\n        let state = this.state;\r\n        if(type=='rangePicker'||type=='restorePicker'){\r\n            state[type][0] = e[0];\r\n            state[type][1] = e[1];\r\n            console.log(state[type])\r\n        }else{\r\n            state[type] = e.target.value;\r\n        }\r\n        this.setState(state)\r\n\r\n    }\r\n    handleClearIconClick =  (type) => {\r\n        let state = this.state;\r\n        state[type] = null;\r\n        this.setState(state);\r\n    }\r\n    formatColumn = () => {\r\n        let arr = []\r\n        let column = [{\r\n            title: 'No',\r\n            dataIndex: 'index',\r\n            key: 'index',\r\n            render: (text, record, index) => index + 1\r\n        },{\r\n            title: '客户名称',\r\n            dataIndex: 'dealername',\r\n            key: 'dealername'\r\n        },{\r\n            title: '对接人',\r\n            dataIndex: 'take_people',\r\n            key: 'take_people'\r\n        },{\r\n            title: '联系方式',\r\n            dataIndex: 'contact',\r\n            key: 'contact'\r\n        },{\r\n            title: '到期时间',\r\n            dataIndex: 'stop_date',\r\n            key: 'stop_date',\r\n            render:text=> text ? moment(text).format('YYYY-MM-DD HH:mm:ss') : '--'\r\n        },{\r\n            title: '操作',\r\n            dataIndex: 'action',\r\n            key: 'action',\r\n            align:'right',\r\n            width:150,\r\n            render: (text, record, index) => (\r\n                <div className='action'>\r\n                    <a onClick={()=>this.allStartConfirm('item',record.id,true)}>恢复合约</a>\r\n                    <a  onClick={()=>this.allRmConfirm('item',record.id)}>删除</a>\r\n                </div>\r\n            )\r\n        }]\r\n        return column\r\n    }\r\n    \r\n    \r\n    itemStart=(record)=>{\r\n        let {restorePicker} = this.state;\r\n        \r\n        let params = {}\r\n        \r\n        params.ids = record.id\r\n        params.checkAll = false\r\n        \r\n        params.authorizeStart=restorePicker[0].format('YYYY-MM-DD')\r\n        params.authorizeEnd =restorePicker[1].format('YYYY-MM-DD')\r\n        this.setState({\r\n            spinning: true\r\n        }, () => {\r\n            ajax.get('/hcm/dealer/start', {\r\n                params: params\r\n            }).then((response) => {\r\n                \r\n                this.setState({\r\n                    spinning: false\r\n                },()=>{\r\n                    \r\n                    if (response.data.status == '10000') {\r\n                        this.getList()\r\n                    }\r\n                    message.success(response.data.message);\r\n                })\r\n                \r\n            }).catch((error) => {\r\n                this.setState({\r\n                    spinning: false\r\n                })\r\n                message.error(error.statusText);\r\n            });\r\n        })\r\n    }\r\n\r\n    \r\n   \r\n    onTableCheckChange = (selectedRowKeys) => {\r\n        this.setState({\r\n            selectedRowKeys: selectedRowKeys,\r\n            checkAll: false\r\n        });\r\n    }\r\n\r\n    changePagination = (page, pageSize) => {\r\n        this.setState({\r\n            pageNo: page,\r\n            pageSize: pageSize,\r\n        }, () => {\r\n            this.getList()\r\n        })\r\n    }\r\n    onPaginationSize = (current, size) => {\r\n        this.setState({\r\n            pageNo: 1,\r\n            pageSize: size,\r\n        }, () => {\r\n            this.getList()\r\n        })\r\n    }\r\n    checkAll = (bl) => {\r\n        let selectedRowKeys = this.state.selectedRowKeys;\r\n        if (bl) {\r\n            this.state.dataList.dealer_list.forEach((item, index) => {\r\n                selectedRowKeys.push(item.id)\r\n            })\r\n\r\n        } else {\r\n            selectedRowKeys = []\r\n        }\r\n        this.setState({\r\n            checkAll: bl,\r\n            selectedRowKeys: selectedRowKeys\r\n        })\r\n    }\r\n    allStart = () => {\r\n        let {restorePicker,selectedRowKeys, checkAll,startTarget } = this.state;\r\n        \r\n        let params = {}\r\n        if (startTarget.type == 'all') {\r\n            let { dealername, takePeople, rangePicker} = this.state.oldSearch;\r\n            params = {\r\n                ids :selectedRowKeys.join(','),\r\n                checkAll :checkAll,\r\n                dealername: checkAll ? dealername : '',\r\n                takePeople: checkAll ? takePeople : '',\r\n                stopDateStart:checkAll ? rangePicker[0] ? `${rangePicker[0].format('YYYY-MM-DD')} 00:00:00`:'' : '',\r\n                stopDateEnd:checkAll ? rangePicker[1] ? `${rangePicker[1].format('YYYY-MM-DD')} 23:59:59` : '' : '',\r\n            }\r\n        }else{\r\n            params.ids = startTarget.id\r\n            params.checkAll = false\r\n        }\r\n        params.authorizeStart=restorePicker[0].format('YYYY-MM-DD')\r\n        params.authorizeEnd=restorePicker[1].format('YYYY-MM-DD')\r\n        this.setState({\r\n            spinning: true\r\n        }, () => {\r\n            ajax.get('/hcm/dealer/start', {\r\n                params: params\r\n            }).then((response) => {\r\n                \r\n                this.setState({\r\n                    spinning: false\r\n                },()=>{\r\n                    \r\n                    if (response.data.status == '10000') {\r\n                        this.onSearch(true)\r\n                    }\r\n                    message.success(response.data.message);\r\n                })\r\n                \r\n            }).catch((error) => {\r\n                this.setState({\r\n                    spinning: false\r\n                })\r\n                message.error(error.statusText);\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n    allRm = (type, id) => {\r\n        let { selectedRowKeys, checkAll } = this.state;\r\n        let params = {}\r\n        if (type == 'all') {\r\n            let { dealername, takePeople, rangePicker} = this.state.oldSearch;\r\n           \r\n            params = {\r\n                ids :selectedRowKeys.join(','),\r\n                checkAll :checkAll,\r\n                dealername:checkAll ?  dealername: '',\r\n                takePeople:checkAll ?  takePeople: '',\r\n                stopDateStart:checkAll ? rangePicker[0] ? `${rangePicker[0].format('YYYY-MM-DD')} 00:00:00`:'': '',\r\n                stopDateEnd:checkAll ? rangePicker[1] ? `${rangePicker[1].format('YYYY-MM-DD')} 23:59:59` : '': '',\r\n            }\r\n        }else{\r\n            params.ids = id\r\n            params.checkAll = false\r\n        }\r\n\r\n        this.setState({\r\n            spinning: true\r\n        }, () => {\r\n            ajax.get('/hcm/dealer/delete', {\r\n                params: params\r\n            }).then((response) => {\r\n                this.setState({\r\n                    spinning: false\r\n                },()=>{\r\n                    \r\n                    if (response.data.status == '10000') {\r\n                        this.onSearch(true)\r\n                    }\r\n                    message.success(response.data.message);\r\n                })\r\n\r\n            }).catch((error) => {\r\n                this.setState({\r\n                    spinning: false\r\n                })\r\n                message.error(error.statusText);\r\n            });\r\n        })\r\n\r\n    }\r\n    allStartConfirm = (type,id,bl) => {\r\n        let {selectedRowKeys,startTarget } = this.state;\r\n        if (!selectedRowKeys.length&&type == 'all' ) {\r\n            message.error('至少选择一条');\r\n            return\r\n        }\r\n        startTarget.type = type;\r\n        startTarget.id = id\r\n        if(type=='close'){\r\n            startTarget = {}\r\n        }\r\n        \r\n        this.setState({\r\n            visible:bl,\r\n            startTarget:startTarget\r\n        })\r\n    }\r\n    allRmConfirm = (type,id) => {\r\n        let { checkAll, totalNum, selectedRowKeys } = this.state;\r\n        if (!selectedRowKeys.length&&type == 'all' ) {\r\n            message.error('至少选择一条');\r\n            return\r\n        }\r\n        Modal.confirm({\r\n            title: null,\r\n            maskClosable: false,\r\n            content:type == 'all' ? \r\n                    <div>\r\n                        <div className='tips'>提示</div>\r\n                        <div className='pline'></div>\r\n                        <p>你确认要删除勾选的<span className='red'>{checkAll ? totalNum : selectedRowKeys.length}</span>项客户信息吗</p>\r\n                        <p>删除后<span className='red'>相关客户信息将无法找回</span></p>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <div className='tips'>提示</div>\r\n                        <div className='pline'></div>\r\n                        <p>你确认要删除该客户信息吗？</p>\r\n                        <p>删除后<span className='red'>相关客户信息将无法找回</span></p>\r\n                    </div>,\r\n            okText: '确定',\r\n            cancelText: '取消',\r\n            className:'alert-item-confirm',\r\n            onOk: () => this.allRm(type, id),\r\n        });\r\n    }\r\n    render() {\r\n        return <Tpl that={this} />\r\n    }\r\n}\r\nexport default Form.create()(App);\r\n"],"sourceRoot":""}