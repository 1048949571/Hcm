{"version":3,"sources":["webpack:///./app/widget/index/Brand/SuspectExceptionOrder/tpl.js"],"names":["Option","RangePicker","clearIconStyle","width","height","opacity","cursor","ORDER_STATUS","Tpl","that","state","startTime","endTime","orderId","shopInfo","status","result","expandedRowKeys","dataList","pagination","columns","title","render","text","record","index","key","className","dataIndex","platformName","shopUrl","wangwang","dealerName","display","whiteSpace","overflow","textOverflow","moment","format","color","handleExpand","bind","orderStatus","props","history","clearInputFn","searchChange","trigger","parentNode","marginLeft","handleSearch","id","showQuickJumper","current","pageNo","total","totalElements","onChange","handlePageChange","indent","expanded","handleOrder","_detail"],"mappings":"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","file":"js/chunk/280_87e40590cab980bd436b.js","sourcesContent":["import ThatMain from '../../../HOC/That'\r\nimport ContentBox from '../../../components/Layout'\r\nimport ExpandContent from '../../../components/OrderMonitorExpandContent'\r\n\r\nimport { Input, Select, DatePicker, Button, Row, Col, Icon, Table, Popover } from 'antd'\r\n\r\nconst Option = Select.Option\r\nconst RangePicker = DatePicker.RangePicker\r\n\r\nconst clearIconStyle = {\r\n  width: '14px',\r\n  height: '14px',\r\n  opacity: 0.25,\r\n  cursor: 'pointer'\r\n}\r\nconst ORDER_STATUS = {\r\n  0: '已处理（正常）',\r\n  1: '待处理',\r\n  2: '已处理（异常）',\r\n}\r\n\r\nconst Tpl = ThatMain(that => {\r\n  const {\r\n    startTime,\r\n    endTime,\r\n    orderId,\r\n    shopInfo,\r\n    status,\r\n    result,\r\n    expandedRowKeys,\r\n    // expanded,\r\n    dataList,\r\n    pagination,\r\n  } = that.state\r\n\r\n  const columns = [\r\n    {\r\n      title: '序号',\r\n      render: (text, record, index) => index + 1,\r\n      key: 'xuhao',\r\n      className: 'table-column-item',\r\n    },\r\n    {\r\n      title: '订单编号',\r\n      dataIndex: 'tid',\r\n      key: 'order_num',\r\n      className: 'table-column-item',\r\n    },\r\n    {\r\n      title: '订单金额',\r\n      dataIndex: 'tradeMoney',\r\n      render: text => `￥${text}`,\r\n      key: 'order-money',\r\n      className: 'table-column-item',\r\n    },\r\n    {\r\n      title: '店铺信息',\r\n      dataIndex: 'shopName',\r\n      render: (text, record) => (\r\n        <Popover\r\n          placement=\"topLeft\"\r\n          content={\r\n            <React.Fragment>\r\n              <p>平台：{record.platformName}</p>\r\n              <p>链接地址：<a href={record.shopUrl} target=\"_blank\">{record.shopUrl}</a></p>\r\n              <p>店铺名称：{text}</p>\r\n              <p>旺旺名称：{record.wangwang}</p>\r\n              <p>所属经销商：{record.dealerName}</p>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <span style={{display:'inline-block',width:'60%',whiteSpace:'nowrap',overflow:'hidden',textOverflow:'ellipsis'}}>{text}</span>\r\n        </Popover>\r\n      ),\r\n      key: 'shop_info',\r\n      className: 'table-column-item',\r\n    },\r\n    {\r\n      title: '订单时间',\r\n      dataIndex: 'paytime',\r\n      render: text => moment(text).format('YYYY-MM-DD HH:mm:ss'),\r\n      key: 'order_time',\r\n      className: 'table-column-item',\r\n    },\r\n    {\r\n      title: '状态',\r\n      dataIndex: 'orderStatus',\r\n      render: text => `${ORDER_STATUS[text]||''}`,\r\n      key: 'status',\r\n      className: 'table-column-item',\r\n    },\r\n    // {\r\n    //   title: '处理结果',\r\n    //   render: text => ``,\r\n    //   key: 'result',\r\n    //   className: 'table-column-item',\r\n    // },\r\n    {\r\n      title: '操作',\r\n      render: (text, record) => (\r\n        <span \r\n          style={{cursor:'pointer',color:'#108CEE'}}\r\n          onClick={that.handleExpand.bind(that, null, record)}>\r\n          {`${record.orderStatus == 1 ? '立即处理' : '订单详情'}`}\r\n        </span>\r\n      ),\r\n      key: 'options',\r\n      className: 'table-column-item',\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <ContentBox\r\n      breadcrumbList={['监控中心', '订单监控', '疑似异常订单处理']}\r\n      linkList={['', '1', '']}\r\n      history={that.props.history}\r\n    >\r\n      <div className=\"suspent-exception-order-wrapper\">\r\n        <section className=\"search-container\">\r\n          <Row className=\"row-content\">\r\n            <Col span={8} className=\"item\">\r\n              <span>订单编号</span>\r\n              <Input \r\n                suffix={\r\n                  orderId===\"\"?\r\n                  null:\r\n                  <Icon\r\n                    type=\"close-circle\"\r\n                    onClick={that.clearInputFn.bind(that, 'orderId')}\r\n                    style={clearIconStyle}\r\n                  />\r\n                }\r\n                onChange={that.searchChange.bind(that, 'orderId', 'input')}\r\n                value={orderId}\r\n                placeholder=\"请输入\" \r\n                style={{width:242}} />\r\n            </Col>\r\n            <Col span={8} className=\"item\">\r\n              <span>状态</span>\r\n              <Select\r\n                onChange={that.searchChange.bind(that, 'status', 'select')}\r\n                defaultValue={status}\r\n                style={{width:242}}\r\n                getPopupContainer={trigger => trigger.parentNode}\r\n              >\r\n                <Option value=\"\">全部</Option>\r\n                <Option value=\"0\">已处理（正常）</Option>\r\n                <Option value=\"2\">已处理（异常）</Option>\r\n                <Option value=\"1\">待处理</Option>\r\n              </Select>\r\n            </Col>\r\n            <Col span={8} className=\"item\">\r\n              <span>订单时间</span>\r\n              <RangePicker \r\n                onChange={that.searchChange.bind(that, '', 'time')}\r\n                style={{width:242}}\r\n                getCalendarContainer={trigger => trigger.parentNode}\r\n                defaultValue={startTime===''?[]:[startTime, endTime]}\r\n              />\r\n              <Button style={{marginLeft:10}} className=\"btn6\" onClick={that.handleSearch}>查询</Button>\r\n            </Col>\r\n            {/* <Col span={8} className=\"item\"> */}\r\n              {/* <span>店铺信息</span>\r\n              <Input \r\n                suffix={\r\n                  shopInfo===\"\"?\r\n                  null:\r\n                  <Icon\r\n                    type=\"close-circle\"\r\n                    onClick={that.clearInputFn.bind(that, 'shopInfo')}\r\n                    style={clearIconStyle}\r\n                  />\r\n                }\r\n                onChange={that.searchChange.bind(that, 'shopInfo', 'input')}\r\n                value={shopInfo}\r\n                placeholder=\"请输入\" \r\n                style={{width:242}} /> */}\r\n            {/* </Col> */}\r\n            {/* <Col span={8} className=\"item\"> */}\r\n              {/* <span>处理结果</span>\r\n              <Select\r\n                onChange={that.searchChange.bind(that, 'result', 'select')}\r\n                defaultValue={result}\r\n                style={{width:242}}\r\n                getPopupContainer={trigger => trigger.parentNode}\r\n              >\r\n                <Option value=\"\">全部</Option>\r\n              </Select> */}\r\n            {/* </Col> */}\r\n            {/* <Col span={8} className=\"item\">\r\n              <Button className=\"btn6\" onClick={that.handleSearch}>查询</Button>\r\n            </Col> */}\r\n          </Row>\r\n        </section>\r\n        <section className=\"table-content-wrapper\">\r\n          <Table \r\n            className=\"table\"\r\n            rowKey={record => record.id}\r\n            dataSource={dataList}\r\n            pagination={{\r\n              showQuickJumper: true,\r\n              current: pagination.pageNo,\r\n              total: pagination.totalElements,\r\n              onChange: that.handlePageChange,\r\n            }}\r\n            columns={columns}\r\n            onExpand={that.handleExpand}\r\n            expandedRowKeys={expandedRowKeys}\r\n            expandedRowRender={(record, index, indent, expanded) => {\r\n              return (\r\n                <ExpandContent handleOrder={that.handleOrder} orderId={record.id} data={record._detail || {}} />\r\n              )\r\n            }}\r\n          />\r\n        </section>\r\n      </div>\r\n    </ContentBox>\r\n  )\r\n})\r\n\r\nexport default Tpl"],"sourceRoot":""}