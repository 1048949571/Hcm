{"version":3,"sources":["webpack:///./app/widget/components/Component.js","webpack:///./app/widget/components/Copyright.js","webpack:///./app/widget/components/FullSpin.js","webpack:///./app/widget/components/Layout/index.js","webpack:///./app/widget/components/Layout/index.less","webpack:///./app/widget/index/Administrator/BrandList/tpl.js"],"names":["AddIcon","props","style","className","React","Component","Copyright","clazzName","FullSpin","textAlign","spinning","RightBox","breadcrumbList","map","v","i","linkList","history","go","children","defaultProps","title","FormItem","Item","Option","OptGroup","TextArea","Tpl","that","fullSpinVisible","state","Brand","dataList","customerList","versionList","version","companyMemoname","companyname","username","status","kefu","totalNum","pageSize","pageNo","columns","checkAll","clearIconStyle","width","height","opacity","cursor","clearIcon","fieldName","length","handleClearIconClick","e","chSearchIpt","position","seSearchIpt","document","getElementById","input","option","toLowerCase","indexOf","item","index","id","realname","dictName","justifyContent","paddingRight","onSearch","stateModal","allClick","key","allStart","allStop","stateEditService","padding","filter","checkStatue","marginLeft","login","Math","ceil","changePagination","onPaginationSize","AddModal","getFieldDecorator","form","visible","type","targetModal","rolePage","handleSubmit","span","initialValue","maxWidth","password","kefuid","split","roleIds","rules","required","message","role_name","versionid","memo","validtime","moment","add","currentDate","subtract","offset","EditService","editService","oService","allEditService","selectService","BindBoxFrom","create","resetFields","validateFields","actionVisible","onBindSubmit","fetchUser","onSelectBlur","onSelect","onDeselect","addHandleSubmit","preventDefault","err","values","cancel","ALcomplaiontId","targetData","alid","JDcomplaiontId","jdid","oldaliList","aliList","oldjdList","jdList"],"mappings":"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","file":"js/chunk/61_3beea190c002e536b632.js","sourcesContent":["\r\n/**\r\n *\r\n *\r\n * @export\r\n * @description style:object,className:str\r\n * @class AddIcon \r\n * @extends {React.Component}\r\n */\r\nexport class AddIcon extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        let {style,className} = this.props;\r\n        return(\r\n            <img className={className} style={style} src=\"../../../../img/icon/add2.png\"/>\r\n        )\r\n        \r\n    }\r\n}\r\n    ","\r\nclass Copyright extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return(\r\n            <div className={this.props.clazzName ? this.props.clazzName:'Copyright'}>\r\n                Copyright &#169; 杭州久点网络技术有限公司\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\nexport default Copyright","import { Spin, Modal } from 'antd';\r\nclass FullSpin extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            <Modal maskClosable={false} className='full-spin' bodyStyle={{textAlign: 'center'}} footer={null} closable={false} visible={this.props.spinning} >\r\n                <Spin  size=\"large\" delay={100} spinning={true} className='example' tip=\"Loading...\">\r\n                </Spin>\r\n            </Modal>\r\n        )\r\n\r\n    }\r\n}\r\nexport default FullSpin","import Copyright from '../Copyright'\r\nimport { Breadcrumb } from 'antd'\r\n\r\nimport './index.less'\r\n\r\nconst RightBox = props => {\r\n  return (\r\n    <div className={`layout-wrapper ${props.className || ''}`}>\r\n      <div className=\"header-wrapper\">\r\n        <Breadcrumb className=\"breadcrumb\">\r\n          {\r\n            props.breadcrumbList.map((v, i) => {\r\n              if (props.linkList[i] === '') {\r\n                return <Breadcrumb.Item key={v}>{v}</Breadcrumb.Item>\r\n              }\r\n              return (\r\n                <Breadcrumb.Item \r\n                  href=\"javascript:;\" \r\n                  key={v}>\r\n                  <span onClick={() => {props.history.go(-props.linkList[i])}}>{v}</span>\r\n                </Breadcrumb.Item>\r\n              )\r\n            })\r\n          }\r\n        </Breadcrumb>\r\n        {/* <h1 className=\"title\">{props.title}</h1> */}\r\n      </div>\r\n      <div className=\"layout-content\">{ props.children }</div>\r\n      <div className=\"copyright\">\r\n        <Copyright />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nRightBox.defaultProps = {\r\n  title: '标题',\r\n  breadcrumbList: [],\r\n  linkList: []\r\n}\r\n\r\nexport default RightBox","// removed by extract-text-webpack-plugin","\r\nimport ThatMain from '../../../HOC/That';\r\n// import Copyright from \"../../../components/Copyright\";\r\nimport ContentBox from '../../../components/Layout'\r\nimport { AddIcon } from '../../../components/Component';\r\nimport { Select, Button, Modal, DatePicker, Breadcrumb, Icon, Form, Input, Alert, Table, Pagination, Popconfirm, Tooltip } from 'antd';\r\nconst FormItem = Form.Item;\r\nconst { Option, OptGroup } = Select;\r\nconst { TextArea } = Input;\r\nimport FullSpin from '../../../components/FullSpin';\r\nconst Tpl = ThatMain((that) => {\r\n    let { fullSpinVisible } = that.state;\r\n    return (\r\n        <ContentBox\r\n            breadcrumbList={['用户管理', '品牌方账号']}\r\n            linkList={['', '']}\r\n            history={that.props.history}\r\n        >\r\n            <div className='brandinfo'>\r\n                {/* <div className='Breadcrumb'>\r\n                <Breadcrumb>\r\n                    <Breadcrumb.Item>用户管理</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>品牌方账号</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n            </div> */}\r\n                <Brand that={that} />\r\n                {/* <Copyright clazzName='copyright' /> */}\r\n                <FullSpin spinning={fullSpinVisible} />\r\n            </div>\r\n        </ContentBox>\r\n    )\r\n})\r\n\r\nconst Brand = ThatMain((that) => {\r\n    let { dataList, customerList, versionList, version, companyMemoname, companyname, username, status, kefu, totalNum, pageSize, pageNo, columns, checkAll } = that.state;\r\n    const clearIconStyle = {\r\n        width: '14px',\r\n        height: '14px',\r\n        opacity: 0.25,\r\n        cursor: 'pointer'\r\n    }\r\n    const clearIcon = fieldName => (\r\n        that.state[fieldName] && that.state[fieldName].length ?\r\n            <Icon\r\n                type=\"close-circle\"\r\n                onClick={() => that.handleClearIconClick(fieldName)}\r\n                style={clearIconStyle}\r\n            />\r\n            : null\r\n    )\r\n    return (\r\n        <div className='content brand'>\r\n            <div className='search-box'>\r\n                <div className='input-box'>\r\n                    <div className='item'>\r\n                        <span className='lab'>公司名称:</span>\r\n                        <Input onChange={(e) => that.chSearchIpt(e, 'companyname')} value={companyname} suffix={clearIcon('companyname')} className='ipt' style={{ width: 200 }} />\r\n                    </div>\r\n                    <div className='item'>\r\n                        <span className='lab'>用户名:</span>\r\n                        <Input onChange={(e) => that.chSearchIpt(e, 'username')} value={username} suffix={clearIcon('username')} className='ipt' style={{ width: 200 }} />\r\n                    </div>\r\n                    <div className='item'>\r\n                        <span className='lab'>备注名:</span>\r\n                        <Input onChange={(e) => that.chSearchIpt(e, 'companyMemoname')} value={companyMemoname} suffix={clearIcon('companyMemoname')} className='ipt' style={{ width: 200 }} />\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div className='butbox'>\r\n                    <div style={{ position: 'relative' }} id=\"status\" className='item'>\r\n                        <span className='lab'>状态:</span>\r\n                        <Select onChange={(e) => that.seSearchIpt(e, 'status')} value={status} className='ipt' style={{ width: 200 }} getPopupContainer={() => document.getElementById('status')}>\r\n                            <Option value={null}>全部</Option>\r\n                            <Option value=\"1\">启用</Option>\r\n                            <Option value=\"0\">禁用</Option>\r\n                        </Select>\r\n                    </div>\r\n                    <div className='item' style={{ position: 'relative' }} id=\"kefu\">\r\n                        <span className='lab'>服务客服:</span>\r\n                        <Select showSearch onChange={(e) => that.seSearchIpt(e, 'kefu')} value={kefu} className='ipt' filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0} style={{ width: 200 }} getPopupContainer={() => document.getElementById('kefu')}>\r\n                            <Option value={null}>全部</Option>\r\n                            {\r\n                                customerList.map((item, index) => {\r\n                                    return (\r\n                                        <Option key={index} value={item.id}>{item.realname}</Option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Select>\r\n\r\n                    </div>\r\n                    <div className='item' style={{ position: 'relative' }} id=\"version\">\r\n                        <span className='lab'>使用版本:</span>\r\n                        <Select onChange={(e) => that.seSearchIpt(e, 'version')} value={version} className='ipt' filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0} style={{ width: 200 }} getPopupContainer={() => document.getElementById('version')}>\r\n                            <Option value={null}>全部</Option>\r\n                            {\r\n                                versionList.map((item, index) => {\r\n                                    return (\r\n                                        <Option key={index} value={item.id}>{item.dictName}</Option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Select>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className='butbox' style={{ justifyContent: 'flex-end' }}>\r\n                    <div className='item' style={{ justifyContent: 'flex-end', paddingRight: '76px' }}>\r\n                        <Button onClick={e => that.onSearch()}>查询</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='add-all'>\r\n                <Button onClick={() => that.stateModal(true,'新增',false)} className='add btn1-main' type=\"primary\"><AddIcon style={{paddingRight:'8px'}} />新增</Button>\r\n                <Button onClick={() => that.allClick()}>{columns[0].key == 'checkStatue' ?'取消批量操作':'批量操作'}</Button>\r\n                {\r\n                    columns[0].key == 'checkStatue' ?\r\n                        <React.Fragment>\r\n                            <Popconfirm title={<div>\r\n                                {\r\n                                    checkAll ?\r\n                                        <p>你确认要启用<span className='red'>所有用户</span>吗？</p>\r\n                                        :\r\n                                        <p>你确认要启用该用户吗？</p>\r\n                                }\r\n\r\n                                <p>启用后账号将<span className='red'>恢复正常使用</span></p>\r\n                            </div>} onConfirm={() => that.allStart()} okText=\"是\" cancelText=\"否\">\r\n                                <Button>批量启用</Button>\r\n                            </Popconfirm>\r\n                            <Popconfirm title={<div>\r\n                                {\r\n                                    checkAll ?\r\n                                        <p>你确认要停用<span className='red'>所有用户</span>吗？</p>\r\n                                        :\r\n                                        <p>你确认要启用该用户吗？</p>\r\n                                }\r\n                                <p>停用后账号将<span className='red'>无法使用</span></p>\r\n                            </div>} onConfirm={() => that.allStop()} okText=\"是\" cancelText=\"否\">\r\n                                <Button type=\"danger\">批量停用</Button>\r\n                            </Popconfirm>\r\n                            <Button onClick={() => that.stateEditService(true)} type=\"primary\">批量变更客服</Button>\r\n                        </React.Fragment>\r\n                        : null\r\n                }\r\n\r\n            </div>\r\n            {\r\n                columns[0].key == 'checkStatue' ?\r\n                    <div style={{ padding: '10px' }}>\r\n                        <Alert message={<div>共 <a>{totalNum}</a> 项，已选择 <a>{checkAll ? totalNum : dataList.filter((item, index) => item.checkStatue).length}</a> 项 <a onClick={() => that.checkAll(true)} style={{ marginLeft: '20px' }}>勾选全部</a>/<a onClick={() => that.checkAll(false)}>取消勾选</a></div>} type=\"info\" showIcon />\r\n                    </div>\r\n                    : null\r\n            }\r\n            <Table pagination={false} loading={that.state.login} rowKey='userid' columns={columns} dataSource={dataList} />\r\n\r\n            <div className='footer'>\r\n                <div className='info'>\r\n                    {`共 ${totalNum} 条记录 `}\r\n                    &nbsp;&nbsp;\r\n                {`第  ${pageNo}  / ${Math.ceil(totalNum / pageSize)} 页`}\r\n                </div>\r\n                <Pagination pageSize={pageSize} current={pageNo} total={totalNum} onChange={that.changePagination} onShowSizeChange={that.onPaginationSize} showSizeChanger showQuickJumper />\r\n            </div>\r\n            <AddModal that={that} />\r\n            <BindBoxFrom that={that} />\r\n\r\n            <EditService that={that} />\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\nconst AddModal = ThatMain((that) => {\r\n    const { getFieldDecorator } = that.props.form;\r\n    let { visible, type, targetModal, customerList, rolePage, versionList } = that.state;\r\n    type == '新增' ? targetModal = {} : targetModal = targetModal\r\n    return (\r\n        <Modal\r\n            title={type}\r\n            maskClosable={false}\r\n            footer={null}\r\n            onCancel={() => that.stateModal(false, '', false)}\r\n            visible={visible}\r\n        >\r\n            {visible ?\r\n\r\n                <Form onSubmit={(e) => that.handleSubmit(e)}>\r\n                    <FormItem\r\n                        label={<span className='required'>公司名称</span>}\r\n                        labelCol={{ span: 7 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                    >\r\n                        {getFieldDecorator('companyname', {\r\n                            initialValue: targetModal.companyname\r\n                        })(\r\n                            <Input />\r\n                        )}\r\n                    </FormItem>\r\n                    <FormItem\r\n                        label={<span>备注名</span>}\r\n                        labelCol={{ span: 7 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                        style={{ position: 'relative' }}\r\n                    >\r\n                        {getFieldDecorator('companyMemoname', {\r\n                            initialValue: targetModal.companyMemoname\r\n                        })(\r\n                            <Input />\r\n                        )}\r\n                        {/* <Tooltip title=\"用户名不支持修改，请仔细考虑！\">\r\n                        <Icon type=\"info-circle\" theme=\"outlined\" style={{position:'absolute',top:'3px',right:'-25px'}} />\r\n                    </Tooltip> */}\r\n                    </FormItem>\r\n                    <FormItem\r\n                        label={<span className='required'>用户名</span>}\r\n                        labelCol={{ span: 7 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                    >\r\n                        <Tooltip overlayStyle={{ maxWidth: '400px' }} placement=\"right\" title={<ul><li>6 - 16 个字符，可使用数字、字母、下划线;</li><li>需以字母开头，字母区分大小写。</li><li>首尾空格无效;</li><li>创建后不可修改;</li></ul>}>\r\n                            {getFieldDecorator('username', {\r\n                                initialValue: targetModal.username\r\n                            })(\r\n\r\n                                <Input disabled={type == '新增' ? false : true} />\r\n\r\n                            )}\r\n                        </Tooltip>\r\n                    </FormItem>\r\n                    <FormItem\r\n                        label={<span className='required'>密码</span>}\r\n                        labelCol={{ span: 7 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                    >\r\n                        <Tooltip placement=\"right\" title={'6 - 16  个字符'}>\r\n                            {getFieldDecorator('password', {\r\n                                initialValue: targetModal.password\r\n                            })(\r\n\r\n                                <Input type='password' />\r\n\r\n                            )}\r\n                        </Tooltip>\r\n                    </FormItem>\r\n                    <FormItem\r\n                        label={<span className='required'>服务客服</span>}\r\n                        labelCol={{ span: 7 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                    >\r\n                        {getFieldDecorator('kefuid', {\r\n                            initialValue: targetModal.kefuid ? targetModal.kefuid.split(',') : []\r\n                        })(\r\n                            <Select showSearch mode=\"multiple\" filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0} >\r\n\r\n                                {\r\n                                    customerList.map((item, index) => {\r\n                                        return (\r\n                                            <Option key={index} value={item.id + ''}>{item.realname}</Option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        )}\r\n                    </FormItem>\r\n                    <FormItem\r\n                        label=\"角色菜单\"\r\n                        labelCol={{ span: 7 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                    >\r\n                        {getFieldDecorator('roleIds', {\r\n                            initialValue: targetModal.roleIds,\r\n                            rules: [{ required: true, message: '请选择' }],\r\n                        })(\r\n                            <Select getPopupContainer={() => document.getElementById('status')}>\r\n                                {\r\n                                    rolePage.map((item, index) => {\r\n                                        return (\r\n                                            <Option key={index} value={item.id}>{item.role_name}</Option>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </Select>\r\n                        )}\r\n                    </FormItem>\r\n                    <FormItem\r\n                        label=\"使用版本\"\r\n                        labelCol={{ span: 7 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                    >\r\n                        {getFieldDecorator('version', {\r\n                            initialValue: targetModal.versionid,\r\n                            rules: [{ required: true, message: '请选择' }],\r\n                        })(\r\n                            <Select getPopupContainer={() => document.getElementById('status')}>\r\n                                {\r\n                                    versionList.map((item, index) => {\r\n                                        return (\r\n                                            <Option key={index} value={item.id}>{item.dictName}</Option>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                            </Select>\r\n                        )}\r\n                    </FormItem>\r\n                    <FormItem\r\n                        label=\"备注说明\"\r\n                        labelCol={{ span: 7 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                    >\r\n                        {getFieldDecorator('memo', {\r\n                            initialValue: targetModal.memo,\r\n                            rules: [{ required: false, message: '请输入' }],\r\n                        })(\r\n                            <TextArea />\r\n                        )}\r\n                    </FormItem>\r\n                    <FormItem\r\n                        label=\"账号有效期\"\r\n                        labelCol={{ span: 7 }}\r\n                        wrapperCol={{ span: 12 }}\r\n                    >\r\n                        {getFieldDecorator('validtime', {\r\n                            initialValue: targetModal.validtime ? moment(targetModal.validtime) : moment().add(1, 'year'),\r\n                            rules: [{ required: true, message: '请输入' }],\r\n                        })(\r\n                            <DatePicker disabledDate={(currentDate) => currentDate && currentDate < moment().subtract(1, 'days')} style={{ width: '100%' }} />\r\n                        )}\r\n                    </FormItem>\r\n                    <FormItem\r\n                        wrapperCol={{ offset: 20 }}\r\n                    >\r\n                        <Button className='btn2-main' htmlType=\"submit\">\r\n                            保存\r\n                    </Button>\r\n                    </FormItem>\r\n                </Form>\r\n                : null\r\n            }\r\n        </Modal>)\r\n})\r\nconst EditService = ThatMain((that) => {\r\n    let { editService, customerList, oService } = that.state;\r\n    return (\r\n        <Modal\r\n            maskClosable={false}\r\n            title={'变更客服'}\r\n            onCancel={() => that.stateEditService(false)}\r\n            visible={editService}\r\n            onOk={() => that.allEditService()}\r\n        >\r\n            <div className='editService'>\r\n                <span className='lab'>服务客服:</span>\r\n                <Select mode=\"multiple\" onChange={e => that.selectService(e)} value={oService} showSearch className='ipt' filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0} style={{ width: '100%' }}>\r\n\r\n                    {\r\n                        customerList.map((item, index) => {\r\n                            return (\r\n                                <Option key={index} value={item.id}>{item.realname}</Option>\r\n                            )\r\n                        })\r\n                    }\r\n                </Select>\r\n\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n})\r\n\r\n\r\nconst BindBoxFrom = Form.create()((props) => {\r\n\r\n    const { getFieldDecorator, resetFields, validateFields } = props.form;\r\n    const { state, actionVisible, onBindSubmit, fetchUser, onSelectBlur, onSelect, onDeselect } = props.that;\r\n    const addHandleSubmit = (e) => {\r\n        e.preventDefault();\r\n        validateFields((err, values) => {\r\n            if (!err) {\r\n\r\n                onBindSubmit(values, resetFields)\r\n\r\n            }\r\n        });\r\n    }\r\n    const cancel = (e) => {\r\n        e.preventDefault();\r\n        resetFields();\r\n        actionVisible(false);\r\n    }\r\n\r\n    let ALcomplaiontId = state.targetData.alid ? state.targetData.alid.split(',') : []\r\n    let JDcomplaiontId = state.targetData.jdid ? state.targetData.jdid.split(',') : []\r\n    return (\r\n        <Modal\r\n            maskClosable={false}\r\n            title={'绑定投诉账号'}\r\n            onCancel={cancel}\r\n            visible={state.actionVisible}\r\n            onOk={addHandleSubmit}\r\n            className='YellowWhite'\r\n        >\r\n            <Form onSubmit={addHandleSubmit}>\r\n                <FormItem\r\n                    label={<span>阿里投诉账号</span>}\r\n                    labelCol={{ span: 7 }}\r\n                    wrapperCol={{ span: 14 }}\r\n                >\r\n                    {getFieldDecorator('ALcomplaiontId', {\r\n                        initialValue: ALcomplaiontId\r\n\r\n                    })(\r\n                        <Select\r\n                            mode=\"multiple\"\r\n                            filterOption={false}\r\n                            onBlur={(e) => onSelectBlur(e, 'aliList')}\r\n                            onSearch={(e) => fetchUser(e, 'aliList')}\r\n                            onSelect={(e, option) => onSelect(e, option, 'aliList', 'oldaliList')}\r\n                            onDeselect={(e, option) => onDeselect(e, option, 'aliList', 'oldaliList')}\r\n                            style={{ width: '100%' }}\r\n                        >\r\n                            <OptGroup label=\"已选中\">\r\n                                {\r\n                                    state.oldaliList.map((item, index) => {\r\n                                        return (\r\n                                            <Option key={item.id}>{`${item.title}:${item.username}`}</Option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </OptGroup>\r\n                            <OptGroup label=\"搜索结果\">\r\n                                {\r\n\r\n                                    state.aliList.map((item, index) => {\r\n                                        return (\r\n                                            <Option key={item.id}>{`${item.title}:${item.username}`}</Option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </OptGroup>\r\n                            {/* <Option key={23}>gggg</Option> */}\r\n                        </Select>\r\n                    )}\r\n                </FormItem>\r\n                <FormItem\r\n                    label={<span>京东投诉账号</span>}\r\n                    labelCol={{ span: 7 }}\r\n                    wrapperCol={{ span: 14 }}\r\n                >\r\n                    {getFieldDecorator('JDcomplaiontId', {\r\n                        initialValue: JDcomplaiontId\r\n\r\n                    })(\r\n                        <Select\r\n                            mode=\"multiple\"\r\n                            filterOption={false}\r\n                            onBlur={(e) => onSelectBlur(e, 'jdList')}\r\n                            onSearch={(e) => fetchUser(e, 'jdList')}\r\n                            onSelect={(e, option) => onSelect(e, option, 'jdList', 'oldjdList')}\r\n                            onDeselect={(e, option) => onDeselect(e, option, 'jdList', 'oldjdList')}\r\n                            style={{ width: '100%' }}\r\n                        >\r\n\r\n                            <OptGroup label=\"已选中\">\r\n                                {\r\n                                    state.oldjdList.map((item, index) => {\r\n                                        return (\r\n                                            <Option key={item.id}>{`${item.title}:${item.username}`}</Option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </OptGroup>\r\n                            <OptGroup label=\"搜索结果\">\r\n                                {\r\n\r\n                                    state.jdList.map((item, index) => {\r\n                                        return (\r\n                                            <Option key={item.id}>{`${item.title}:${item.username}`}</Option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </OptGroup>\r\n\r\n                        </Select>\r\n                    )}\r\n                </FormItem>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n});\r\n\r\n\r\nexport default Tpl\r\n\r\n"],"sourceRoot":""}