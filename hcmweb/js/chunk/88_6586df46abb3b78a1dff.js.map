{"version":3,"sources":["webpack:///./app/widget/index/Brand/OrderInformation/tpl.js"],"names":["Option","RangePicker","clearIconStyle","width","height","opacity","cursor","Tpl","that","state","shopId","shopName","wangwang","startTime","endTime","orderId","status","expandedRowKeys","dataList","highPrice","lowPrice","pagination","columns","title","render","text","record","index","key","className","dataIndex","lowpriceStatus","marginLeft","moment","format","props","history","clearInputFn","bind","searchChange","trigger","parentNode","display","alignItems","handleSearch","id","showQuickJumper","current","pageNo","total","totalElements","pageSize","onChange","handlePageChange","handleExpand","indent","expanded","handleOrder","_detail"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAIA,IAAMA,SAAS,iBAAOA,MAAtB;AACA,IAAMC,cAAc,qBAAWA,WAA/B;;AAEA,IAAMC,iBAAiB;AACrBC,SAAO,MADc;AAErBC,UAAQ,MAFa;AAGrBC,WAAS,IAHY;AAIrBC,UAAQ;AAJa,CAAvB;;AAOA,IAAMC,MAAM,oBAAS,gBAAQ;AAAA,oBAkBvBC,KAAKC,KAlBkB;AAAA,MAEzBC,MAFyB,eAEzBA,MAFyB;AAAA,MAGzBC,QAHyB,eAGzBA,QAHyB;AAAA,MAIzBC,QAJyB,eAIzBA,QAJyB;AAAA,MAKzBC,SALyB,eAKzBA,SALyB;AAAA,MAMzBC,OANyB,eAMzBA,OANyB;AAAA,MAOzBC,OAPyB,eAOzBA,OAPyB;AAAA,MASzBC,MATyB,eASzBA,MATyB;AAAA,MAWzBC,eAXyB,eAWzBA,eAXyB;AAAA,MAazBC,QAbyB,eAazBA,QAbyB;AAAA,MAezBC,SAfyB,eAezBA,SAfyB;AAAA,MAgBzBC,QAhByB,eAgBzBA,QAhByB;AAAA,MAiBzBC,UAjByB,eAiBzBA,UAjByB;;;AAoB3B,MAAMC,UAAU,CACd;AACEC,WAAO,IADT;AAEEC,YAAQ,gBAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf;AAAA,aAAyBA,QAAQ,CAAjC;AAAA,KAFV;AAGEC,SAAK,OAHP;AAIEC,eAAW;AAJb,GADc,EAOd;AACEN,WAAO,MADT;AAEEO,eAAW,KAFb;AAGEN,YAAQ,gBAACC,IAAD,EAAOC,MAAP;AAAA,aACN;AAAC,aAAD,CAAO,QAAP;AAAA;;AAEI;AACAA,eAAOK,cAAP,IAAyB,CAAzB,GACA,2BAAG,WAAU,gBAAb,GADA,GAEA,IALJ;AAOE;AAAA;AAAA,YAAM,OAAO,EAACC,YAAW,EAAZ,EAAb;AAA+BP;AAA/B;AAPF,OADM;AAAA,KAHV;AAcEG,SAAK,WAdP;AAeEC,eAAW;AAfb,GAPc,EAwBd;AACEN,WAAO,MADT;AAEEO,eAAW,YAFb;AAGEN,YAAQ;AAAA,wBAAYC,IAAZ;AAAA,KAHV;AAIEG,SAAK,aAJP;AAKEC,eAAW;AALb,GAxBc,EA+Bd;AACEN,WAAO,MADT;AAEEO,eAAW,SAFb;AAGEN,YAAQ;AAAA,aAAQC,OAAKQ,OAAOR,IAAP,EAAaS,MAAb,CAAoB,qBAApB,CAAL,GAAgD,IAAxD;AAAA,KAHV;AAIEN,SAAK,UAJP;AAKEC,eAAW;AALb,GA/Bc;AAsCd;AACA;AACA;AACA;AACA;AACA;AACA;AACEN,WAAO,IADT;AAEEO,eAAW,QAFb;AAGEF,SAAK,SAHP;AAIEC,eAAW;AAJb,GA5Cc,EAkDd;AACEN,WAAO,MADT;AAEEO,eAAW,cAFb;AAGEN,YAAQ;AAAA,aAAQS,OAAOR,IAAP,EAAaS,MAAb,CAAoB,qBAApB,CAAR;AAAA,KAHV;AAIEN,SAAK,YAJP;AAKEC,eAAW;AALb,GAlDc,EAyDd;AACEN,WAAO,MADT;AAEEO,eAAW,QAFb;AAGEF,SAAK,QAHP;AAIEC,eAAW;AAJb,GAzDc,CAAhB;;AAiEA,SACE;AAAC,oBAAD;AAAA;AACE,sBAAgB,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CADlB;AAEE,gBAAU,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,CAFZ;AAGE,eAASrB,KAAK2B,KAAL,CAAWC;AAHtB;AAKE;AAAA;AAAA,QAAK,WAAU,2BAAf;AACE;AAAA;AAAA,UAAS,WAAU,kBAAnB;AACE;AAAA;AAAA,YAAK,WAAU,gBAAf;AACE;AAAA;AAAA,cAAM,WAAU,UAAhB;AAA4BzB;AAA5B,WADF;AAEE,wCAFF;AAGE;AAAA;AAAA,cAAM,WAAU,UAAhB;AAA4BC;AAA5B;AAHF,SADF;AAME;AAAA;AAAA,YAAK,WAAU,aAAf;AACI;AAAA;AAAA,cAAK,MAAM,CAAX,EAAc,WAAU,MAAxB;AACE;AAAA;AAAA;AAAA;AAAA,aADF;AAEE;AACE,sBACEG,YAAU,EAAV,GACA,IADA,GAEA;AACE,sBAAK,cADP;AAEE,yBAASP,KAAK6B,YAAL,CAAkBC,IAAlB,CAAuB9B,IAAvB,EAA6B,SAA7B,CAFX;AAGE,uBAAON;AAHT,gBAJJ;AAUE,wBAAUM,KAAK+B,YAAL,CAAkBD,IAAlB,CAAuB9B,IAAvB,EAA6B,SAA7B,EAAwC,OAAxC,CAVZ;AAWE,qBAAOO,OAXT;AAYE,2BAAY,oBAZd;AAaE,qBAAO,EAACZ,OAAM,GAAP,EAbT;AAFF,WADJ;AAkBI;AAAA;AAAA,cAAK,MAAM,CAAX,EAAc,WAAU,MAAxB;AACE;AAAA;AAAA;AAAA;AAAA,aADF;AAEE;AAAA;AAAA;AACE,0BAAUK,KAAK+B,YAAL,CAAkBD,IAAlB,CAAuB9B,IAAvB,EAA6B,QAA7B,EAAuC,QAAvC,CADZ;AAEE,8BAAcQ,MAFhB;AAGE,uBAAO,EAACb,OAAM,GAAP,EAHT;AAIE,mCAAmB;AAAA,yBAAWqC,QAAQC,UAAnB;AAAA;AAJrB;AAME;AAAC,sBAAD;AAAA,kBAAQ,OAAM,EAAd;AAAA;AAAA,eANF;AAOE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,0BAAd;AAAA;AAAA,eAPF;AAQE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,0BAAd;AAAA;AAAA,eARF;AASE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,0BAAd;AAAA;AAAA,eATF;AAUE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,gCAAd;AAAA;AAAA,eAVF;AAWE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,sCAAd;AAAA;AAAA,eAXF;AAYE;AAAC,sBAAD;AAAA,kBAAQ,OAAM,gCAAd;AAAA;AAAA;AAZF;AAFF,WAlBJ;AAoDI;AAAA;AAAA,cAAK,MAAM,CAAX,EAAc,WAAU,MAAxB;AACE;AAAA;AAAA;AAAA;AAAA,aADF;AAEE,gCAAC,WAAD;AACE,wBAAUjC,KAAK+B,YAAL,CAAkBD,IAAlB,CAAuB9B,IAAvB,EAA6B,EAA7B,EAAiC,MAAjC,CADZ;AAEE,qBAAO,EAACL,OAAM,GAAP,EAFT;AAGE,oCAAsB;AAAA,uBAAWqC,QAAQC,UAAnB;AAAA,eAHxB;AAIE,4BAAc5B,cAAY,EAAZ,GAAe,EAAf,GAAkB,CAACA,SAAD,EAAYC,OAAZ;AAJlC;AAFF,WApDJ;AA6DI;AAAA;AAAA,cAAK,MAAM,CAAX,EAAc,WAAU,MAAxB,EAA+B,OAAO,EAAC4B,SAAQ,MAAT,EAAgBC,YAAW,QAA3B,EAAtC;AACE;AAAA;AAAA;AAAA;AAAA,aADF;AAEE;AAAA,8BAAO,KAAP;AAAA,gBAAa,OAAO,EAACxC,OAAM,GAAP,EAApB;AACE;AAAA;AAAA,kBAAK,MAAM,EAAX;AACE;AACE,0BACEiB,aAAW,EAAX,GACA,IADA,GAEA;AACE,0BAAK,cADP;AAEE,6BAASZ,KAAK6B,YAAL,CAAkBC,IAAlB,CAAuB9B,IAAvB,EAA6B,UAA7B,CAFX;AAGE,2BAAON;AAHT,oBAJJ;AAUE,yBAAOkB,QAVT;AAWE,4BAAUZ,KAAK+B,YAAL,CAAkBD,IAAlB,CAAuB9B,IAAvB,EAA6B,UAA7B,EAAyC,OAAzC,CAXZ;AAYE,+BAAY,oBAZd;AADF,eADF;AAgBE;AAAA;AAAA,kBAAK,MAAM,EAAX;AACE;AACE,0BACEW,cAAY,EAAZ,GACA,IADA,GAEA;AACE,0BAAK,cADP;AAEE,6BAASX,KAAK6B,YAAL,CAAkBC,IAAlB,CAAuB9B,IAAvB,EAA6B,WAA7B,CAFX;AAGE,2BAAON;AAHT,oBAJJ;AAUE,yBAAOiB,SAVT;AAWE,4BAAUX,KAAK+B,YAAL,CAAkBD,IAAlB,CAAuB9B,IAAvB,EAA6B,WAA7B,EAA0C,OAA1C,CAXZ;AAYE,+BAAY,oBAZd;AADF;AAhBF;AAFF,WA7DJ;AAgGI,+CAAK,MAAM,CAAX,EAAc,WAAU,MAAxB,GAhGJ;AAiHI;AAAA;AAAA,cAAK,MAAM,CAAX,EAAc,WAAU,MAAxB;AACE;AAAA;AAAA,gBAAQ,WAAU,MAAlB,EAAyB,SAASA,KAAKoC,YAAvC;AAAA;AAAA;AADF;AAjHJ;AANF,OADF;AA6HE;AAAA;AAAA,UAAS,WAAU,uBAAnB;AACE;AAAA;AAAA;AACE,2EACyDlC,MADzD,iBAC2EK,OAD3E,oBACiGC,MADjG,mBACqHH,UAAUqB,MAAV,CAAiB,YAAjB,CADrH,kBACgKpB,QAAQoB,MAAR,CAAe,YAAf,CADhK,gBACuMd,QADvM,gBAC0ND,SAF5N;AAIE;AAAA;AAAA;AAAA;AAAA;AAJF,SADF;AAOE;AACE,qBAAU,OADZ;AAEE,kBAAQ;AAAA,mBAAUO,OAAOmB,EAAjB;AAAA,WAFV;AAGE,sBAAY;AACVC,6BAAiB,IADP;AAEVC,qBAAS1B,WAAW2B,MAFV;AAGVC,mBAAO5B,WAAW6B,aAHR;AAIVC,sBAAU9B,WAAW8B,QAJX;AAKVC,sBAAU5C,KAAK6C;AALL,WAHd;AAUE,sBAAYnC,QAVd;AAWE,mBAASI,OAXX;AAYE,oBAAUd,KAAK8C,YAZjB;AAaE,2BAAiBrC,eAbnB;AAcE,6BAAmB,2BAACS,MAAD,EAASC,KAAT,EAAgB4B,MAAhB,EAAwBC,QAAxB,EAAqC;AACtD,mBACE,oBAAC,mCAAD,IAAe,aAAahD,KAAKiD,WAAjC,EAA8C,MAAM/B,OAAOgC,OAAP,IAAkB,EAAtE,EAA0E,SAAShC,OAAOmB,EAA1F,GADF;AAGD;AAlBH;AAPF;AA7HF;AALF,GADF;AAkKD,CAvPW,CAAZ;;kBAyPetC,G","file":"js/chunk/88_6586df46abb3b78a1dff.js","sourcesContent":["import ThatMain from '../../../HOC/That'\r\nimport ContentBox from '../../../components/Layout'\r\nimport ExpandContent from '../../../components/OrderMonitorExpandContent'\r\n\r\nimport { Input, Select, DatePicker, Button, Row, Col, Icon, Table } from 'antd'\r\n\r\nconst Option = Select.Option\r\nconst RangePicker = DatePicker.RangePicker\r\n\r\nconst clearIconStyle = {\r\n  width: '14px',\r\n  height: '14px',\r\n  opacity: 0.25,\r\n  cursor: 'pointer'\r\n}\r\n\r\nconst Tpl = ThatMain(that => {\r\n  const {\r\n    shopId,\r\n    shopName,\r\n    wangwang,\r\n    startTime,\r\n    endTime,\r\n    orderId,\r\n    // shopInfo,\r\n    status,\r\n    // result,\r\n    expandedRowKeys,\r\n    // expanded,\r\n    dataList,\r\n    // buyerName,\r\n    highPrice,\r\n    lowPrice,\r\n    pagination,\r\n  } = that.state\r\n\r\n  const columns = [\r\n    {\r\n      title: '序号',\r\n      render: (text, record, index) => index + 1,\r\n      key: 'xuhao',\r\n      className: 'table-column-item',\r\n    },\r\n    {\r\n      title: '订单编号',\r\n      dataIndex: 'tid',\r\n      render: (text, record) => (\r\n        <React.Fragment>\r\n          {\r\n            // 异常待处理显示异常图标 0已处理正常 1待处理 2已处理异常\r\n            record.lowpriceStatus == 1 ?\r\n            <i className=\"exception-icon\"></i> :\r\n            null\r\n          }\r\n          <span style={{marginLeft:10}}>{text}</span>\r\n        </React.Fragment>\r\n      ),\r\n      key: 'order_num',\r\n      className: 'table-column-item',\r\n    },\r\n    {\r\n      title: '订单金额',\r\n      dataIndex: 'tradeMoney',\r\n      render: text => `￥${text}`,\r\n      key: 'order-money',\r\n      className: 'table-column-item',\r\n    },\r\n    {\r\n      title: '付款时间',\r\n      dataIndex: 'paytime',\r\n      render: text => text?moment(text).format('YYYY-MM-DD HH:mm:ss'):'--',\r\n      key: 'pay_time',\r\n      className: 'table-column-item',\r\n    },\r\n    // {\r\n    //   title: '买家昵称',\r\n    //   dataIndex: 'nick',\r\n    //   key: 'buy_name',\r\n    //   className: 'table-column-item',\r\n    // },\r\n    {\r\n      title: '地区',\r\n      dataIndex: 'strict',\r\n      key: 'address',\r\n      className: 'table-column-item',\r\n    },\r\n    {\r\n      title: '订单时间',\r\n      dataIndex: 'tradecreated',\r\n      render: text => moment(text).format('YYYY-MM-DD HH:mm:ss'),\r\n      key: 'order_time',\r\n      className: 'table-column-item',\r\n    },\r\n    {\r\n      title: '订单状态',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      className: 'table-column-item',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <ContentBox\r\n      breadcrumbList={['监控中心', '订单监控', '监控详情']}\r\n      linkList={['', '1', '']}\r\n      history={that.props.history}\r\n    >\r\n      <div className=\"order-information-wrapper\">\r\n        <section className=\"search-container\">\r\n          <div className=\"shopname-title\">\r\n            <span className=\"shopname\">{shopName}</span>\r\n            <i></i>\r\n            <span className=\"wangwang\">{wangwang}</span>\r\n          </div>\r\n          <Row className=\"row-content\">\r\n              <Col span={8} className=\"item\">\r\n                <span>订单编号</span>\r\n                <Input \r\n                  suffix={\r\n                    orderId===\"\"?\r\n                    null:\r\n                    <Icon\r\n                      type=\"close-circle\"\r\n                      onClick={that.clearInputFn.bind(that, 'orderId')}\r\n                      style={clearIconStyle}\r\n                    />\r\n                  }\r\n                  onChange={that.searchChange.bind(that, 'orderId', 'input')}\r\n                  value={orderId}\r\n                  placeholder=\"请输入\" \r\n                  style={{width:242}} />\r\n              </Col>\r\n              <Col span={8} className=\"item\">\r\n                <span>订单状态</span>\r\n                <Select\r\n                  onChange={that.searchChange.bind(that, 'status', 'select')}\r\n                  defaultValue={status}\r\n                  style={{width:242}}\r\n                  getPopupContainer={trigger => trigger.parentNode}\r\n                >\r\n                  <Option value=\"\">全部</Option>\r\n                  <Option value=\"交易成功\">交易成功</Option>\r\n                  <Option value=\"交易关闭\">交易关闭</Option>\r\n                  <Option value=\"创建关闭\">创建关闭</Option>\r\n                  <Option value=\"卖家已发货\">卖家已发货</Option>\r\n                  <Option value=\"等待买家付款\">等待买家付款</Option>\r\n                  <Option value=\"买家已付款\">买家已付款</Option>\r\n                </Select>\r\n              </Col>\r\n              {/* <Col span={8} className=\"item\">\r\n                <span>买家昵称</span>\r\n                <Input \r\n                  suffix={\r\n                    buyerName===\"\"?\r\n                    null:\r\n                    <Icon\r\n                      type=\"close-circle\"\r\n                      onClick={that.clearInputFn.bind(that, 'buyerName')}\r\n                      style={clearIconStyle}\r\n                    />\r\n                  }\r\n                  onChange={that.searchChange.bind(that, 'buyerName', 'input')}\r\n                  value={buyerName}\r\n                  style={{width:242}}\r\n                  placeholder=\"请输入\" />\r\n              </Col> */}\r\n              <Col span={8} className=\"item\">\r\n                <span>订单时间</span>\r\n                <RangePicker \r\n                  onChange={that.searchChange.bind(that, '', 'time')}\r\n                  style={{width:242}}\r\n                  getCalendarContainer={trigger => trigger.parentNode}\r\n                  defaultValue={startTime===''?[]:[startTime, endTime]}\r\n                />\r\n              </Col>\r\n              <Col span={8} className=\"item\" style={{display:'flex',alignItems:'center'}}>\r\n                <span>订单金额</span>\r\n                <Input.Group style={{width:242}}>\r\n                  <Col span={12}>\r\n                    <Input\r\n                      suffix={\r\n                        lowPrice===\"\"?\r\n                        null:\r\n                        <Icon\r\n                          type=\"close-circle\"\r\n                          onClick={that.clearInputFn.bind(that, 'lowPrice')}\r\n                          style={clearIconStyle}\r\n                        />\r\n                      }\r\n                      value={lowPrice}\r\n                      onChange={that.searchChange.bind(that, 'lowPrice', 'input')}\r\n                      placeholder=\"请输入\" />\r\n                  </Col>\r\n                  <Col span={12}>\r\n                    <Input\r\n                      suffix={\r\n                        highPrice===\"\"?\r\n                        null:\r\n                        <Icon\r\n                          type=\"close-circle\"\r\n                          onClick={that.clearInputFn.bind(that, 'highPrice')}\r\n                          style={clearIconStyle}\r\n                        />\r\n                      }\r\n                      value={highPrice}\r\n                      onChange={that.searchChange.bind(that, 'highPrice', 'input')}\r\n                      placeholder=\"请输入\" />\r\n                  </Col>\r\n                </Input.Group>\r\n              </Col>\r\n              <Col span={8} className=\"item\">\r\n                {/* <span>订单状态</span>\r\n                <Select\r\n                  onChange={that.searchChange.bind(that, 'status', 'select')}\r\n                  defaultValue={status}\r\n                  style={{width:242}}\r\n                  getPopupContainer={trigger => trigger.parentNode}\r\n                >\r\n                  <Option value=\"\">全部</Option>\r\n                  <Option value=\"交易成功\">交易成功</Option>\r\n                  <Option value=\"交易关闭\">交易关闭</Option>\r\n                  <Option value=\"创建关闭\">创建关闭</Option>\r\n                  <Option value=\"卖家已发货\">卖家已发货</Option>\r\n                  <Option value=\"等待买家付款\">等待买家付款</Option>\r\n                  <Option value=\"买家已付款\">买家已付款</Option>\r\n                </Select> */}\r\n              </Col>\r\n              <Col span={8} className=\"item\">\r\n                <Button className=\"btn6\" onClick={that.handleSearch}>查询</Button>\r\n              </Col>\r\n            </Row>\r\n        </section>\r\n        <section className=\"table-content-wrapper\">\r\n          <a \r\n            href={\r\n              `/hcm/hcmShopMonitor/getOrderShopListDownload?shopId=${shopId}&orderNo=${orderId}&orderState=${status}&firstDate=${startTime.format('YYYY-MM-DD')}&lastDate=${endTime.format('YYYY-MM-DD')}&fmoney=${lowPrice}&lmoney=${highPrice}`\r\n            }>\r\n            <Button>下载数据</Button>\r\n          </a>\r\n          <Table \r\n            className=\"table\"\r\n            rowKey={record => record.id}\r\n            pagination={{\r\n              showQuickJumper: true,\r\n              current: pagination.pageNo,\r\n              total: pagination.totalElements,\r\n              pageSize: pagination.pageSize,\r\n              onChange: that.handlePageChange,\r\n            }}\r\n            dataSource={dataList}\r\n            columns={columns}\r\n            onExpand={that.handleExpand}\r\n            expandedRowKeys={expandedRowKeys}\r\n            expandedRowRender={(record, index, indent, expanded) => {\r\n              return (\r\n                <ExpandContent handleOrder={that.handleOrder} data={record._detail || {}} orderId={record.id} />\r\n              )\r\n            }}\r\n          />\r\n        </section>\r\n      </div>\r\n    </ContentBox>\r\n  )\r\n})\r\n\r\nexport default Tpl"],"sourceRoot":""}